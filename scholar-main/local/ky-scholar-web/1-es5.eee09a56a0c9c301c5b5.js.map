{"version":3,"sources":["src/app/busi-services/statistics-log.service.ts","src/app/routes/course-manage/components/structure-adjustment/structure-adjustment.component.html","src/app/routes/course-manage/components/structure-adjustment/structure-adjustment.component.ts","node_modules/@ngrx/component-store/__ivy_ngcc__/fesm2015/ngrx-component-store.js","node_modules/rxjs/_esm2015/internal/util/not.js","node_modules/rxjs/_esm2015/internal/observable/partition.js","node_modules/rxjs/_esm2015/internal/operators/skipWhile.js","node_modules/rxjs/_esm2015/internal/operators/merge.js","src/app/routes/course-manage/components/other-setting/other-setting.store.service.ts","src/app/routes/course-manage/components/other-setting/other-setting.component.html","src/app/routes/course-manage/components/other-setting/other-setting.component.ts","src/app/routes/course-manage/components/structure-adjustment/structure-adjustment-chapter/structure-adjustment-chapter.component.ts","src/app/routes/course-manage/components/structure-adjustment/structure-adjustment-chapter/structure-adjustment-chapter.component.html","src/app/routes/course-manage/components/other-setting/new-level/new-level.component.ts","src/app/routes/course-manage/components/other-setting/new-level/new-level.component.html","src/app/routes/course-manage/components/chapter-handout/video-import/video-import.component.ts","src/app/routes/course-manage/components/chapter-handout/video-import/video-import.component.html","src/app/routes/course-manage/components/upload-handout/upload-handout.component.ts","src/app/routes/course-manage/components/upload-handout/upload-handout.component.html","src/app/routes/course-manage/components/chapter-handout/chapter-handout.component.html","src/app/routes/course-manage/components/chapter-handout/chapter-handout.component.ts","core/services/upload-oss.service.ts","src/app/routes/course-manage/components/other-setting/new-company/new-company.component.ts","src/app/routes/course-manage/components/other-setting/new-company/new-company.component.html","src/app/routes/course-manage/components/school-zone/school-zone.component.ts","src/app/routes/course-manage/components/school-zone/school-zone.component.html","src/app/routes/course-manage/components/other-setting/reward-settings/reward-settings.component.ts","src/app/routes/course-manage/components/other-setting/reward-settings/reward-settings.component.html","src/app/routes/course-manage/components/other-setting/edit-lesson/edit-lesson.component.ts","src/app/routes/course-manage/components/other-setting/edit-lesson/edit-lesson.component.html","src/app/routes/course-manage/components/structure-adjustment/structure-adjustment-section/structure-adjustment-section.component.ts","src/app/routes/course-manage/components/structure-adjustment/structure-adjustment-section/structure-adjustment-section.component.html","src/app/routes/course-manage/components/structure-adjustment/structure-adjust-tree/structure-adjust-tree.component.html","src/app/routes/course-manage/components/structure-adjustment/structure-adjust-tree/structure-adjust-tree.component.ts","src/app/routes/course-manage/components/complete-course/complete-course.component.html","src/app/routes/course-manage/components/complete-course/complete-course.component.ts","src/app/routes/course-manage/components/flex-table/flex-table.component.ts","src/app/routes/course-manage/components/course-data/course-data.component.ts","src/app/routes/course-manage/components/search-table/search-table.component.ts","src/app/routes/course-manage/components/resolver-data/resolver-data.component.ts","src/app/routes/course-manage/components/course-structure-tree/course-structure-tree.component.ts","src/app/routes/course-manage/components/course-structure-tree/course-structure-tree.component.html","core/decorators/index.ts","src/app/routes/course-manage/components/intellectual-adaptation/intellectual-adaptation.component.html","src/app/routes/course-manage/components/intellectual-adaptation/intellectual-adaptation.component.ts"],"names":["StatisticsLogService","http","param","packetInfo","getPacketInfo","status","this","postBody","recordControlUrl","businessCode","businessId","orgCode","getOrgCode","source","informationId","pcode","userName","getUser","userId","getUserId","isCommonHttpHeader","subscribe","pageListUrl","$event","stopPropagation","StructureAdjustmentComponent","route","courseMgService","nzMesService","nzModalService","uploadOssService","fb","modalService","courseId","coursePacketId","packageName","isStandard","preview","nodes","isVisible","fileList","loading","afterOpen","downTemplateLoading","knowledgeGraphLoading","chapterExportLoading","initParams","res","localUploadChapter","patchValue","chapterUrl","qkcupload","nzFileList","unsubscribe","id","isUsed","name","getChapter","group","length","chapter","children","getList_courseChapter","data","forEach","active","sectionChange","node","getList_courseSection","isLoading","setChapter","getSection","curChapter","isRename","create","nzTitle","nzContent","nzComponentParams","formData","nzMaskClosable","nzFooter","afterClose","chapterIdx","findIndex","chapterItem","splice","section","confirm","nzOnOk","Promise","resolve","reject","delTreeNode","error","message","sectionIdx","sectionItem","params","chapters","seq","sections","map","item","index","sort","save_courseChapter","JSON","stringify","event","previousIndex","currentIndex","modalFormRef","localuploadmodal","nzWrapClassName","nzCancelText","nzOkText","nzAfterOpen","e","value","warning","excelImportChapter","fileUrl","err","packetChapterExport","resp","link","document","createElement","url","URL","createObjectURL","body","setAttribute","style","visibility","appendChild","click","removeChild","loadingControl","synchronizedKnowledge","thisObj","uploadOss","file","knowledge_file","result","onSuccess","onError","getFileType","observe","next","that","exportExcel","chapterDrop","title","content","type","debounceSync","Observable","observer","actionSubscription","actionValue","rootSubscription","Subscription","add","complete","asap","schedule","ComponentStore","initialStateToken","defaultState","destroySubject$","ReplaySubject","destroy$","asObservable","stateSubject$","isInitialized","notInitializedErrorMessage","constructor","state$","select","s","initState","updaterFn","observableOrValue","initializationError","subscription","isObservable","of","pipe","concatMap","scheduled","queue","withLatestFrom","throwError","Error","takeUntil","currentState","state","stateOrUpdaterFn","updater","partialStateOrUpdaterFn","setState","patchedState","Object","assign","projector","take","args","selectorArgs","Array","from","config","debounce","projectorOrConfig","pop","observables","source$","combineLatest","projectorArgs","distinctUntilChanged","shareReplay","refCount","bufferSize","generator","origin$","Subject","ɵfac","t","ɵprov","token","factory","tapResponse","nextFn","errorFn","completeFn","tap","catchError","not","pred","thisArg","notPred","apply","arguments","partition","predicate","filter","subscribeTo","skipWhile","lift","SkipWhileOperator","subscriber","destination","super","skipping","tryCallPredicate","Boolean","Subscriber","call","merge","OtherSettingStoreService","courseManageService","statisticsLogService","searchLoad","exam","intelligent","subQuestionBankCurrent","subQuestionBankCurrentPre","subQuestionBank","subQuestionBankInt","listSublibrary","subQuestionBankIntCurrent","subQuestionBankIntCurrentPre","moduleArr","levelLists","companyLists","listOfData","idMap","breakthroughMode","practiceOn","isBet","knowledgeNum","packetInfo$","listSublibrary$","listOfData$","moduleArr$","levelLists$","companyLists$","knowledgeNum$","idMap$","subQuestionBankCurrentPre$","subQuestionBank$","subQuestionBankIntCurrentPre$","subQuestionBankInt$","vm$","setPacketInfo","setLoading","loadObj","getLevel","effect","data$","switchMap","isCard","levelList","a","b","coursePacketCardRecourseList","patchState","getCompany","is99Train","setBreakthroughMode","setPracticeOn","setIsBet","teacherType","getSubLibrary","quebankType","listSublibraryBak","Number","quebankId","busType","String","parse","getLessonCountTable","teachType","getLessonPackageTable","ii","lessonCount","getSubQuestionBank","getAjax","environment","questionBankApi","courseCode","code","resultS","resP","bak","reduce","itemX","sublibraryModuleList","itemIn","concat","itemY","itemP","conversionNode","createTime","dellistSublibraryItem","delSubLibrary","deleteGift","param$","levelDataDeletion","statisticsPacketInfoLog","actionCode","modify","levelDeletion","delCode","companyDeletion","delTable","dataInit","getKnowledgeNum","getKnos","knowledgeSubjectId","num","subQuestionBankChange","success","failed","list","getTreeNodeByKey","callSubLibrary","origin","quebankName","getMaxSeq","quebankModuleType","current","pre","every","i","indexOf","generateLessonsReal","lessonPackage","addCode","generateLessonsEffect","generateLessonsAlert","newClass","$data","max","saveTable","addLevelEffect","levelItem","nzWidth","flag","addCompanyEffect","companyItem","rewardSettings","itemx","indexx","thumbUrl","professionId","currentCard","listDrop","label","arr","push","sortSubQuestionBank","breakthroughModeChange","val","isCardUpdate","putPacketInfoItem","practiceOnChange","is99TrainUpdate","isBetChange","isBetUpdate","child","iii","key","isLeaf","disabled","selectable","otherSettingStoreService","OtherSettingComponent","ossUrl","OSS_URL","getPacketInfoItem","knoNumLimit","percent","Math","trunc","treeSelect","treeSelectInt","StructureAdjustmentChapterComponent","nzModalRef","lock","formGroup","required","maxLength","keys","controls","markAsDirty","updateValueAndValidity","invalid","postData","close","save","cancel","NewLevelComponent","newLevelLoading","paperArr","totalTestPaperScore","paperIdToName","examIdToPaperUUId","newLevelForm","newLevel","testPaperName","complianceConditions","levelId","getSubmodule","getPapers","then","obj","passScore","examId","split","paperUuid","change","putSubmodule","postAjax","sublibraryModuleIdList","pageNum","pageSize","rows","markAsUntouched","markAsPristine","itemPaper","examName","hasOwnProperty","addCoursePacketCard","edit","paper","score","testPaperNameChange","VideoImportComponent","menuService","aliOssService","knowledgeManageService","renderer2","trainManageService","sanitizer","locale","win","videoImportLoading","removeFileSelf","videoImportForm","videoUrl","beforeVideoUpload","customVideoRequest","exportExcelVideo","excelImportVideo","downTemplate","UploadHandoutComponent","nzMsg","files","acceptTypeFile","acceptType","desc","acceptTypeFiles","deafult","courseTimeDivision","limit","learningTarget","setAcceptType","destroy","formatPostData","batchSave_courseChapterFile","batchSave_courseSectionTaskFile","batchSave_courseSectionFile","batchSave_courseTimeFile","courseChapterId","attachmentName","attachmentPath","path","aattachmentExt","getExt","courseSectionId","sourceType","learningGoalCode","isNeed","downloadType","gradeType","taskType","courseTimeId","ChapterHandoutComponent","doc","_PAGE_ID_","active1","active2","active3","active4","listLoading","hanoutLoading","totalPage","handouts","taskList","handoutsMaterial","handoutsLecture","handoutsRecording","teacherList","exercise","examSearch","exerciseSearch","examListPreview","exerciseListPreview","listOfDataExercise","listOfQuestionnaireData","listOfEvaluationData","selectedValue","examSubQuestionBankExam","examSubQuestionBankExamBak","homeworkSubQuestionBank","homeworkSubQuestionBankBak","testPaperId","testExerciseName","testExerciseId","NumberS","isPreviewpolyway","answerTimesValue","isQuestionnaireVisible","visibleAssociate","assocateList","tokenObj","getTkToken","currentExam","currentQuestionnair","currentBindLength","exerciseType","isSmart","assocateLists","assocateClassLists","defaultExpandedKeys","examType","reset","resourceUrl","questionnairePreview","evaluationPreview","isCallLoading","examSettingLoading","bindLoading","instructorLoading","trainLoading","queryKeywords","queryKeywordsJob","previewTitle","previewStart","limitTask","bingLimit","associateing","curJobData","curExamData","currentSession","getSelection","defaultSection","currentChapter","initFrom","getExamination","questionnaireSetting","answerTimes","questionnairSettingForm","is","examSetting","examSettingForm","getTaskList","successFn","failFn","ee","saveOrUpdateTask","saveOrUpdate","console","log","examLength","paperType","isRedo","computerType","resultWay","configType","getTeacher","addJobFromSeting","taskForm","addExamFrom","missionName","formingMethod","polyway","authorId","videoType","localVideo","auditStatus","curNode","isDownloadType","sectionFileList_courseSectionFile","getTypeData","ext","getFileExt","isMainFile","getssocateList","currentAssocate","sectionSeq","isBindAssoicate","innerArr","handout","polywayId","previewpolyway","field","maxSize","getHandoutFiles","setSelection","task","del_courseSectionFileTask","del_courseSectionFile","getDescType","w","resT","ifMainFile","work","modifySectionResource","needTeacherProc","modifySectionResourceTask","isGrade","isTask","getLabel","comfirmUpload","nzOnCancel","getParams","getDuration","videoLength","getVideoLength","duration","storingData","resourceId","attachmentExt","authorName","eee","ptime","Date","getTime","vids","sign","secretkey","toUpperCase","userid","tasks","el","taskId","sectionInfo","putScpResourceMaterial","removeReadtree","removeCasetree","removeTrainTree","gotoUrl","paramUrl","pathArr","downloadFile","codeUid","getProdIdSync","proId","groupWay","isNotTaskType","sublibraryModuleIds","join","resS","selected","getPracSubquestionbank","modalRef","jobSettingsEdit","jobSettings","realSave","sublibraryModuleId","userPhone","syncParams","mobile","postTaskList","paperId","getExamSubquestionbank","addExamExit","addExam","job","questionBank","newTestPaper","resul","getCallList","getViewUrlWebPath","wps","WebOfficeSDK","wpsUrl","iframe","display","ready","wpsApplication","Application","stack","Stack","ActivePresentation","Slides","Count","ifNeed","linkId","courseTaskId","saveAssocateList","ifExercise","open","refreshToken","entryExercises","addVolume","otherEdit","str","previewTraining","previewExaminationPaper","previewHandout","preventDefault","decide","boundTask","handoutPageNumberRelatedTasks","fn","getElementById","getApp","getBlur","delBind","parentNode","End","getAccountPeriodId","getPracticalDetail","accountId","window","videoUpload","hour","minute","evaluationType","questionnaireType","evaluationName","questionnaireName","typeId","evaluateId","checkData","putExamSubquestionbank","putPracSubquestionbank","bakLabel","parseFloat","toString","getExamType","nodeChange","sectionDrop","queryKeywordsChange","subQuestionBankChangeSearch","queryKeywordsJobChange","closeQuestionnaire","questionnaireCall","newQuestionnaire","paperTypeChange","clearStatus","completebind","UploadOssService","httpService","httpClient","uploadDir","post","dir","uploadData","customReq","FormData","getRandomFileName","append","accessKeyId","policy","signature","req","reportProgress","request","UploadProgress","NewCompanyComponent","newCompanyLoading","beforeUpload","pass","newCompanyForm","filePath","customRewardRequest","company_file","termType","fileName","permission","uid","addCoursePacketCompany","SchoolZoneComponent","cdr","opts","selectedValues","expandKeys","checkAll","schoolZone","dataLength","dataPLength","onModelChange","_","collegeList","values","setExpandKeys","detectChange","isDisabled","formatOpts","emit","area","typeCode","typeName","chlidren","school","oCode","orgName","setModalChange","tmpSelectedValues","tmpExpandedkeys","childNode","Set","idx","it","cur","startsWith","schoolKeys","find","prototype","markForCheck","provide","useExisting","multi","selectedChange","checkAllStatus","RewardSettingsComponent","rewardSettingsLoading","nzFileListBak","reward_file","coursePacketCardId","iP","originFileObj","levelInformationBatchUpload","diffFileChange","resourceCall","EditLessonComponent","editLessonLoading","courseForm","StructureAdjustmentSectionComponent","maxSeq","sectionId","getSeq","StructureAdjustTreeComponent","injector","isDraggable","isPermittedDrag","emptyChapter","isAddModel","expandedKeys","beforeDrop","arg","isOk","dragNode","pos","snapshot","paramMap","get","evt","eventName","activedNode","isEdit","cacheTitle","treeNodes","treeCom","getTreeNodes","treeOpts","resort","transformPostTreeData","renderTree","getChildren","isExpanded","editTitle","trim","checkList","checkRepeatedName","saveNode","remove","_level","getCourseChapterTreeNode","isPermitAdd","treeOpt","createRandomNodeKey","includes","addChildren","tree","tmpOpts","recurTree","transformSectionTreeNodes","level","ele","tmp","show","transformTreeNodes","excludeIds","nzEvent","CompleteCourseComponent","quebankNum","authorNum","sectionNum","teachDemoNum","getDetails","studySet","FlexTableComponent","CourseDataComponent","SearchTableComponent","ResolverDataComponent","limitHeight","dom","clientHeight","height","timer","pageIndex","page","searchWord","dateRange","total","routeConfig","searchKey","filterKey","startTime","endTime","startBillDate","endBillDate","queryFilterType","getCourseListNew","totalResult","searchWordVal","dateRangeVal","selectedVal","subject","subscribeChange","initData","collectParam","sybcParam","removeData","searchData","resetData","getDataList","now","resetInit","getSearch","passData","debounceTime","putSearch","clearSearch","courseListData","ret","putPageInfo","removePageInfo","CourseStructureTreeComponent","selectedKeys","chapterSelectable","sendNodeChange","setTimeout","treeNode","childrenNodes","getSetChange","getSetCall","target","propertyValue","initValue","fill","floor","random","defineProperty","newValue","set","initSet","ConfirmableDesc","descriptor","original","replaceXxxField","conditionField","conditionResult","conditionTitleReplace","conditionContentReplace","condition","resultCondition","resultContent","replace","ConfirmableFlat","nzBodyStyle","modal","watchTool","updateConfig","nzOkLoading","IntellectualAdaptationComponent","teacherData","defaultTreeKey","knowledgePointIds","clickFlag","chapterBindingVisible","isDailyOn","isSprintOn","isFinalOn","defaultTeacherId","dataSet","applicableZeroBasis","applicableExperts","applicableHasAFoundation","bindList","untieLoading","totalSectionNum","knowledgeGraphStructureVisible","lessonPackageStructureVisible","defaultChapter","examTimeRequire","adaptive","middleWeekNum","juniorWeekNum","seniorWeekNum","examTime","finalTime","sprintTime","getLessonPackage","getChapterBindList","isComputer","deadTime","teacherDtoList","intellectualAdaptation","teacherId","applicableZeroBasisWeekPre","applicableZeroBasisWeek","applicableHasAFoundationWeekPre","applicableHasAFoundationWeek","applicableExpertsWeekPre","applicableExpertsWeek","setLessonPackage","paramsKey","sectionName","chapterSeq","knowledgeUnits","chapterId","bindKnowledgePointsBatch","chapterBindingEdit","idR","getKnowledgePoints","knowledgeUnitId","selectId","knowledgeUnitIdList","nodeOpt","kType","eeee","date","checkAndSave","setValue","checkPlan","finalTimePre","sprintTimePre","unbindKnowledgePoints","itemIndex","knoArr","exportExcelKno","timeOpen","timeChange","bindKnowledgePoints","initIntellectualAdaptationData","isSmartUpdate"],"mappings":"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","sourceRoot":"webpack:///","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {HttpService} from 'core/services/http.service';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {environment} from 'src/environments/environment';\r\nimport {ServicesModule} from '@app/service/service.module';\r\nimport {Observable} from 'rxjs';\r\nimport {map} from 'rxjs/internal/operators';\r\nimport {\r\n  AreaZkDataType,\r\n  CommonData, CommonPagination, CommonStructure,\r\n  CourseListDataType, CourseListParams,\r\n  CourseServiceProviderType, NewMajorTypeParams\r\n} from 'core/base/common';\r\nimport {STATISTICALRULES} from '../../../core/base/static-data';\r\nimport {SessionStorageUtil} from '../../../core/utils/sessionstorage.util';\r\nimport {LocalStorageUtil} from '../../../core/utils/localstorage.util';\r\n\r\n@Injectable({\r\n  providedIn: ServicesModule\r\n})\r\nexport class StatisticsLogService {\r\n\r\n  constructor(private http: HttpService) {\r\n  }\r\n\r\n  statisticsPacketInfoLog(param) {\r\n    const packetInfo = SessionStorageUtil.getPacketInfo();\r\n    if (packetInfo.status === '1') {\r\n      const options = {isCommonHttpHeader: true};\r\n      this.http.postBody(STATISTICALRULES.recordControlUrl, {\r\n        ...param,\r\n        businessCode: STATISTICALRULES.packetInfo.businessId,\r\n        orgCode: ToolsUtil.getOrgCode(),\r\n        source: 1,\r\n        informationId: packetInfo.pcode,\r\n        userName: LocalStorageUtil.getUser().userName,\r\n        userId: LocalStorageUtil.getUserId()\r\n      }, options).subscribe(() => {\r\n      }, () => {\r\n      });\r\n    }\r\n  }\r\n\r\n  packageOperatLog(param) {\r\n    const url = STATISTICALRULES.pageListUrl;\r\n    const options = {isCommonHttpHeader: true};\r\n    return this.http.postBody(url, param, options);\r\n  }\r\n}\r\n\r\n","<div class=\"container\">\r\n  <div *ngIf='preview===\"1\"&&!nodes.length' class='not-content'>\r\n    该课包尚未建立章节内容\r\n  </div>\r\n  <div class=\"operation-button\">\r\n    <button nz-button nzType=\"primary\" style='margin-right:20px;' (click)='chapterImport()'\r\n            *ngIf='(!isStandard)&&preview===\"0\"'>excel导入章节\r\n    </button>\r\n    <button nz-button nzType=\"primary\" (click)='knowledgeGraph()' style='margin-right:20px;' [nzLoading]='knowledgeGraphLoading' *ngIf='(!isStandard)&&preview===\"0\"'>知识图谱导入章节</button>\r\n    <button nz-button nzType=\"primary\" (click)='chapterExport()' [nzLoading]='chapterExportLoading' *ngIf='preview===\"0\"'>章节导出</button>\r\n  </div>\r\n  <nz-collapse\r\n    [style]=\"{ border: 'none', 'background-color': '#fff'}\"\r\n    cdkDropList\r\n    [style.cursor]='(!isStandard)&&preview===\"0\"?\"inherit\":\"not-allowed\"'\r\n    (cdkDropListDropped)=\"chapterDrop($event)\">\r\n    <nz-collapse-panel\r\n      *ngFor=\"let node of nodes;let idx=index;\"\r\n      [style.cursor]='(!isStandard)&&preview===\"0\"?\"inherit\":\"not-allowed\"'\r\n      class=\"collapse-panel\"\r\n      [(nzActive)]=\"node.active\"\r\n      [nzHeader]=\"panelHeaderTpl\"\r\n      [nzExtra]=\"panelExtraTpl\"\r\n      (nzActiveChange)=\"sectionChange(node)\"\r\n      cdkDrag\r\n    >\r\n      <ng-template #panelHeaderTpl>\r\n        <span [style.cursor]='(!isStandard)&&preview===\"0\"?\"inherit\":\"not-allowed\"'>\r\n              <span style=\"margin-right: 20px;\">第{{ idx + 1}}章</span>\r\n              <span>{{ node.name}}</span>\r\n        </span>\r\n      </ng-template>\r\n      <ng-template #panelExtraTpl>\r\n        <a (click)=\"$event.stopPropagation();addChapter(node);\" *ngIf=\"preview==='0'\">\r\n          <i nz-icon nzType=\"edit\" nzTheme=\"outline\"></i>\r\n          重命名\r\n        </a>\r\n        <a [style]=\"{ color: '#f53131', 'margin-left': '20px'}\" (click)=\"$event.stopPropagation();delChapter(node);\"\r\n           *ngIf=\"(!isStandard)&&preview==='0'\">\r\n          <i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>\r\n          删除\r\n        </a>\r\n      </ng-template>\r\n      <div class=\"list\" cdkDropList (cdkDropListDropped)=\"sectionDrop($event)\"\r\n           [style.cursor]='(!isStandard)&&preview===\"0\"?\"inherit\":\"not-allowed\"'>\r\n        <ng-container *ngFor=\"let item of node.children;let sectionIdx=index;\">\r\n          <div class=\"list-item\" cdkDrag [style.cursor]='(!isStandard)&&preview===\"0\"?\"inherit\":\"not-allowed\"'>\r\n            <div>\r\n              <span style=\"margin-right: 20px;\">{{ idx + 1}}.{{ sectionIdx + 1 }}节</span><span>{{ item.name}}</span>\r\n            </div>\r\n            <div class=\"action-group\">\r\n              <a nz-button nzType=\"link\" (click)=\"addSection(node, item)\" *ngIf=\"preview==='0'\">\r\n                <i nz-icon nzType=\"edit\" nzTheme=\"outline\"></i>\r\n                重命名\r\n              </a>\r\n              <a nz-button nzType=\"link\" [style]=\"{ color: '#f53131'}\" (click)=\"delSection(node, item)\"\r\n                 *ngIf=\"(!isStandard)&&preview==='0'\">\r\n                <i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>\r\n                删除\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n        <div class=\"add-section\" *ngIf=\"(!isStandard)&&preview==='0'\">\r\n          <div>\r\n            <a nz-button nzType=\"link\" (click)=\"addSection(node, null)\">\r\n              <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\r\n              添加小节\r\n            </a>\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </nz-collapse-panel>\r\n  </nz-collapse>\r\n  <button *ngIf=\"(!isStandard)&&preview==='0'\" nz-button nzType=\"primary\" nzBlock [nzSize]=\"'large'\"\r\n          (click)=\"addChapter(null)\">\r\n    <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\r\n    新增章\r\n  </button>\r\n</div>\r\n\r\n\r\n<ng-template #localuploadmodal>\r\n  <form nz-form [formGroup]=\"localUploadChapter\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired style='max-width:100px;'>章节结构</nz-form-label>\r\n      <nz-form-control style='position:relative;'>\r\n        <nz-spin [nzSpinning]=\"loading\"\r\n                 [nzDelay]=\"0\">\r\n          <nz-upload\r\n            class=\"upload-list-inline-strure\"\r\n            nzListType=\"picture\"\r\n            [nzShowUploadList]=' { showPreviewIcon: false, showRemoveIcon: true, showDownloadIcon: false }'\r\n            [nzFileList]=\"false\"\r\n            [nzRemove]='removeFileSelf()'\r\n            [nzBeforeUpload]=\"beforeChapterUpload()\"\r\n            [nzCustomRequest]=\"customChapterRequest()\"\r\n            #qkcupload\r\n          >\r\n            <button nz-button [disabled]='this.localUploadChapter.value.chapterUrl===\"\"?false:true'\r\n                    style='margin-bottom: 20px;'>\r\n                    <span><i nz-icon\r\n                             nzType=\"upload\" style='font-size:20px;'></i>上传文件</span>\r\n            </button>\r\n          </nz-upload>\r\n          <div style='position: absolute;top: 35px;'>excel导入章节同时将会清除已有的章节结构！</div>\r\n          <button nz-button style='position:absolute;left:126px;top:0;' (click)='downTemplate()' [nzLoading]='downTemplateLoading'>\r\n                    <span><i nz-icon\r\n                             nzType=\"snippets\" style='font-size:20px;margin-right:20px'\r\n                             nzTheme=\"outline\"></i>模板下载</span>\r\n          </button>\r\n        </nz-spin>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n\r\n\r\n\r\n\r\n\r\n","import {Component, EventEmitter, Input, OnInit, TemplateRef, ViewChild, OnDestroy} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NzModalRef, NzModalService} from 'ng-zorro-antd/modal';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {StructureAdjustmentSectionComponent} from './structure-adjustment-section/structure-adjustment-section.component';\r\nimport {StructureAdjustmentChapterComponent} from './structure-adjustment-chapter/structure-adjustment-chapter.component';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {Observable} from 'rxjs';\r\nimport {UploadXHRArgs} from 'ng-zorro-antd';\r\nimport {UploadDir} from 'core/utils/uploadDir';\r\nimport {UploadOssService} from 'core/services/upload-oss.service';\r\nimport {environment} from '../../../../../environments/environment';\r\nimport {HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {ConfirmableFlat} from '../../../../../../core/decorators';\r\nimport {LoadingControl} from '../../../../../../core/base/common';\r\n\r\n@Component({\r\n  selector: 'app-structure-adjustment',\r\n  templateUrl: './structure-adjustment.component.html',\r\n  styleUrls: ['./structure-adjustment.component.less']\r\n})\r\nexport class StructureAdjustmentComponent implements OnInit, OnDestroy {\r\n  courseId = '';\r\n  coursePacketId = '';\r\n  packageName = '';\r\n  isStandard = false;\r\n  preview = '0';\r\n  nodes = [];\r\n  curChapter: any;\r\n  isVisible = false;\r\n  fileList = [];\r\n  localUploadChapter: FormGroup;\r\n  loading = false;\r\n  modalFormRef: NzModalRef;\r\n  afterOpen = new EventEmitter<void>();\r\n  downTemplateLoading = false;\r\n  knowledgeGraphLoading = false;\r\n  chapterExportLoading = false;\r\n  @ViewChild('localuploadmodal') localuploadmodal: TemplateRef<any>;\r\n  @ViewChild('qkcupload') qkcupload;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private courseMgService: CourseManageService,\r\n    private nzMesService: NzMessageService,\r\n    private nzModalService: NzModalService,\r\n    private uploadOssService: UploadOssService,\r\n    private fb: FormBuilder,\r\n    private modalService: NzModalService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initParams();\r\n    this.afterOpen.subscribe(res => {\r\n      this.localUploadChapter.patchValue({\r\n        chapterUrl: '',\r\n      });\r\n      this.qkcupload.nzFileList = [];\r\n    });\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.afterOpen.unsubscribe();\r\n  }\r\n\r\n  initParams() {\r\n    const {courseId, id, status, preview, isUsed ,name} = SessionStorageUtil.getPacketInfo();\r\n    this.courseId = courseId;\r\n    this.coursePacketId = id;\r\n    this.packageName = name;\r\n    this.isStandard = isUsed > 0;\r\n    this.preview = preview;\r\n    this.getChapter();\r\n    this.localUploadChapter = this.fb.group({\r\n      chapterUrl: [''],\r\n    });\r\n  }\r\n\r\n  checkStructure(): boolean {\r\n    if (this.nodes.length === 0) {\r\n      return false;\r\n    }\r\n    for (const chapter of this.nodes) {\r\n      if (chapter.children && chapter.children.length === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n  getChapter(): void {\r\n    this.courseMgService.getList_courseChapter(this.coursePacketId).subscribe(res => {\r\n      if (res.status === 200) {\r\n        (res.data as any[]).forEach(data => {\r\n          data.active = false;\r\n        });\r\n        this.nodes = res.data;\r\n        if (this.nodes.length > 0) {\r\n          this.nodes[0].active = true;\r\n          this.sectionChange(this.nodes[0]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getSection(node: any): void {\r\n    this.courseMgService.getList_courseSection(node.id).subscribe(res => {\r\n      if (res.status === 200) {\r\n        node.children = res.data;\r\n      } else {\r\n        node.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  sectionChange(chapter: any) {\r\n    this.setChapter(chapter);\r\n    if (!chapter.children || chapter.children.length === 0) {\r\n      this.getSection(chapter);\r\n    }\r\n  }\r\n\r\n  setChapter(chapter: any) {\r\n    this.curChapter = chapter;\r\n  }\r\n\r\n  addChapter(chapter: any) {\r\n    const isRename = chapter ? true : false;\r\n    const title = isRename ? '重命名章' : '新增章';\r\n    const param = {\r\n      nzTitle: title,\r\n      nzContent: StructureAdjustmentChapterComponent,\r\n      nzComponentParams: {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        data: this.nodes,\r\n        formData: chapter\r\n      },\r\n      nzMaskClosable: false,\r\n      nzFooter: null\r\n    };\r\n    const modalRef = this.nzModalService.create<StructureAdjustmentChapterComponent, any>(param);\r\n    modalRef.afterClose.subscribe(res => {\r\n      if (!res) {\r\n        return;\r\n      }\r\n      if (isRename) {\r\n        const {name} = res;\r\n        chapter.name = name;\r\n      } else {\r\n        if (!res.active) {\r\n          res.active = true;\r\n        }\r\n        const chapterIdx = this.nodes.findIndex(chapterItem => chapterItem.id === res.id);\r\n        const startIdx = chapterIdx === -1 ? this.nodes.length : chapterIdx;\r\n        const delCount = chapterIdx === -1 ? 0 : 1;\r\n        this.nodes.splice(startIdx, delCount, res);\r\n      }\r\n    });\r\n  }\r\n\r\n  addSection(node: any, section: any) {\r\n    this.setChapter(node);\r\n    const title = section ? '重命名节' : '新增节';\r\n    const modalRef = this.nzModalService.create<StructureAdjustmentSectionComponent, any>({\r\n      nzTitle: title,\r\n      nzContent: StructureAdjustmentSectionComponent,\r\n      nzComponentParams: {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        data: node,\r\n        formData: section\r\n      },\r\n      nzMaskClosable: false,\r\n      nzFooter: null\r\n    });\r\n    modalRef.afterClose.subscribe(res => {\r\n      if (!res) {\r\n        return;\r\n      }\r\n      this.getSection(this.curChapter);\r\n    });\r\n  }\r\n\r\n  delSection(node: any, section: any) {\r\n    this.setChapter(node);\r\n    this.nzModalService.confirm({\r\n      nzTitle: '警告',\r\n      nzContent: `确定要删除${section.name}吗`,\r\n      nzOnOk: () => {\r\n        return new Promise((resolve, reject) => {\r\n          this.courseMgService.delTreeNode(section.id, 'section').subscribe(res => {\r\n            if (res.status !== 204) {\r\n              this.nzMesService.error(res.message);\r\n              resolve(false);\r\n              return;\r\n            }\r\n            const sectionIdx = node.children.findIndex(sectionItem => sectionItem.id === section.id);\r\n            node.children.splice(sectionIdx, 1);\r\n            const params = {\r\n              courseId: this.courseId,\r\n              coursePacketId: this.coursePacketId,\r\n              chapters: [\r\n                {\r\n                  id: this.curChapter.id,\r\n                  seq: this.curChapter.seq,\r\n                  sections: node.children.map((item, index) => ({\r\n                    id: item.id,\r\n                    seq: index + 1\r\n                  }))\r\n                }\r\n              ]\r\n            };\r\n            this.sort(params);\r\n            resolve(true);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  delChapter(chapter: any) {\r\n    this.nzModalService.confirm({\r\n      nzTitle: '警告',\r\n      nzContent: `确定要删除${chapter.name}吗`,\r\n      nzOnOk: () => {\r\n        return new Promise((resolve, reject) => {\r\n          this.courseMgService.delTreeNode(chapter.id, 'chapter').subscribe(res => {\r\n            if (res.status !== 204) {\r\n              this.nzMesService.error(res.message);\r\n              resolve(false);\r\n              return;\r\n            }\r\n            const chapterIdx = this.nodes.findIndex(chapterItem => chapterItem.id === chapter.id);\r\n            this.nodes.splice(chapterIdx, 1);\r\n            const params = {\r\n              courseId: this.courseId,\r\n              coursePacketId: this.coursePacketId,\r\n              chapters: this.nodes.map((item, index) => ({\r\n                id: item.id,\r\n                seq: index + 1\r\n              }))\r\n            };\r\n            this.sort(params);\r\n            resolve(true);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  sort(params: any) {\r\n    const successFn = (res: any) => {\r\n      if (res.status !== 200) {\r\n        this.nzMesService.error(res.message || '移动失败，未知错误！');\r\n        return;\r\n      }\r\n    };\r\n    const failFn = (error: any) => {\r\n      this.nzMesService.error(JSON.stringify(error));\r\n    };\r\n    this.courseMgService.save_courseChapter(params).subscribe(successFn, failFn);\r\n  }\r\n\r\n  chapterDrop(event: CdkDragDrop<any[]>) {\r\n    if ((!this.isStandard) && this.preview === '0') {\r\n      const chapters: any[] = this.nodes || [];\r\n      moveItemInArray(chapters, event.previousIndex, event.currentIndex);\r\n      const params = {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        chapters: chapters.map((chapter, index) => ({\r\n          id: chapter.id,\r\n          seq: index + 1\r\n        }))\r\n      };\r\n      this.sort(params);\r\n    }\r\n  }\r\n\r\n  sectionDrop(event: CdkDragDrop<any[]>) {\r\n    const sections: any[] = this.curChapter.children || [];\r\n    moveItemInArray(sections, event.previousIndex, event.currentIndex);\r\n    const params = {\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      chapters: [\r\n        {\r\n          id: this.curChapter.id,\r\n          seq: this.curChapter.seq,\r\n          sections: sections.map((section, index) => ({\r\n            id: section.id,\r\n            seq: index + 1\r\n          }))\r\n        }\r\n      ]\r\n    };\r\n    this.sort(params);\r\n  }\r\n\r\n  chapterImport() {\r\n    this.modalFormRef = this.modalService.create({\r\n      nzTitle: 'excel导入章节',\r\n      nzContent: this.localuploadmodal,\r\n      nzMaskClosable: false,\r\n      nzWrapClassName: 'vertical-center-modal',\r\n      nzCancelText: '取消',\r\n      nzOkText: '确定上传',\r\n      nzAfterOpen: this.afterOpen,\r\n      nzOnOk: (e) => {\r\n        return new Promise((resolve, reject) => {\r\n          if (!this.localUploadChapter.value.chapterUrl) {\r\n            this.nzMesService.warning('请先上传文件');\r\n            resolve(false);\r\n            return;\r\n          }\r\n          const params = {\r\n            courseId: this.courseId,\r\n            coursePacketId: this.coursePacketId,\r\n            fileUrl: this.localUploadChapter.value.chapterUrl\r\n          };\r\n          this.courseMgService.excelImportChapter(params).subscribe(res => {\r\n            if (res.status === 200) {\r\n              this.getChapter();\r\n              resolve(true);\r\n            } else {\r\n              if (res.status === 500) {\r\n                this.nzMesService.warning(res.message);\r\n              }\r\n              resolve(false);\r\n            }\r\n          }, err => {\r\n            resolve(false);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  chapterExport() {\r\n      this.chapterExportLoading = true;\r\n      this.courseMgService.packetChapterExport(this.coursePacketId).subscribe(resp => {\r\n        this.chapterExportLoading =  false;\r\n        const link = document.createElement('a');\r\n        // 支持HTML5下载属性的浏览器\r\n        const url = URL.createObjectURL(resp.body);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', this.packageName + '章节结构.xls');\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      }, () => {\r\n        this.chapterExportLoading = false;\r\n      });\r\n  }\r\n\r\n  @ConfirmableFlat({\r\n    title: '导入知识图谱',\r\n    content: '您确定将知识图谱中的章节结构一键同步到课包结构吗？将会清除已有的章节结构。',\r\n    type: 'warning'\r\n  })\r\n  knowledgeGraph(loadingControl?: LoadingControl) {\r\n    return new Promise((resolve) => {\r\n      this.knowledgeGraphLoading = loadingControl.loading = true;\r\n      this.courseMgService.synchronizedKnowledge({\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId\r\n      }).subscribe(res => {\r\n        this.knowledgeGraphLoading = loadingControl.loading = false;\r\n        if (res.status === 201) {\r\n          this.getChapter();\r\n          resolve(true);\r\n        } else {\r\n          resolve(false);\r\n        }\r\n      }, () => {\r\n        this.knowledgeGraphLoading = loadingControl.loading = false;\r\n        resolve(false);\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  customChapterRequest() {\r\n    const thisObj = this;\r\n    return (item: UploadXHRArgs) => {\r\n      this.loading = true;\r\n      const success = (result) => {\r\n        this.loading = false;\r\n        this.localUploadChapter.patchValue({\r\n          chapterUrl: result,\r\n        });\r\n        item.onSuccess({...item}, item.file, {});\r\n      };\r\n      const fail = (err) => {\r\n        this.loading = false;\r\n        item.onError(err, item.file);\r\n        thisObj.nzMesService.error(JSON.stringify(err));\r\n      };\r\n      thisObj.uploadOssService\r\n        .uploadOss(item.file, UploadDir.knowledge_file)\r\n        .subscribe(success, fail);\r\n    };\r\n  }\r\n\r\n  beforeChapterUpload() {\r\n    const thisObj = this;\r\n    return (file: any) => {\r\n      const type = ToolsUtil.getFileType(file.name);\r\n      if (type !== 'excel') {\r\n        thisObj.nzMesService.error('请上传excel,支持后缀xls, xlsx');\r\n        return false;\r\n      } else {\r\n        return new Observable<boolean>((observe) => {\r\n          observe.next(true);\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  removeFileSelf() {\r\n    const that = this;\r\n    const func = function() {\r\n      that.localUploadChapter.patchValue({\r\n        chapterUrl: '',\r\n      });\r\n      this.nzFileList = [];\r\n    };\r\n    return func;\r\n  }\r\n\r\n  downTemplate() {\r\n    this.downTemplateLoading = true;\r\n    this.courseMgService.exportExcel().subscribe((resp: HttpResponse<Blob>) => {\r\n        const headers: HttpHeaders = resp.headers;\r\n        // (window as any).aa=headers.get('content-disposition').split('=')[1];\r\n        // console.log(headers.get('content-disposition').split('=')[1]);\r\n        const link = document.createElement('a');\r\n        // 支持HTML5下载属性的浏览器\r\n        const url = URL.createObjectURL(resp.body);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', '章节结构模板');\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n        this.downTemplateLoading = false;\r\n      },\r\n      error => {\r\n        this.nzMesService.error(JSON.stringify(error));\r\n        this.downTemplateLoading = false;\r\n      }\r\n    );\r\n    // window.location.href = this.ossUrl + '/template/scholar/课包章节导入模板.xls';\r\n  }\r\n}\r\n","import { Observable, Subscription, asapScheduler, ReplaySubject, isObservable, of, scheduled, queueScheduler, throwError, combineLatest, Subject, EMPTY } from 'rxjs';\nimport { concatMap, withLatestFrom, takeUntil, take, map, distinctUntilChanged, shareReplay, tap, catchError } from 'rxjs/operators';\nimport { InjectionToken, Injectable, Optional, Inject } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/debounce-sync.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction debounceSync() {\n    return (/**\n     * @param {?} source\n     * @return {?}\n     */\n    (source) => new Observable((/**\n     * @param {?} observer\n     * @return {?}\n     */\n    (observer) => {\n        /** @type {?} */\n        let actionSubscription;\n        /** @type {?} */\n        let actionValue;\n        /** @type {?} */\n        const rootSubscription = new Subscription();\n        rootSubscription.add(source.subscribe({\n            complete: (/**\n             * @return {?}\n             */\n            () => {\n                if (actionSubscription) {\n                    observer.next(actionValue);\n                }\n                observer.complete();\n            }),\n            error: (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                observer.error(error);\n            }),\n            next: (/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => {\n                actionValue = value;\n                if (!actionSubscription) {\n                    actionSubscription = asapScheduler.schedule((/**\n                     * @return {?}\n                     */\n                    () => {\n                        observer.next(actionValue);\n                        actionSubscription = undefined;\n                    }));\n                    rootSubscription.add(actionSubscription);\n                }\n            }),\n        }));\n        return rootSubscription;\n    })));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/component-store.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction SelectConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    SelectConfig.prototype.debounce;\n}\n/** @type {?} */\nconst initialStateToken = new InjectionToken('ComponentStore InitState');\n/**\n * @template T\n */\nclass ComponentStore {\n    /**\n     * @param {?=} defaultState\n     */\n    constructor(defaultState) {\n        // Should be used only in ngOnDestroy.\n        this.destroySubject$ = new ReplaySubject(1);\n        // Exposed to any extending Store to be used for the teardown.\n        this.destroy$ = this.destroySubject$.asObservable();\n        this.stateSubject$ = new ReplaySubject(1);\n        this.isInitialized = false;\n        this.notInitializedErrorMessage = `${this.constructor.name} has not been initialized yet. ` +\n            `Please make sure it is initialized before updating/getting.`;\n        // Needs to be after destroy$ is declared because it's used in select.\n        this.state$ = this.select((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => s));\n        // State can be initialized either through constructor or setState.\n        if (defaultState) {\n            this.initState(defaultState);\n        }\n    }\n    /**\n     * Completes all relevant Observable streams.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateSubject$.complete();\n        this.destroySubject$.next();\n    }\n    /**\n     * Creates an updater.\n     *\n     * Throws an error if updater is called with synchronous values (either\n     * imperative value or Observable that is synchronous) before ComponentStore\n     * is initialized. If called with async Observable before initialization then\n     * state will not be updated and subscription would be closed.\n     *\n     * @template ProvidedType, OriginType, ValueType, ReturnType\n     * @param {?} updaterFn A static updater function that takes 2 parameters (the\n     * current state and an argument object) and returns a new instance of the\n     * state.\n     * @return {?} A function that accepts one argument which is forwarded as the\n     *     second argument to `updaterFn`. Every time this function is called\n     *     subscribers will be notified of the state change.\n     */\n    updater(updaterFn) {\n        return (/** @type {?} */ (((/** @type {?} */ (((/**\n         * @param {?=} observableOrValue\n         * @return {?}\n         */\n        (observableOrValue) => {\n            /** @type {?} */\n            let initializationError;\n            // We can receive either the value or an observable. In case it's a\n            // simple value, we'll wrap it with `of` operator to turn it into\n            // Observable.\n            /** @type {?} */\n            const observable$ = isObservable(observableOrValue)\n                ? observableOrValue\n                : of(observableOrValue);\n            /** @type {?} */\n            const subscription = observable$\n                .pipe(concatMap((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => this.isInitialized\n                ? // Push the value into queueScheduler\n                    scheduled([value], queueScheduler).pipe(withLatestFrom(this.stateSubject$))\n                : // If state was not initialized, we'll throw an error.\n                    throwError(new Error(this.notInitializedErrorMessage)))), takeUntil(this.destroy$))\n                .subscribe({\n                next: (/**\n                 * @param {?} __0\n                 * @return {?}\n                 */\n                ([value, currentState]) => {\n                    this.stateSubject$.next(updaterFn(currentState, (/** @type {?} */ (value))));\n                }),\n                error: (/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                (error) => {\n                    initializationError = error;\n                    this.stateSubject$.error(error);\n                }),\n            });\n            if (initializationError) {\n                // prettier-ignore\n                throw /** @type {!Error} */ (initializationError);\n            }\n            return subscription;\n        })))))));\n    }\n    /**\n     * Initializes state. If it was already initialized then it resets the\n     * state.\n     * @private\n     * @param {?} state\n     * @return {?}\n     */\n    initState(state) {\n        scheduled([state], queueScheduler).subscribe((/**\n         * @param {?} s\n         * @return {?}\n         */\n        (s) => {\n            this.isInitialized = true;\n            this.stateSubject$.next(s);\n        }));\n    }\n    /**\n     * Sets the state specific value.\n     * @param {?} stateOrUpdaterFn object of the same type as the state or an\n     * updaterFn, returning such object.\n     * @return {?}\n     */\n    setState(stateOrUpdaterFn) {\n        if (typeof stateOrUpdaterFn !== 'function') {\n            this.initState(stateOrUpdaterFn);\n        }\n        else {\n            this.updater((/** @type {?} */ (stateOrUpdaterFn)))();\n        }\n    }\n    /**\n     * Patches the state with provided partial state.\n     *\n     * @throws Error if the state is not initialized.\n     * @param {?} partialStateOrUpdaterFn a partial state or a partial updater\n     * function that accepts the state and returns the partial state.\n     * @return {?}\n     */\n    patchState(partialStateOrUpdaterFn) {\n        this.setState((/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => {\n            /** @type {?} */\n            const patchedState = typeof partialStateOrUpdaterFn === 'function'\n                ? partialStateOrUpdaterFn(state)\n                : partialStateOrUpdaterFn;\n            return Object.assign(Object.assign({}, state), patchedState);\n        }));\n    }\n    /**\n     * @protected\n     * @template R\n     * @param {?=} projector\n     * @return {?}\n     */\n    get(projector) {\n        if (!this.isInitialized) {\n            throw new Error(this.notInitializedErrorMessage);\n        }\n        /** @type {?} */\n        let value;\n        this.stateSubject$.pipe(take(1)).subscribe((/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => {\n            value = projector ? projector(state) : state;\n        }));\n        return (/** @type {?} */ (value));\n    }\n    /**\n     * @template O, R, ProjectorFn\n     * @param {...?} args\n     * @return {?}\n     */\n    select(...args) {\n        const { observables, projector, config } = processSelectorArgs(args);\n        /** @type {?} */\n        let observable$;\n        // If there are no Observables to combine, then we'll just map the value.\n        if (observables.length === 0) {\n            observable$ = this.stateSubject$.pipe(config.debounce ? debounceSync() : (/**\n             * @param {?} source$\n             * @return {?}\n             */\n            (source$) => source$), map(projector));\n        }\n        else {\n            // If there are multiple arguments, then we're aggregating selectors, so we need\n            // to take the combineLatest of them before calling the map function.\n            observable$ = combineLatest(observables).pipe(config.debounce ? debounceSync() : (/**\n             * @param {?} source$\n             * @return {?}\n             */\n            (source$) => source$), map((/**\n             * @param {?} projectorArgs\n             * @return {?}\n             */\n            (projectorArgs) => projector(...projectorArgs))));\n        }\n        return ((/** @type {?} */ (observable$))).pipe(distinctUntilChanged(), shareReplay({\n            refCount: true,\n            bufferSize: 1,\n        }), takeUntil(this.destroy$));\n    }\n    /**\n     * Creates an effect.\n     *\n     * This effect is subscribed to for the life of the \\@Component.\n     * @template ProvidedType, OriginType, ObservableType, ReturnType\n     * @param {?} generator A function that takes an origin Observable input and\n     *     returns an Observable. The Observable that is returned will be\n     *     subscribed to for the life of the component.\n     * @return {?} A function that, when called, will trigger the origin Observable.\n     */\n    effect(generator) {\n        /** @type {?} */\n        const origin$ = new Subject();\n        generator((/** @type {?} */ (origin$)))\n            // tied to the lifecycle 👇 of ComponentStore\n            .pipe(takeUntil(this.destroy$))\n            .subscribe();\n        return (/** @type {?} */ (((/** @type {?} */ (((/**\n         * @param {?=} observableOrValue\n         * @return {?}\n         */\n        (observableOrValue) => {\n            /** @type {?} */\n            const observable$ = isObservable(observableOrValue)\n                ? observableOrValue\n                : of(observableOrValue);\n            return observable$.pipe(takeUntil(this.destroy$)).subscribe((/**\n             * @param {?} value\n             * @return {?}\n             */\n            (value) => {\n                // any new 👇 value is pushed into a stream\n                origin$.next(value);\n            }));\n        })))))));\n    }\n}\nComponentStore.ɵfac = function ComponentStore_Factory(t) { return new (t || ComponentStore)(ɵngcc0.ɵɵinject(initialStateToken, 8)); };\nComponentStore.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ComponentStore, factory: ComponentStore.ɵfac });\n/** @nocollapse */\nComponentStore.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [initialStateToken,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ComponentStore, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [initialStateToken]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentStore.prototype.destroySubject$;\n    /** @type {?} */\n    ComponentStore.prototype.destroy$;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentStore.prototype.stateSubject$;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentStore.prototype.isInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentStore.prototype.notInitializedErrorMessage;\n    /** @type {?} */\n    ComponentStore.prototype.state$;\n}\n/**\n * @template O, R, ProjectorFn\n * @param {?} args\n * @return {?}\n */\nfunction processSelectorArgs(args) {\n    /** @type {?} */\n    const selectorArgs = Array.from(args);\n    // Assign default values.\n    /** @type {?} */\n    let config = { debounce: false };\n    /** @type {?} */\n    let projector;\n    // Last argument is either projector or config\n    /** @type {?} */\n    const projectorOrConfig = (/** @type {?} */ (selectorArgs.pop()));\n    if (typeof projectorOrConfig !== 'function') {\n        // We got the config as the last argument, replace any default values with it.\n        config = Object.assign(Object.assign({}, config), projectorOrConfig);\n        // Pop the next args, which would be the projector fn.\n        projector = (/** @type {?} */ (selectorArgs.pop()));\n    }\n    else {\n        projector = projectorOrConfig;\n    }\n    // The Observables to combine, if there are any.\n    /** @type {?} */\n    const observables = (/** @type {?} */ (selectorArgs));\n    return {\n        observables,\n        projector,\n        config,\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/tap-response.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Handles the response in ComponentStore effects in a safe way, without\n * additional boilerplate.\n * It enforces that the error case is handled and that the effect would still be\n * running should an error occur.\n *\n * Takes an optional third argument for a `complete` callback.\n *\n * ```typescript\n * readonly dismissedAlerts = this.effect<Alert>(alert$ => {\n *  return alert$.pipe(\n *      concatMap(\n *          (alert) => this.alertsService.dismissAlert(alert).pipe(\n *              tapResponse(\n *                 (dismissedAlert) => this.alertDismissed(dismissedAlert),\n *                 (error) => this.logError(error),\n *              ))));\n *   });\n * ```\n * @template T\n * @param {?} nextFn\n * @param {?} errorFn\n * @param {?=} completeFn\n * @return {?}\n */\nfunction tapResponse(nextFn, errorFn, completeFn) {\n    return (/**\n     * @param {?} source\n     * @return {?}\n     */\n    (source) => source.pipe(tap({\n        next: nextFn,\n        error: errorFn,\n        complete: completeFn,\n    }), catchError((/**\n     * @return {?}\n     */\n    () => EMPTY))));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngrx-component-store.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ComponentStore, initialStateToken, tapResponse };\n\n//# sourceMappingURL=ngrx-component-store.js.map","export function not(pred, thisArg) {\n    function notPred() {\n        return !(notPred.pred.apply(notPred.thisArg, arguments));\n    }\n    notPred.pred = pred;\n    notPred.thisArg = thisArg;\n    return notPred;\n}\n//# sourceMappingURL=not.js.map","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { Observable } from '../Observable';\nexport function partition(source, predicate, thisArg) {\n    return [\n        filter(predicate, thisArg)(new Observable(subscribeTo(source))),\n        filter(not(predicate, thisArg))(new Observable(subscribeTo(source)))\n    ];\n}\n//# sourceMappingURL=partition.js.map","import { Subscriber } from '../Subscriber';\nexport function skipWhile(predicate) {\n    return (source) => source.lift(new SkipWhileOperator(predicate));\n}\nclass SkipWhileOperator {\n    constructor(predicate) {\n        this.predicate = predicate;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n    }\n}\nclass SkipWhileSubscriber extends Subscriber {\n    constructor(destination, predicate) {\n        super(destination);\n        this.predicate = predicate;\n        this.skipping = true;\n        this.index = 0;\n    }\n    _next(value) {\n        const destination = this.destination;\n        if (this.skipping) {\n            this.tryCallPredicate(value);\n        }\n        if (!this.skipping) {\n            destination.next(value);\n        }\n    }\n    tryCallPredicate(value) {\n        try {\n            const result = this.predicate(value, this.index++);\n            this.skipping = Boolean(result);\n        }\n        catch (err) {\n            this.destination.error(err);\n        }\n    }\n}\n//# sourceMappingURL=skipWhile.js.map","import { merge as mergeStatic } from '../observable/merge';\nexport function merge(...observables) {\n    return (source) => source.lift.call(mergeStatic(source, ...observables));\n}\n//# sourceMappingURL=merge.js.map","import {Injectable} from '@angular/core';\r\nimport {ComponentStore, tapResponse} from '@ngrx/component-store';\r\nimport {combineLatest, EMPTY, of, partition} from 'rxjs';\r\nimport {merge, skipWhile, switchMap, tap, withLatestFrom} from 'rxjs/operators';\r\nimport {LoadingControl, PacketInfo} from 'core/base/common';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {NzMessageService, NzModalService, NzSafeAny, NzTreeNode} from 'ng-zorro-antd';\r\nimport {\r\n  CompanyItem, LevelItem,\r\n  LoadObj,\r\n  OtherSettingState,\r\n  SubQuestionBankchangeItem\r\n} from '@app/routes/course-manage/components/other-setting/other-setting.interface';\r\nimport {CourseManageService} from '@app/busi-services';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {environment} from 'src/environments/environment';\r\nimport {ServicesModule} from '@app/service/service.module';\r\nimport {ConfirmableDesc} from 'core/decorators';\r\nimport {NewLevelComponent} from './new-level/new-level.component';\r\nimport {RewardSettingsComponent} from './reward-settings/reward-settings.component';\r\nimport {NewCompanyComponent} from './new-company/new-company.component';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {STATISTICALRULES} from 'core/base/static-data';\r\nimport {LocalStorageUtil} from 'core/utils/localstorage.util';\r\nimport {StatisticsLogService} from '@app/busi-services/statistics-log.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: ServicesModule\r\n})\r\nexport class OtherSettingStoreService extends ComponentStore<OtherSettingState> {\r\n\r\n  constructor(\r\n    private courseManageService: CourseManageService,\r\n    private message: NzMessageService,\r\n    private modalService: NzModalService,\r\n    private statisticsLogService: StatisticsLogService\r\n  ) {\r\n    super({\r\n      packetInfo: SessionStorageUtil.getPacketInfo(),\r\n      isLoading: false,\r\n      searchLoad: false,\r\n      exam: [],\r\n      intelligent: [],\r\n      subQuestionBankCurrent: [],\r\n      subQuestionBankCurrentPre: [],\r\n      subQuestionBank: [],\r\n      subQuestionBankInt: [],\r\n      listSublibrary: [],\r\n      subQuestionBankIntCurrent: [],\r\n      subQuestionBankIntCurrentPre: [],\r\n      moduleArr: [],\r\n      levelLists: [],\r\n      companyLists: [],\r\n      listOfData: [],\r\n      idMap: {},\r\n      breakthroughMode: false,\r\n      practiceOn: false,\r\n      isBet: false,\r\n      knowledgeNum: 0\r\n    });\r\n  }\r\n\r\n  //#region read\r\n  readonly packetInfo$ = this.select(({packetInfo}) => packetInfo);\r\n  readonly listSublibrary$ = this.select(({listSublibrary}) => listSublibrary);\r\n  readonly listOfData$ = this.select(({listOfData}) => listOfData);\r\n  readonly moduleArr$ = this.select(({moduleArr}) => moduleArr);\r\n  readonly levelLists$ = this.select(({levelLists}) => levelLists);\r\n  readonly companyLists$ = this.select(({companyLists}) => companyLists);\r\n  readonly knowledgeNum$ = this.select(({knowledgeNum}) => knowledgeNum);\r\n  readonly idMap$ = this.select(({idMap}) => idMap);\r\n  readonly subQuestionBankCurrentPre$ =\r\n    this.select(({subQuestionBankCurrentPre}) => subQuestionBankCurrentPre);\r\n  readonly subQuestionBank$ =\r\n    this.select(({subQuestionBank}) => subQuestionBank);\r\n  readonly subQuestionBankIntCurrentPre$ =\r\n    this.select(({subQuestionBankIntCurrentPre}) => subQuestionBankIntCurrentPre);\r\n  readonly subQuestionBankInt$ =\r\n    this.select(({subQuestionBankInt}) => subQuestionBankInt);\r\n  readonly vm$ = this.select(state => state, {debounce: true});\r\n  //#endregion\r\n\r\n  //#region update\r\n  readonly setPacketInfo = this.updater((state, packetInfo: PacketInfo) => ({...state, packetInfo}));\r\n\r\n  readonly setLoading = this.updater((state, loadObj: LoadObj) => ({\r\n    ...state,\r\n    loadObj,\r\n  }));\r\n  //#endregion\r\n\r\n\r\n  //#region  effect\r\n  /**\r\n   * 获取闯关列表\r\n   */\r\n  readonly getLevel = this.effect((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      switchMap(([, packetInfo]) => {\r\n        if (packetInfo.isCard === '1') {\r\n          return this.courseManageService.levelList(packetInfo.id).pipe(\r\n            tapResponse(res => {\r\n              if (res.status === 200) {\r\n                const levelLists = res.data.sort((a, b) => a.seq > b.seq ? 1 : a.seq < b.seq ? -1 : 0);\r\n                levelLists.forEach((item) => {\r\n                  if (item.coursePacketCardRecourseList) {\r\n                    item.coursePacketCardRecourseList =\r\n                      item.coursePacketCardRecourseList.sort((a, b) => a.seq > b.seq ? 1 : a.seq < b.seq ? -1 : 0);\r\n                  }\r\n                });\r\n                this.patchState({levelLists});\r\n              }\r\n            }, () => EMPTY));\r\n        } else {\r\n          return of([]);\r\n        }\r\n      })\r\n    );\r\n  });\r\n\r\n  /**\r\n   * 获取公司列表\r\n   */\r\n  readonly getCompany = this.effect((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      switchMap(([, packetInfo]) => {\r\n        if (packetInfo.is99Train === '1') {\r\n          return this.courseManageService.getCompany(packetInfo.id).pipe(\r\n            tapResponse(res => {\r\n              if (res.status === 200) {\r\n                this.patchState({companyLists: res.data});\r\n              }\r\n            }, () => EMPTY));\r\n        } else {\r\n          return of([]);\r\n        }\r\n      })\r\n    );\r\n  });\r\n\r\n  readonly setBreakthroughMode = this.effect((data$) => {\r\n    return data$.pipe(withLatestFrom(this.packetInfo$), tap(([, packetInfo]) => {\r\n      this.patchState({\r\n        breakthroughMode: packetInfo.isCard === '1' ? true : false\r\n      });\r\n    }));\r\n  });\r\n\r\n\r\n  readonly setPracticeOn = this.effect((data$) => {\r\n    return data$.pipe(withLatestFrom(this.packetInfo$), tap(([, packetInfo]) => {\r\n      this.patchState({\r\n        practiceOn: packetInfo.is99Train === '1' ? true : false\r\n      });\r\n    }));\r\n  });\r\n\r\n  readonly setIsBet = this.effect((data$) => {\r\n    return data$.pipe(withLatestFrom(this.packetInfo$), tap(([, packetInfo]) => {\r\n      if (packetInfo.teacherType !== '22') {\r\n        this.patchState({\r\n          isBet: packetInfo.isBet === '1' ? true : false\r\n        });\r\n      }\r\n    }));\r\n  });\r\n\r\n\r\n  /**\r\n   * 获取子题库列表\r\n   */\r\n  readonly getSubLibrary = this.effect((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(combineLatest([this.packetInfo$, this.listSublibrary$])),\r\n      switchMap(([, [packetInfo]]) => {\r\n        return this.courseManageService.getSubLibrary({\r\n          coursePacketId: packetInfo.id,\r\n          quebankType: 1\r\n        }).pipe(tapResponse(res => {\r\n          if (res.status === 200) {\r\n            const listSublibraryBak = res.data.sort\r\n            ((a, b) => Number(a.quebankId) > Number(b.quebankId) ? 1 : Number(a.quebankId) < Number(b.quebankId) ? -1 : 0);\r\n            // tslint:disable-next-line:max-line-length\r\n            const subQuestionBank = listSublibraryBak.filter(e => e.busType === '1').sort((a, b) => a.seq > b.seq ? 1 : a.seq < b.seq ? -1 : 0);\r\n            // tslint:disable-next-line:max-line-length\r\n            const subQuestionBankInt = listSublibraryBak.filter(e => e.busType === '2').sort((a, b) => a.seq > b.seq ? 1 : a.seq < b.seq ? -1 : 0);\r\n            const subQuestionBankCurrentPre = subQuestionBank.map((item) => String(item.quebankId));\r\n            const subQuestionBankCurrent = JSON.parse(JSON.stringify(subQuestionBankCurrentPre));\r\n            const subQuestionBankIntCurrentPre = subQuestionBankInt.map((item) => String(item.quebankId));\r\n            const subQuestionBankIntCurrent = JSON.parse(JSON.stringify(subQuestionBankIntCurrentPre));\r\n            this.patchState({\r\n              subQuestionBankCurrentPre,\r\n              subQuestionBankCurrent,\r\n              subQuestionBankIntCurrentPre,\r\n              subQuestionBankIntCurrent,\r\n              listSublibrary: listSublibraryBak,\r\n              subQuestionBank,\r\n              subQuestionBankInt\r\n            });\r\n          }\r\n        }, () => EMPTY));\r\n      }));\r\n  });\r\n\r\n  /**\r\n   * 获取课次列表\r\n   */\r\n  readonly getLessonCountTable = this.effect((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      skipWhile(([, packetInfo]) => {\r\n        return packetInfo.teachType === '22';\r\n      }),\r\n      switchMap(([, packetInfo]) => {\r\n\r\n          return this.courseManageService.getLessonPackageTable(packetInfo.id).pipe(\r\n            tapResponse(res => {\r\n              if (res.status === 200) {\r\n                if (res.data && res.data.length) {\r\n                  res.data.forEach((item, ii) => {\r\n                    res.data[ii].index = ii + 1;\r\n                  });\r\n                  this.patchState({\r\n                    listOfData: res.data,\r\n                    packetInfo: {...packetInfo, lessonCount: res.data.length}\r\n                  });\r\n                } else {\r\n                  this.patchState({listOfData: []});\r\n                }\r\n              }\r\n            }, () => EMPTY));\r\n        }\r\n      ));\r\n  });\r\n  /**\r\n   * 获取子题库模块树\r\n   */\r\n  readonly getSubQuestionBank = this.effect((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      tap(() => this.patchState({searchLoad: false})),\r\n      switchMap(([, packetInfo]) => {\r\n        return ToolsUtil.getAjax(environment.questionBankApi + 'system/qkcPaper/courseCode', {\r\n          courseCode: packetInfo.code,\r\n          type: ''\r\n        }).pipe(\r\n          tapResponse(\r\n            resultS => {\r\n              this.patchState({searchLoad: false});\r\n              const resP = JSON.parse(resultS);\r\n              if (resP.code === 200) {\r\n                if (resP.data && resP.data.length) {\r\n                  const bak = JSON.parse(JSON.stringify(resP.data));\r\n                  const moduleArr = JSON.parse(JSON.stringify(resP.data));\r\n                  // 获取模块列表\r\n                  let reduce = [];\r\n                  moduleArr.forEach(itemX => {\r\n                    reduce = itemX.sublibraryModuleList.filter(itemIn => itemIn.type === 'EXAM').concat(reduce);\r\n                  });\r\n                  bak.forEach(itemX => {\r\n                    itemX.sublibraryModuleList = itemX.sublibraryModuleList.filter(itemIn => itemIn.type === 'PRACTICE');\r\n                  });\r\n                  const idMap = {};\r\n                  resP.data.forEach(itemY => {\r\n                    itemY.sublibraryModuleList.forEach(itemP => {\r\n                      idMap[itemP.id] = itemP.type;\r\n                    });\r\n                  });\r\n                  // tslint:disable-next-line:max-line-length\r\n                  const intelligent = this.conversionNode(bak).sort((a, b) => a.createTime > b.createTime ? -1 : a.createTime < b.createTime ? 1 : 0);\r\n                  // tslint:disable-next-line:max-line-length\r\n                  const exam = this.conversionNode(resP.data).sort((a, b) => a.createTime > b.createTime ? -1 : a.createTime < b.createTime ? 1 : 0);\r\n                  this.patchState({exam, intelligent, moduleArr: reduce, idMap});\r\n                } else {\r\n                  this.patchState({exam: [], intelligent: [], moduleArr: []});\r\n                }\r\n              } else {\r\n                this.message.error(resP.message);\r\n              }\r\n            }, () => {\r\n              this.patchState({searchLoad: false});\r\n              this.message.error('题库服务异常');\r\n            }\r\n          )\r\n        );\r\n      }));\r\n  });\r\n\r\n  /**\r\n   * 删除子题库\r\n   */\r\n  readonly dellistSublibraryItem = this.effect<any>((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      skipWhile(([, packetInfo]) => +packetInfo.isUsed > 0),\r\n      switchMap(([data]) => {\r\n        data.loadingControl.loading = true;\r\n        return this.courseManageService.delSubLibrary({\r\n          id: data.data.id\r\n        }).pipe(tapResponse(res => {\r\n          data.loadingControl.loading = false;\r\n          if (res.status === 204) {\r\n            this.getSubLibrary();\r\n          }\r\n        }, () => data.loadingControl.loading = false));\r\n      })\r\n    );\r\n  });\r\n  /**\r\n   * 删除奖励\r\n   */\r\n  readonly deleteGift = this.effect<{ id: string, loadingControl?: LoadingControl }>((param$) => {\r\n    return param$.pipe(switchMap(param => {\r\n      param.loadingControl.loading = true;\r\n      return this.courseManageService.levelDataDeletion(param.id).pipe(\r\n        tapResponse(res => {\r\n          param.loadingControl.loading = false;\r\n          if (res.status === 204) {\r\n            this.statisticsLogService.statisticsPacketInfoLog({\r\n              name: '删除奖励',\r\n              actionCode: STATISTICALRULES.packetInfo['otherSet-levelthrough-action'].modify,\r\n              content: param.id\r\n            });\r\n            this.getLevel();\r\n          }\r\n        }, () => param.loadingControl.loading = false)\r\n      );\r\n    }));\r\n  });\r\n  /**\r\n   * 删除关卡\r\n   */\r\n  readonly levelDeletion = this.effect<{ id: string, loadingControl?: LoadingControl }>((param$) => {\r\n    return param$.pipe(switchMap(param => {\r\n      param.loadingControl.loading = true;\r\n      return this.courseManageService.levelDeletion(param.id).pipe(\r\n        tapResponse(res => {\r\n          param.loadingControl.loading = false;\r\n          if (res.status === 204) {\r\n            this.getLevel();\r\n            this.statisticsLogService.statisticsPacketInfoLog({\r\n              name: '删除关卡',\r\n              actionCode: STATISTICALRULES.packetInfo['otherSet-levelthrough-action'].delCode,\r\n              content: param.id\r\n            });\r\n          }\r\n        }, () => param.loadingControl.loading = false)\r\n      );\r\n    }));\r\n  });\r\n\r\n\r\n  /**\r\n   * 删除公司\r\n   */\r\n  readonly companyDeletion = this.effect<{ id: string, loadingControl?: LoadingControl }>((param$) => {\r\n    return param$.pipe(switchMap(param => {\r\n      param.loadingControl.loading = true;\r\n      return this.courseManageService.companyDeletion(param.id).pipe(\r\n        tapResponse(res => {\r\n          param.loadingControl.loading = false;\r\n          this.statisticsLogService.statisticsPacketInfoLog({\r\n            name: '删除公司',\r\n            actionCode: STATISTICALRULES.packetInfo['otherSet-99train-action'].delCode,\r\n            content: param.id\r\n          });\r\n          if (res.status === 204) {\r\n            this.getCompany();\r\n          }\r\n        }, () => param.loadingControl.loading = false)\r\n      );\r\n    }));\r\n  });\r\n\r\n\r\n  /**\r\n   * 删除课次\r\n   */\r\n  readonly delTable = this.effect<{ id: string, loadingControl?: LoadingControl }>((param$) => {\r\n    return param$.pipe(switchMap(param => {\r\n      param.loadingControl.loading = true;\r\n      return this.courseManageService.delTable(param.id).pipe(\r\n        tapResponse(res => {\r\n          param.loadingControl.loading = false;\r\n          this.statisticsLogService.statisticsPacketInfoLog({\r\n            name: '删除课次',\r\n            actionCode: STATISTICALRULES.packetInfo['otherSet-lessons-action'].delCode,\r\n            content: param.id\r\n          });\r\n          if (res.status === 204) {\r\n            this.getLessonCountTable();\r\n          }\r\n        }, () => param.loadingControl.loading = false)\r\n      );\r\n    }));\r\n  });\r\n\r\n  /**\r\n   * 初始化数据\r\n   */\r\n  readonly dataInit = this.effect((data$) => {\r\n    return data$.pipe(\r\n      tap({\r\n        next: (data) => {\r\n          this.setBreakthroughMode();\r\n          this.setPracticeOn();\r\n          this.setIsBet();\r\n          this.setLoading({\r\n            isLoading: true, searchLoad: true\r\n          });\r\n          this.getKnowledgeNum(); // 获取课程知识点总数\r\n          this.getLessonCountTable(); // 课次列表\r\n          this.getLevel(); // 获取闯关列表\r\n          this.getCompany(); // 获取公司列表\r\n          this.getSubLibrary(); // 子题库列表\r\n          this.getSubQuestionBank(); // 获取子题库模块树\r\n        },\r\n        error: () => {\r\n        }\r\n      })\r\n    );\r\n  });\r\n\r\n\r\n  readonly getKnowledgeNum = this.effect((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      switchMap(([, packetInfo]) => {\r\n        return this.courseManageService.getKnos({knowledgeSubjectId: packetInfo.knowledgeSubjectId}).pipe(\r\n          tapResponse(res => {\r\n            if (res.status === 200) {\r\n              this.patchState({\r\n                knowledgeNum: res.data.num || 0\r\n              });\r\n            } else {\r\n              this.patchState({knowledgeNum: 0});\r\n            }\r\n          }, () => this.patchState({knowledgeNum: 0})));\r\n      }));\r\n  });\r\n\r\n  readonly subQuestionBankChange = this.effect<SubQuestionBankchangeItem>((data$) => {\r\n    const [success, failed] = partition(data$.pipe(\r\n      withLatestFrom(\r\n        combineLatest([this.packetInfo$, this.idMap$])),\r\n      switchMap(([data, [packetInfo, idMap]]): any => {\r\n        // tslint:disable-next-line:max-line-length\r\n        return of(data).pipe(withLatestFrom(combineLatest([this[data.type + 'CurrentPre$'], this[data.type + '$'], of(packetInfo), of(idMap), this[data.type + '$']])));\r\n      })), ([data, [pre]]) => {\r\n      return pre.length < data.data.length;\r\n    });\r\n    return success.pipe(\r\n      switchMap(([data, [pre, , packetInfo, idMap, list]]) => {\r\n        const node: NzTreeNode = data['treeSelect'].getTreeNodeByKey(String(data.data[data.data.length - 1]));\r\n        return this.courseManageService.callSubLibrary({\r\n          courseId: packetInfo.courseId,\r\n          coursePacketId: packetInfo.id,\r\n          busType: data.type === 'subQuestionBank' ? '1' : '2',\r\n          quebankId: node.origin.id,\r\n          quebankName: node.origin.name,\r\n          quebankType: 1,\r\n          seq: ToolsUtil.getMaxSeq(list),\r\n          quebankModuleType: data.type === 'subQuestionBankInt' ? '1' : idMap[data.data[data.data.length - 1]] === 'EXAM' ? '2' : '1'\r\n        }).pipe(tapResponse(res => {\r\n          if (res.status === 201) {\r\n            this.getSubLibrary();\r\n          }\r\n        }, () => EMPTY));\r\n      }),\r\n      merge(failed.pipe(\r\n        tap(([data, [pre, current]]) => {\r\n          pre.every((item, i) => {\r\n            if (data.data.indexOf(item) < 0) {\r\n              this.courseManageService.delSubLibrary({id: current[i].id}).subscribe(res => {\r\n                if (res.status === 204) {\r\n                  this.getSubLibrary();\r\n                }\r\n              });\r\n            } else {\r\n              return true;\r\n            }\r\n          });\r\n        }))\r\n      ));\r\n  });\r\n\r\n  readonly generateLessonsReal = this.effect<any>((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      switchMap(([resolve, packetInfo]) => {\r\n        this.patchState({\r\n          isLoading: true\r\n        });\r\n        return this.courseManageService.lessonPackage(packetInfo.id, packetInfo.lessonCount, packetInfo.courseId).pipe(\r\n          tapResponse(res => {\r\n            this.patchState({\r\n              isLoading: false\r\n            });\r\n            this.statisticsLogService.statisticsPacketInfoLog({\r\n              name: '生成课次',\r\n              actionCode: STATISTICALRULES.packetInfo['otherSet-lessons-action'].addCode,\r\n              content: JSON.stringify({coursePacketId: packetInfo.id, lessonCount: packetInfo.lessonCount, courseId: packetInfo.courseId}),\r\n            });\r\n            if (res.status === 201) {\r\n              this.getLessonCountTable();\r\n              resolve(true);\r\n            }\r\n          }, () => {\r\n            this.patchState({\r\n              isLoading: false\r\n            });\r\n            resolve(false);\r\n          }));\r\n      }));\r\n  });\r\n  /**\r\n   * 生成课次\r\n   */\r\n  readonly generateLessonsEffect = this.effect((data$) => {\r\n    const [success, failed] = partition(data$.pipe(\r\n      withLatestFrom(combineLatest([this.listOfData$, this.packetInfo$])),\r\n      skipWhile(([, [, packetInfo]]) => {\r\n        return packetInfo.preview === '1';\r\n      }),\r\n      switchMap(([, [listOfData]]) => of(listOfData))), listOfData => !!listOfData.length);\r\n    return success.pipe(\r\n      tap(() => {\r\n        this.generateLessonsAlert();\r\n      }),\r\n      merge(failed.pipe(\r\n        tap(() => {\r\n          this.generateLessonsReal(() => {\r\n          });\r\n        })\r\n      )),\r\n    );\r\n  });\r\n\r\n  /**\r\n   * 新增课次\r\n   */\r\n  readonly newClass = this.effect(($data) => {\r\n    return $data.pipe(\r\n      withLatestFrom(combineLatest([this.listOfData$, this.packetInfo$])),\r\n      switchMap(([, [listOfData, packetInfo]]) => {\r\n        if (listOfData.length >= 200) {\r\n          this.message.warning('课次最多只能新增200个');\r\n          return of([]);\r\n        }\r\n        const max = ToolsUtil.getMaxSeq(listOfData.filter(item => item.seq));\r\n        this.patchState({isLoading: true});\r\n        const content = {\r\n          name: '第' + max + '课次',\r\n          courseId: packetInfo.courseId,\r\n          coursePacketId: packetInfo.id,\r\n          seq: max\r\n        };\r\n        return this.courseManageService.saveTable(content).pipe(tapResponse(res => {\r\n          this.patchState({isLoading: false});\r\n          this.statisticsLogService.statisticsPacketInfoLog({\r\n            name: '新增课次',\r\n            actionCode: STATISTICALRULES.packetInfo['otherSet-lessons-action'].addCode,\r\n            content: JSON.stringify(content),\r\n          });\r\n          if (res.status === 201) {\r\n            this.getLessonCountTable();\r\n          }\r\n        }, () => this.patchState({isLoading: false})));\r\n      }));\r\n  });\r\n\r\n  /**\r\n   * 新增关卡\r\n   */\r\n  readonly addLevelEffect = this.effect<Partial<LevelItem>>((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(combineLatest([this.packetInfo$, this.moduleArr$, this.levelLists$]))\r\n      , switchMap(([levelItem, [packetInfo, moduleArr, levelLists]]) => {\r\n        return ToolsUtil.getAjax(environment.questionBankApi + 'system/qkcPaper/courseCode', {\r\n          courseCode: packetInfo.code,\r\n          type: ''\r\n        }).pipe(\r\n          tapResponse(\r\n            resultS => {\r\n              try {\r\n                const resP = JSON.parse(resultS);\r\n                if (resP.code === 200) {\r\n                  if (resP.data) {\r\n                    let reduce = [];\r\n                    if (resP.data.length) {\r\n                      const moduleArrInner = JSON.parse(JSON.stringify(resP.data));\r\n                      // 获取模块列表\r\n                      moduleArrInner.forEach(itemX => {\r\n                        reduce = itemX.sublibraryModuleList.filter(itemIn => itemIn.type === 'EXAM').concat(reduce);\r\n                      });\r\n                      this.patchState({moduleArr: reduce});\r\n                    } else {\r\n                      this.patchState({exam: [], intelligent: [], moduleArr: []});\r\n                    }\r\n                    if (reduce.length) {\r\n                      this.modalService.create<NewLevelComponent, NzSafeAny>({\r\n                        nzTitle: levelItem.id ? '编辑关卡' : '新增关卡',\r\n                        nzContent: NewLevelComponent,\r\n                        nzComponentParams: {\r\n                          courseId: packetInfo.courseId,\r\n                          coursePacketId: packetInfo.id,\r\n                          moduleArr,\r\n                          levelLists,\r\n                          levelItem\r\n                        },\r\n                        nzMaskClosable: false,\r\n                        nzCancelText: '取消',\r\n                        nzOkText: '确定',\r\n                        nzWidth: 900,\r\n                      }).afterClose\r\n                        .subscribe((flag: boolean) => {\r\n                          if (flag) {\r\n                            this.getLevel();\r\n                          }\r\n                        });\r\n                    } else {\r\n                      this.message.warning('该课包的课程尚没有子模块，请到题库新加子模块再来新增关卡');\r\n                    }\r\n                  }\r\n                } else {\r\n                  this.message.error(resP.message);\r\n                }\r\n              } catch {\r\n                this.message.error('获取题库子模块列表失败，新增关卡需要子模块信息，请稍后再试新增');\r\n              }\r\n            }, () => {\r\n              this.patchState({searchLoad: false});\r\n              this.message.error('获取题库子模块列表失败，新增关卡需要子模块信息，请稍后再试新增');\r\n            }\r\n          )\r\n        );\r\n      }));\r\n  });\r\n\r\n  /**\r\n   * 新增公司\r\n   */\r\n  readonly addCompanyEffect = this.effect<Partial<CompanyItem>>((data$) => {\r\n    return data$.pipe(\r\n      withLatestFrom(combineLatest([this.packetInfo$, this.companyLists$])),\r\n      tap(([companyItem, [packetInfo, companyLists]]) => {\r\n        this.modalService.create<NewCompanyComponent, NzSafeAny>({\r\n          nzTitle: companyItem.id ? '编辑公司' : '新增公司',\r\n          nzContent: NewCompanyComponent,\r\n          nzComponentParams: {\r\n            courseId: packetInfo.courseId,\r\n            coursePacketId: packetInfo.id,\r\n            companyLists,\r\n            companyItem\r\n          },\r\n          nzMaskClosable: false,\r\n          nzCancelText: '取消',\r\n          nzOkText: '确定',\r\n          nzWidth: 600,\r\n        }).afterClose\r\n          .subscribe((flag: boolean) => {\r\n            if (flag) {\r\n              this.getCompany();\r\n            }\r\n          });\r\n      }));\r\n  });\r\n\r\n\r\n  /**\r\n   * 新增奖励\r\n   * @param data 当前关卡\r\n   */\r\n  readonly rewardSettings = this.effect<any>((data$) => {\r\n    return data$.pipe(\r\n      tap((data) => {\r\n        if (data.coursePacketCardRecourseList && data.coursePacketCardRecourseList.length) {\r\n          data.coursePacketCardRecourseList.forEach((itemx, indexx) => {\r\n            itemx.thumbUrl = null;\r\n            itemx.name = itemx.title;\r\n          });\r\n        }\r\n      }),\r\n      withLatestFrom(this.packetInfo$),\r\n      tap(([data, packetInfo]) => {\r\n        return this.modalService.create<RewardSettingsComponent, NzSafeAny>({\r\n          nzTitle: '奖励设置',\r\n          nzContent: RewardSettingsComponent,\r\n          nzComponentParams: {\r\n            courseId: packetInfo.courseId,\r\n            coursePacketId: packetInfo.id,\r\n            professionId: packetInfo.professionId,\r\n            currentCard: data,\r\n          },\r\n          nzMaskClosable: false,\r\n          nzCancelText: '取消',\r\n          nzOkText: '确定上传',\r\n        }).afterClose\r\n          .subscribe((flag: boolean) => {\r\n            if (flag) {\r\n              this.getLevel();\r\n            }\r\n          });\r\n      }));\r\n  });\r\n\r\n\r\n  readonly listDrop = this.effect<{ data: CdkDragDrop<any, any>, label: 'subQuestionBank' | 'subQuestionBankInt' }>((data$) => {\r\n    return data$.pipe(\r\n      switchMap((data) => {\r\n        return of(data).pipe(withLatestFrom(this[data.label + '$']));\r\n      }),\r\n      tap(([data, list]) => {\r\n        if (data.data.previousIndex === data.data.currentIndex) {\r\n          return;\r\n        }\r\n        moveItemInArray(list, data.data.previousIndex, data.data.currentIndex);\r\n        const arr = list.map((item) => String(item.quebankId));\r\n        this.patchState({\r\n          [data.label + 'CurrentPre']: arr,\r\n          [data.label + 'Current']: JSON.parse(JSON.stringify(arr)),\r\n          [data.label]: list\r\n        });\r\n        const params = [];\r\n        list.forEach((item, i) => {\r\n          params.push({\r\n            id: item.id,\r\n            seq: i\r\n          });\r\n        });\r\n        this.courseManageService.sortSubQuestionBank(params).subscribe((res: any) => {\r\n          if (res.status !== 201) {\r\n            this.message.error(res.message || '移动失败，未知错误！');\r\n          }\r\n        });\r\n      }));\r\n  });\r\n//#endregion\r\n\r\n\r\n//#region methods\r\n\r\n  /**\r\n   *  开启闯关\r\n   * @param val bool\r\n   */\r\n  readonly breakthroughModeChange = (val) => {\r\n    const flag = val ? '1' : '0';\r\n    const effect = of(null).pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      tap(([, packetInfo]) => {\r\n        this.setPacketInfo({...packetInfo, ...{isCard: flag}});\r\n      }),\r\n      switchMap(([, packetInfo]) => {\r\n        return this.courseManageService.isCardUpdate(packetInfo.id, flag).pipe(\r\n          tapResponse(res => {\r\n            if (res.status === 201) {\r\n              if (flag === '1') {\r\n                this.getLevel();\r\n              }\r\n              SessionStorageUtil.putPacketInfoItem('isCard', flag);\r\n            }\r\n          }, () => EMPTY)\r\n        );\r\n      })).subscribe(() => effect.unsubscribe());\r\n  };\r\n\r\n  /**\r\n   *  开启99实训\r\n   * @param val bool\r\n   */\r\n  readonly practiceOnChange = (val: boolean) => {\r\n    const flag = val ? '1' : '0';\r\n    const effect = of(null).pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      tap(([, packetInfo]) => {\r\n        this.setPacketInfo({...packetInfo, ...{is99Train: flag}});\r\n      }),\r\n      switchMap(([, packetInfo]) => {\r\n        return this.courseManageService.is99TrainUpdate(packetInfo.id, flag).pipe(\r\n          tapResponse(res => {\r\n            if (res.status === 201) {\r\n              if (flag === '1') {\r\n                this.getCompany();\r\n              }\r\n              SessionStorageUtil.putPacketInfoItem('is99Train', flag);\r\n            }\r\n          }, () => EMPTY)\r\n        );\r\n      })).subscribe(() => effect.unsubscribe());\r\n  };\r\n\r\n\r\n  /**\r\n   *  开启押题宝\r\n   * @param val bool\r\n   */\r\n  readonly isBetChange = (val: boolean) => {\r\n    const flag = val ? '1' : '0';\r\n    const effect = of(null).pipe(\r\n      withLatestFrom(this.packetInfo$),\r\n      tap(([, packetInfo]) => {\r\n        this.setPacketInfo({...packetInfo, ...{isBet: val}});\r\n      }),\r\n      switchMap(([, packetInfo]) => {\r\n        return this.courseManageService.isBetUpdate(packetInfo.id, flag).pipe(\r\n          tapResponse(res => {\r\n            if (res.status === 201) {\r\n              SessionStorageUtil.putPacketInfoItem('isBet', flag);\r\n            }\r\n          }, () => EMPTY)\r\n        );\r\n      })).subscribe(() => effect.unsubscribe());\r\n  };\r\n\r\n  @ConfirmableDesc({\r\n    title: '提示',\r\n    content: '重新生成课次会覆盖已生成的课次，确定重新生成吗？',\r\n    type: 'warning'\r\n  })\r\n  private generateLessonsAlert() {\r\n    return new Promise((resolve) => {\r\n        this.generateLessonsReal(resolve);\r\n      }\r\n    );\r\n  }\r\n\r\n  /**\r\n   * 子题库树节点数据转换\r\n   * @param data 节点\r\n   */\r\n  private readonly conversionNode = (data) => {\r\n    if (data.length) {\r\n      data.forEach((item, ii) => {\r\n        if (item.sublibraryModuleList && item.sublibraryModuleList.length) {\r\n          data[ii].children = item.sublibraryModuleList;\r\n          data[ii].children.forEach((child, iii) => {\r\n            data[ii].children[iii].title = child.name;\r\n            data[ii].children[iii].key = String(child.id);\r\n            data[ii].children[iii].isLeaf = true;\r\n          });\r\n        }\r\n        data[ii].title = item.name;\r\n        data[ii].key = item.code;\r\n        data[ii].disabled = true;\r\n        data[ii].selectable = false;\r\n        if (!item.sublibraryModuleList || !item.sublibraryModuleList.length) {\r\n          data[ii].isLeaf = true;\r\n        }\r\n      });\r\n    }\r\n    return data;\r\n  };\r\n//#endregion\r\n\r\n}\r\n","<div class=\"container\" *ngIf=\"vm$ | async as vm\">\r\n  <ng-container *ngIf=\"packetInfo$ | async as packetInfo\">\r\n    <div class='module-tree pt20'>\r\n      <div class='item'>\r\n    <span class='item-label'>\r\n          考核专用：\r\n    </span>\r\n        <span *ngIf='packetInfo.preview===\"1\"&&!vm.subQuestionBank.length'>无子题库</span>\r\n        <nz-spin [nzSpinning]=\"vm.searchLoad\" [nzDelay]=\"0\" style='width: calc(100% - 100px);display: inline-block;'>\r\n          <nz-tree-select\r\n            [disabled]='packetInfo.preview===\"1\"|| (packetInfo.isUsed>0)'\r\n            [nzMultiple]='true'\r\n            style=\"width: 100%\"\r\n            [nzNodes]=\"vm.exam\"\r\n            nzDefaultExpandAll\r\n            nzShowSearch\r\n            [nzAllowClear]='false'\r\n            nzPlaceHolder=\"绑定子题库\"\r\n            [(ngModel)]=\"vm.subQuestionBankCurrent\"\r\n            (ngModelChange)='subQuestionBankChange($event,\"subQuestionBank\")'\r\n            [nzDropdownStyle]=\"{'max-height': '200px'}\"\r\n            [nzTreeTemplate]=\"nzTreeTemplate\"\r\n            #treeSelect\r\n          >\r\n          </nz-tree-select>\r\n          <ng-template #nzTreeTemplate let-node let-origin=\"origin\">\r\n            <span class=\"custom-node\">\r\n              <span *ngIf=\"!node.isLeaf\">\r\n                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>\r\n                <span class=\"folder-name\">{{ node.title }}</span>\r\n              </span>\r\n              <span *ngIf=\"node.isLeaf\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span class=\"file-name\">{{ node.title }}</span>\r\n              </span>\r\n            </span>\r\n          </ng-template>\r\n        </nz-spin>\r\n      </div>\r\n      <div class='list-container' [style.margin]='vm.subQuestionBank.length?\"20px 60px\":\"0\"'\r\n           cdkDropList\r\n           (cdkDropListDropped)=\"listDrop($event,'subQuestionBank')\">\r\n        <div class='list' *ngFor='let item of vm.subQuestionBank' cdkDrag\r\n             [style.cursor]='(packetInfo.preview===\"1\"|| packetInfo.isUsed>0)?\"not-allowed\":\"move\"'>\r\n          <div style='float:left' [title]='item.quebankName'>\r\n            <i nz-icon nzType=\"file-text\" nzTheme=\"outline\"></i>\r\n            <span style='margin-left:20px;'>{{item.quebankName}}</span>\r\n          </div>\r\n          <div style='float:right' *ngIf='!(packetInfo.preview===\"1\"||packetInfo.isUsed>0)'>\r\n            <i nz-icon nzType=\"delete\" nzTheme=\"outline\" style='cursor:pointer;'\r\n               (click)='dellistSublibraryItem(item)'></i>\r\n            <span class='icon-del' (click)='dellistSublibraryItem(item)'\r\n                  *ngIf='!(packetInfo.preview===\"1\"||packetInfo.isUsed>0)'>删除</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class='item'>\r\n        <span class='item-label'>智适应专用：</span>\r\n        <span *ngIf='packetInfo.preview===\"1\"&&!vm.subQuestionBankInt.length'>\r\n      无子题库\r\n    </span>\r\n        <nz-spin [nzSpinning]=\"vm.searchLoad\" [nzDelay]=\"0\" style='width: calc(100% - 100px);display: inline-block;'>\r\n          <nz-tree-select\r\n            [disabled]='packetInfo.preview===\"1\"|| (packetInfo.isUsed>0)'\r\n            [nzMultiple]='true'\r\n            [nzAllowClear]='false'\r\n            style=\"width: 100%\"\r\n            [nzNodes]=\"vm.intelligent\"\r\n            nzDefaultExpandAll\r\n            nzShowSearch\r\n            nzPlaceHolder=\"绑定子题库\"\r\n            [(ngModel)]=\"vm.subQuestionBankIntCurrent\"\r\n            (ngModelChange)='subQuestionBankChange($event,\"subQuestionBankInt\")'\r\n            [nzDropdownStyle]=\"{'max-height': '200px'}\"\r\n            [nzTreeTemplate]=\"nzTreeTemplateInt\"\r\n            #treeSelectInt\r\n          >\r\n          </nz-tree-select>\r\n          <ng-template #nzTreeTemplateInt let-node let-origin=\"origin\">\r\n            <span class=\"custom-node\">\r\n              <span *ngIf=\"!node.isLeaf\">\r\n                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>\r\n                <span class=\"folder-name\">{{ node.title }}</span>\r\n              </span>\r\n              <span *ngIf=\"node.isLeaf\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span class=\"file-name\">{{ node.title }}</span>\r\n              </span>\r\n            </span>\r\n          </ng-template>\r\n        </nz-spin>\r\n      </div>\r\n      <div class='list-container'\r\n           [style.margin]='vm.subQuestionBankInt.length?\"20px 60px\":\"0\"' cdkDropList\r\n           (cdkDropListDropped)=\"listDrop($event,'subQuestionBankInt')\">\r\n        <div class='list' *ngFor='let item of vm.subQuestionBankInt' cdkDrag\r\n             [style.cursor]='(packetInfo.preview===\"1\"|| packetInfo.isUsed>0)?\"not-allowed\":\"move\"'>\r\n          <div style='float:left' [title]='item.quebankName'>\r\n            <i nz-icon nzType=\"file-text\" nzTheme=\"outline\"></i>\r\n            <span style='margin-left:20px;'>{{item.quebankName}}</span>\r\n          </div>\r\n          <div style='float:right' *ngIf='!(packetInfo.preview===\"1\"||packetInfo.isUsed>0)'>\r\n            <i nz-icon nzType=\"delete\" nzTheme=\"outline\" style='cursor:pointer;'\r\n               (click)='dellistSublibraryItem(item)'></i>\r\n            <span class='icon-del' *ngIf='!(packetInfo.preview===\"1\"||packetInfo.isUsed>0)'\r\n                  (click)='dellistSublibraryItem(item)'>删除</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class='module-tree'>\r\n      <div class='item '>\r\n     <span class='item-label'>\r\n    闯关模式：<nz-switch [(ngModel)]=\"vm.breakthroughMode\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\"\r\n                    (ngModelChange)='otherSettingStoreService.breakthroughModeChange($event)'\r\n                    [nzDisabled]='packetInfo.preview===\"1\"||packetInfo.isUsed>0'></nz-switch>\r\n     </span>\r\n      </div>\r\n      <div class='list-container' [hidden]='!vm.breakthroughMode'>\r\n        <div class='list-item' *ngFor='let item of vm.levelLists;let i=index;'>\r\n          <div class='gk-text fl'>\r\n            关卡{{i + 1}}：\r\n          </div>\r\n          <div class='list fr' style='width:calc(100% - 70px);'>\r\n            <div class='fl'>\r\n              <span class='icon-pre'>试</span>\r\n              <span class='icon-text'>{{item.name}}</span>\r\n            </div>\r\n            <div class='fr'>\r\n              <button\r\n                class=\"other-button\"\r\n                [class.disable-edit]='packetInfo.preview===\"1\"?true:null'\r\n                [disabled]='packetInfo.preview===\"1\"?true:null'\r\n                nz-button\r\n                nzType=\"primary\" (click)='rewardSettings(item)'>\r\n                奖励设置\r\n              </button>\r\n              <a nz-button nzType=\"link\" (click)=\"editLevel(item)\" *ngIf='packetInfo.preview!==\"1\";else editDisable'>\r\n                <i nz-icon nzType=\"edit\" nzTheme=\"outline\" style='cursor:pointer;line-height:38px;'></i>\r\n                <span class='icon-del lh34' class='lh34 mr20 ml10'>编辑</span>\r\n              </a>\r\n              <ng-container\r\n                *ngIf='!(packetInfo.preview===\"1\"||(packetInfo.isUsed>0&&i!== vm.levelLists.length-1));else delDisable'>\r\n                <i nz-icon nzType=\"delete\" nzTheme=\"outline\" style='cursor:pointer;line-height:38px;'\r\n                   (click)='deleteLevel(item)'></i>\r\n                <span class='icon-del lh34' (click)='deleteLevel(item)'>删除</span>\r\n              </ng-container>\r\n              <ng-template #editDisable>\r\n                <a nz-button nzType=\"link\" style='cursor: not-allowed'>\r\n                  <i nz-icon nzType=\"edit\" nzTheme=\"outline\" class='icon-disable'></i>\r\n                  <span class='icon-del lh34 text-disbale'>编辑</span>\r\n                </a>\r\n              </ng-template>\r\n              <ng-template #delDisable>\r\n                <i nz-icon nzType=\"delete\" nzTheme=\"outline\"\r\n                   style='cursor:pointer;line-height:38px;color:#bfb6b6;cursor: not-allowed'></i>\r\n                <span class='icon-del lh34' style='color:#bfb6b6;cursor: not-allowed'>删除</span>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n          <div class='list fr' style='width:calc(100% - 130px);'\r\n               *ngFor='let itemI of item.coursePacketCardRecourseList'>\r\n            <div class='fl'>\r\n              <span class='icon-pre yellow'>资</span>\r\n              <span class='icon-text'>{{itemI.title}}</span>\r\n            </div>\r\n            <div class='fr'>\r\n              <ng-container *ngIf='packetInfo.preview!==\"1\";else delDisable'>\r\n                <i nz-icon nzType=\"delete\" nzTheme=\"outline\" style='cursor:pointer;line-height:38px;'\r\n                   (click)='deleteGift(itemI.id)'></i>\r\n                <span class='icon-del lh34' (click)='deleteGift(itemI.id)'>删除</span>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class='item pt0' [hidden]='!vm.breakthroughMode'>\r\n        <button\r\n          style='margin-left: 70px'\r\n          class=\"other-button\"\r\n          [class.disable-edit]='packetInfo.preview===\"1\"?true:null'\r\n          [disabled]='packetInfo.preview===\"1\"?true:null'\r\n          nz-button\r\n          nzType=\"primary\" (click)='addLevel()'>\r\n          <i nz-icon nzType=\"plus\" nzTheme=\"outline\" class='add-member-icon'></i>\r\n          新增关卡\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class='module-tree'>\r\n      <div class='item '>\r\n     <span class='item-label'>\r\n    99实训：<nz-switch [(ngModel)]=\"vm.practiceOn\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\"\r\n                    (ngModelChange)='otherSettingStoreService.practiceOnChange($event)'\r\n                    [nzDisabled]='packetInfo.preview===\"1\"||packetInfo.isUsed>0'></nz-switch>\r\n     </span>\r\n      </div>\r\n      <div class='list-container' [hidden]='!vm.practiceOn'>\r\n        <div class='list-item' *ngFor='let item of vm.companyLists;let i=index;'>\r\n          <div class='gk-text fl'>\r\n            公司{{i + 1}}：\r\n          </div>\r\n          <div class='list fr' style='width:calc(100% - 70px);'>\r\n            <div class='fl'>\r\n              <span class='icon-pre'>公</span>\r\n              <span class='icon-text'>{{item.name}}</span>\r\n            </div>\r\n            <div class='fr'>\r\n              <a nz-button nzType=\"link\" (click)=\"editCompany(item)\"\r\n                 *ngIf='!(packetInfo.preview===\"1\");else editDisable'>\r\n                <i nz-icon nzType=\"edit\" nzTheme=\"outline\" class='icon'></i>\r\n                <span class='lh34 mr20 ml10'>编辑</span>\r\n              </a>\r\n              <ng-template #editDisable>\r\n                <a nz-button nzType=\"link\" style='cursor: not-allowed'>\r\n                  <i nz-icon nzType=\"edit\" nzTheme=\"outline\" class='icon-disable'></i>\r\n                  <span class='icon-del lh34 text-disbale'>编辑</span>\r\n                </a>\r\n              </ng-template>\r\n              <ng-container\r\n                *ngIf='!(packetInfo.preview===\"1\"||(packetInfo.isUsed>0));else delDisable'>\r\n                <i nz-icon nzType=\"delete\" nzTheme=\"outline\" class='icon' (click)='deleteCompany(item)'></i>\r\n                <span class='icon-del lh34' (click)='deleteCompany(item)'>删除</span>\r\n              </ng-container>\r\n              <ng-template #delDisable>\r\n                <i nz-icon nzType=\"delete\" nzTheme=\"outline\" class='icon-disable'></i>\r\n                <span class='icon-del lh34 text-disbale'>删除</span>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class='item pt0' [hidden]='!vm.practiceOn'>\r\n        <button\r\n          style='margin-left: 70px'\r\n          class=\"other-button\"\r\n          [class.disable-edit]='(packetInfo.preview===\"1\" ||packetInfo.isUsed>0) ?true:null'\r\n          [disabled]='(packetInfo.preview===\"1\" ||packetInfo.isUsed>0)?true:null'\r\n          nz-button\r\n          nzType=\"primary\" (click)='addCompany()'>\r\n          <i nz-icon nzType=\"plus\" nzTheme=\"outline\" class='add-member-icon'></i>\r\n          新增公司\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div class='module-tree' *ngIf='packetInfo.teachType!==\"22\"'>\r\n      <div class='item '>\r\n          <span class='item-label'>\r\n    押题宝：<nz-switch [(ngModel)]=\"vm.isBet\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\"\r\n                   (ngModelChange)='otherSettingStoreService.isBetChange($event)'\r\n                               [nzDisabled]='packetInfo.preview===\"1\"||packetInfo.isUsed>0 || ((knowledgeNum$ | async) < 100 )'></nz-switch>\r\n     </span>\r\n\r\n        <div style='margin-top: 20px;padding-left:56px;'>提示：知识点数量大于等于100个才可以开启押题宝</div>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-container *ngIf='packetInfo.teachType!==\"22\"'>\r\n      <div class='item'>\r\n     <span class='item-label'>\r\n    总课次：\r\n     </span>\r\n        <nz-input-number\r\n          [(ngModel)]=\"packetInfo.lessonCount\"\r\n          [nzMin]=\"1\" [nzStep]=\"1\" [nzMax]='200'\r\n          [nzDisabled]='packetInfo.preview===\"1\"\r\n                       || (packetInfo.isUsed>0 &&userId!==packetInfo.majorLeaderId)'\r\n        ></nz-input-number>\r\n        <button nz-button nzType=\"primary\" (click)=\"generateLessons()\"\r\n                [disabled]='(\r\n              (packetInfo.isUsed>0  || packetInfo.preview===\"1\")?true:null)'\r\n                style='margin-left:20px' [nzLoading]='vm.isLoading'>\r\n          生成课次\r\n        </button>\r\n        <button nz-button nzType=\"primary\" (click)=\"newClass()\"\r\n                [nzLoading]='vm.isLoading'\r\n                [disabled]='((packetInfo.isUsed>0&&userId!==packetInfo.majorLeaderId)  || packetInfo.preview===\"1\")?true:null'\r\n                style='margin-left:20px'>\r\n          新增课次\r\n        </button>\r\n      </div>\r\n      <nz-spin [nzSpinning]=\"vm.isLoading\" [nzDelay]=\"0\">\r\n        <nz-table #basicTable [nzData]=\"vm.listOfData\" style='margin:0 60px;'\r\n                  [nzFrontPagination]='true'>\r\n          <thead>\r\n          <tr>\r\n            <th>课次序号</th>\r\n            <th>名称</th>\r\n            <th *ngIf='packetInfo.preview!==\"1\"'>操作</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let data of basicTable.data\">\r\n            <td>{{ data.index }}</td>\r\n            <td>{{ data.name }}</td>\r\n            <td *ngIf='packetInfo.preview!==\"1\"'>\r\n              <a (click)='edit(data)'>编辑</a>\r\n              <ng-container *ngIf='!(packetInfo.isUsed>0&&userId!==packetInfo.majorLeaderId)'>\r\n                <nz-divider nzType=\"vertical\"></nz-divider>\r\n                <a (click)='delTable(data.id)'>删除</a>\r\n              </ng-container>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </nz-table>\r\n      </nz-spin>\r\n    </ng-container>\r\n  </ng-container>\r\n</div>\r\n\r\n\r\n\r\n\r\n","import {ChangeDetectionStrategy, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {NzModalService, NzSafeAny, NzTreeSelectComponent} from 'ng-zorro-antd';\r\nimport {environment} from 'src/environments/environment';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ConfirmableDesc, ConfirmableFlat} from 'core/decorators';\r\nimport {LocalStorageUtil} from 'core/utils/localstorage.util';\r\nimport {EditLessonComponent} from './edit-lesson/edit-lesson.component';\r\nimport {OtherSettingStoreService} from './other-setting.store.service';\r\nimport {CompanyItem, LevelItem} from '../other-setting/other-setting.interface';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {LoadingControl} from 'core/base/common';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\n\r\n@Component({\r\n  selector: 'app-other-setting',\r\n  templateUrl: './other-setting.component.html',\r\n  styleUrls: ['./other-setting.component.less'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [OtherSettingStoreService]\r\n})\r\nexport class OtherSettingComponent implements OnInit {\r\n  readonly vm$ = this.otherSettingStoreService.vm$;\r\n  readonly knowledgeNum$ = this.otherSettingStoreService.knowledgeNum$;\r\n  readonly packetInfo$ = this.otherSettingStoreService.packetInfo$;\r\n  ossUrl = environment.OSS_URL;\r\n  userId = LocalStorageUtil.getUserId();\r\n  status = SessionStorageUtil.getPacketInfoItem('isUsed') > 0;\r\n  knoNumLimit = false;\r\n  @ViewChild('treeSelect') treeSelect: NzTreeSelectComponent;\r\n  @ViewChild('treeSelectInt') treeSelectInt: NzTreeSelectComponent;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private modalService: NzModalService,\r\n    public  otherSettingStoreService: OtherSettingStoreService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.otherSettingStoreService.dataInit();\r\n  }\r\n\r\n  @ConfirmableFlat({\r\n    title: '删除',\r\n    content: '确定删除该课次吗？',\r\n    type: 'error'\r\n  })\r\n  delTable(id: string, loadingControl?: LoadingControl) {\r\n    this.otherSettingStoreService.delTable({id, loadingControl});\r\n  }\r\n\r\n  @ConfirmableFlat({\r\n    title: '删除关卡',\r\n    content(args) {\r\n      return this.status ? '删除该关卡将同步删除所有学员在此关卡上的所有闯关记录。' : '确定删除' + args[0].name + '关卡吗？';\r\n    },\r\n    type: 'error',\r\n  })\r\n  deleteLevel(data: LevelItem, loadingControl?: LoadingControl) {\r\n    this.otherSettingStoreService.levelDeletion({id: data.id, loadingControl});\r\n  }\r\n\r\n\r\n  @ConfirmableFlat({\r\n    title: '删除公司',\r\n    content: (args) => ('确定删除' + args[0].name + '公司吗？'),\r\n    type: 'error',\r\n  })\r\n  deleteCompany(data: CompanyItem, loadingControl?: LoadingControl) {\r\n    this.otherSettingStoreService.companyDeletion({id: data.id, loadingControl});\r\n  }\r\n\r\n  editCompany(data: CompanyItem) {\r\n    this.otherSettingStoreService.addCompanyEffect(data);\r\n  }\r\n\r\n  @ConfirmableFlat({\r\n    title: '删除奖励',\r\n    content: '确定删除该资源吗？',\r\n    type: 'error'\r\n  })\r\n  deleteGift(id: string, loadingControl?: LoadingControl) {\r\n    this.otherSettingStoreService.deleteGift({id, loadingControl});\r\n  }\r\n\r\n  @ConfirmableFlat({\r\n    title: '删除子题库',\r\n    content: '确定删除该子题库吗？',\r\n    type: 'error'\r\n  })\r\n  dellistSublibraryItem(data: any, loadingControl?: LoadingControl) {\r\n    this.otherSettingStoreService.dellistSublibraryItem({data, loadingControl});\r\n  }\r\n\r\n  formatProgress(percent) {\r\n    return Math.trunc(percent) + '%';\r\n  }\r\n\r\n  /**\r\n   * 生成课次\r\n   */\r\n  generateLessons() {\r\n    this.otherSettingStoreService.generateLessonsEffect();\r\n  }\r\n\r\n  /**\r\n   * 新增课次\r\n   */\r\n  newClass() {\r\n    this.otherSettingStoreService.newClass();\r\n  }\r\n\r\n  /**\r\n   *  编辑课次\r\n   * @param data 当前课次\r\n   */\r\n  edit(data: any) {\r\n    this.modalService.create<EditLessonComponent, NzSafeAny>({\r\n      nzTitle: '编辑课次',\r\n      nzContent: EditLessonComponent,\r\n      nzComponentParams: {\r\n        data,\r\n      },\r\n      nzMaskClosable: false,\r\n      nzCancelText: '取消',\r\n      nzOkText: '确定',\r\n    }).afterClose\r\n      .subscribe((flag: boolean) => {\r\n        if (flag) {\r\n          this.otherSettingStoreService.getLessonCountTable();\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * 新增子题库\r\n   * @param data 选中节点\r\n   * @param type 考核专用/智适应专用\r\n   */\r\n  subQuestionBankChange(data: number[], type: 'subQuestionBank' | 'subQuestionBankInt') {\r\n    const {treeSelect, treeSelectInt} = this;\r\n    this.otherSettingStoreService.subQuestionBankChange({\r\n      data,\r\n      type,\r\n      treeSelect: (type === 'subQuestionBank' ? treeSelect : treeSelectInt)\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 新增奖励\r\n   * @param data 当前关卡\r\n   */\r\n  rewardSettings(data) {\r\n    this.otherSettingStoreService.rewardSettings(data);\r\n  }\r\n\r\n  /**\r\n   * 新增关卡\r\n   */\r\n  addLevel() {\r\n    this.otherSettingStoreService.addLevelEffect({});\r\n  }\r\n\r\n  editLevel(data: LevelItem) {\r\n    this.otherSettingStoreService.addLevelEffect(data);\r\n  }\r\n\r\n  /**\r\n   * 新增公司\r\n   */\r\n  addCompany() {\r\n    this.otherSettingStoreService.addCompanyEffect({});\r\n  }\r\n\r\n  listDrop(event: CdkDragDrop<any, any>, label: 'subQuestionBank' | 'subQuestionBankInt') {\r\n    this.otherSettingStoreService.listDrop({data: event, label});\r\n  }\r\n\r\n\r\n}\r\n","import {Component, OnInit, Input} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {NzModalRef} from 'ng-zorro-antd/modal';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {repeatName, spaceValidator} from 'src/app/shared/validators/atr-validtors';\r\n\r\n@Component({\r\n  selector: '',\r\n  templateUrl: './structure-adjustment-chapter.component.html',\r\n  styleUrls: ['./structure-adjustment-chapter.component.less']\r\n})\r\nexport class StructureAdjustmentChapterComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  loading = false;\r\n  @Input() data: any;\r\n  @Input() formData: any;\r\n  @Input() courseId: string;\r\n  @Input() coursePacketId: string;\r\n  lock = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private courseMgService: CourseManageService,\r\n    private nzModalRef: NzModalRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = this.fb.group({\r\n      name: [this.formData ? this.formData.name : '',\r\n        [Validators.required, Validators.maxLength(60), repeatName(this.data), spaceValidator()]]\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (!this.lock) {\r\n      Object.keys(this.formGroup.controls).forEach(key => {\r\n        this.formGroup.controls[key].markAsDirty();\r\n        this.formGroup.controls[key].updateValueAndValidity();\r\n      });\r\n      if (this.formGroup.invalid) {\r\n        return;\r\n      }\r\n      this.lock = true;\r\n      const chapterId = this.formData ? this.formData.id : '';\r\n      const chapterSeq = this.formData ? this.formData.seq : (this.data.length > 0 ? this.data.length + 1 : 1);\r\n      const postData = {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        chapters: [\r\n          {\r\n            id: chapterId,\r\n            name: this.formGroup.value.name,\r\n            seq: chapterSeq\r\n          }\r\n        ]\r\n      };\r\n      this.loading = true;\r\n      this.courseMgService.save_courseChapter(postData).subscribe(res => {\r\n        this.lock = false;\r\n        this.loading = false;\r\n        if (res.status !== 200) {\r\n          return;\r\n        }\r\n        const chapter = res.data[0];\r\n        chapter.children = [];\r\n        this.nzModalRef.close(res.data[0]);\r\n      }, () => this.lock = false);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.nzModalRef.close(null);\r\n  }\r\n\r\n}\r\n","<form nz-form [formGroup]=\"formGroup\">\r\n  <nz-form-item>\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired>本章名称</nz-form-label>\r\n    <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\" [nzErrorTip]=\"errNameTipsTpl\">\r\n      <input nz-input formControlName=\"name\" placeholder=\"请输入章节名称，60字以内\" />\r\n      <ng-template #errNameTipsTpl let-control>\r\n        <ng-container *ngIf=\"control.hasError('required')\">\r\n          请输入章名称\r\n        </ng-container>\r\n        <ng-container *ngIf=\"control.hasError('maxlength')\">\r\n          名称60字以内\r\n        </ng-container>\r\n        <ng-container *ngIf=\"control.hasError('repeatName')\">\r\n          重复名称\r\n        </ng-container>\r\n      </ng-template>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-control [nzXs]=\"{ span: 24, offset: 0 }\" [nzSm]=\"{ span: 16, offset: 8 }\">\r\n      <button nz-button nzType=\"primary\" [nzLoading]=\"loading\" (click)=\"save()\">保存</button>\r\n      <button nz-button nzType=\"default\" style=\"margin-left: 20px;\" (click)=\"cancel()\">取消</button>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NzModalRef, NzModalService} from 'ng-zorro-antd/modal';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {Json} from 'core/base/common';\r\nimport {environment} from 'src/environments/environment';\r\nimport {LevelItem, SubModule} from '../other-setting.interface';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {StatisticsLogService} from '@app/busi-services/statistics-log.service';\r\nimport {STATISTICALRULES} from 'core/base/static-data';\r\nimport {LocalStorageUtil} from 'core/utils/localstorage.util';\r\n\r\n\r\n@Component({\r\n  selector: 'app-new-level',\r\n  templateUrl: './new-level.component.html',\r\n  styleUrls: ['./new-level.component.less'],\r\n})\r\nexport class NewLevelComponent implements OnInit {\r\n  @Input() courseId: string;\r\n  @Input() coursePacketId: string;\r\n  @Input() moduleArr: SubModule[] = [];\r\n  @Input() levelLists: LevelItem[] = [];\r\n  @Input() levelItem: Partial<LevelItem> = {};\r\n  newLevelForm: FormGroup;\r\n  newLevelLoading = false;\r\n  paperArr: Json[] = [];\r\n  totalTestPaperScore = 0;\r\n  private paperIdToName: Json = {};\r\n  private examIdToPaperUUId: Json = {};\r\n\r\n\r\n  constructor(\r\n    private nzMesService: NzMessageService,\r\n    private nzModalService: NzModalService,\r\n    private nzModalRef: NzModalRef,\r\n    private fb: FormBuilder,\r\n    private statisticsLogService: StatisticsLogService,\r\n    private courseManageService: CourseManageService,\r\n  ) {\r\n    this.newLevelForm = this.fb.group({\r\n      newLevel: ['', [Validators.required]],\r\n      testPaperName: [null, [Validators.required]],\r\n      complianceConditions: [undefined, [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    const {levelItem} = this;\r\n    const levelId = SessionStorageUtil.getSubmodule();\r\n    this.newLevelForm.patchValue({\r\n      newLevel: levelItem.id ? Number(levelItem.quebankId) : levelId ? Number(levelId) : this.moduleArr[0]?.id\r\n    });\r\n    this.getPapers(false).then(flag => {\r\n      if (flag) {\r\n        const obj: { complianceConditions?: number, testPaperName?: number } = {};\r\n        if (levelItem.id) {\r\n          obj.complianceConditions = levelItem.passScore;\r\n          obj.testPaperName = Number(levelItem.examId.split('-')[1]);\r\n        } else {\r\n          obj.testPaperName = this.paperArr[0] ? Number(this.paperArr[0].examId) : null;\r\n        }\r\n        this.newLevelForm.patchValue(obj);\r\n      }\r\n    });\r\n  }\r\n\r\n  disableIf(item) {\r\n    return this.levelLists.map(e => e.examId.split('-')[0]).indexOf(item.paperUuid) > -1;\r\n  }\r\n\r\n  getPapers(change: boolean) {\r\n    if (change) { // 记录缓存\r\n      SessionStorageUtil.putSubmodule(this.newLevelForm.value.newLevel);\r\n    }\r\n    return new Promise((resolve => {\r\n      ToolsUtil.postAjax(environment.questionBankApi + 'system/qkcPaper/examInfoByModuleId', {\r\n        sublibraryModuleIdList: [this.newLevelForm.value.newLevel], pageNum: 1, pageSize: 10000\r\n      }, {'Content-Type': 'application/json'}).subscribe(resultS => {\r\n        try {\r\n          const resP = JSON.parse(resultS);\r\n          if (resP.code === 200) {\r\n            this.paperArr = resP.data.rows;\r\n            if (change) {\r\n              const testPaperName = (this.paperArr[0] && this.paperArr[0].examId) ? Number(this.paperArr[0].examId) : undefined;\r\n              this.newLevelForm.patchValue({\r\n                testPaperName,\r\n              });\r\n              Object.keys(this.newLevelForm.controls).forEach(key => {\r\n                this.newLevelForm.controls[key].markAsUntouched();\r\n                this.newLevelForm.controls[key].markAsPristine();\r\n                this.newLevelForm.controls[key].updateValueAndValidity();\r\n              });\r\n            }\r\n            this.paperArr.forEach(itemPaper => {\r\n              this.paperIdToName[itemPaper.examId] = itemPaper.examName;\r\n              this.examIdToPaperUUId[itemPaper.examId] = itemPaper.paperUuid;\r\n            });\r\n            resolve(true);\r\n          } else {\r\n            resolve(false);\r\n            this.paperArr = [];\r\n            this.nzMesService.error(resP.message);\r\n          }\r\n        } catch (e) {\r\n          this.paperArr = [];\r\n          this.nzMesService.error('题库服务异常');\r\n          resolve(false);\r\n        }\r\n      });\r\n    }));\r\n  }\r\n\r\n\r\n  save() {\r\n    for (const i in this.newLevelForm.controls) {\r\n      if (this.newLevelForm.controls.hasOwnProperty(i)) {\r\n        this.newLevelForm.controls[i].markAsDirty();\r\n        this.newLevelForm.controls[i].updateValueAndValidity();\r\n      }\r\n    }\r\n    if (this.newLevelForm.invalid) {\r\n      return;\r\n    }\r\n    this.newLevelLoading = true;\r\n    const examId = this.newLevelForm.value.testPaperName;\r\n    const seq = this.levelItem?.seq;\r\n    const content = {\r\n      id: this.levelItem?.id,\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      quebankId: this.newLevelForm.value.newLevel,\r\n      name: this.paperIdToName[examId],\r\n      examId: this.examIdToPaperUUId[examId] + '-' + this.newLevelForm.value.testPaperName,\r\n      passScore: this.newLevelForm.value.complianceConditions,\r\n      seq: seq ? seq : ToolsUtil.getMaxSeq(this.levelLists)\r\n    };\r\n    this.courseManageService.addCoursePacketCard(content).subscribe(res => {\r\n      this.newLevelLoading = false;\r\n      if (res.status === 201) {\r\n        const edit = !!this.levelItem.id;\r\n        const field = edit ? 'modify' : 'addCode';\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: edit ? '修改关卡试卷' : '新增关卡',\r\n          actionCode: STATISTICALRULES.packetInfo['otherSet-levelthrough-action'][field],\r\n          content: JSON.stringify(content),\r\n        });\r\n        this.nzModalRef.close(true);\r\n      }\r\n    }, () => {\r\n      this.newLevelLoading = false;\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.nzModalRef.close(false);\r\n  }\r\n\r\n  testPaperNameChange(examId: string) {\r\n    if (examId) {\r\n      this.paperArr.every((paper) => {\r\n        if (paper.examId === examId) {\r\n          this.totalTestPaperScore = paper.score;\r\n          if (this.totalTestPaperScore < this.newLevelForm.value.complianceConditions) {\r\n            this.newLevelForm.patchValue({\r\n              complianceConditions: this.totalTestPaperScore\r\n            });\r\n          }\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n    } else {\r\n      this.totalTestPaperScore = 0;\r\n      this.newLevelForm.patchValue({\r\n        complianceConditions: this.totalTestPaperScore\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","<nz-spin [nzSpinning]=\"newLevelLoading\"\r\n         [nzDelay]=\"0\">\r\n  <form nz-form [formGroup]=\"newLevelForm\">\r\n    <nz-form-item style='width:50%;float: left;'>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>选择试卷</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"模块名称不能为空\">\r\n        <nz-select formControlName=\"newLevel\" style='flex:1' (ngModelChange)='getPapers(true)'\r\n                   [nzShowSearch]='true'>\r\n          <nz-option [nzValue]=\"item.id\" [nzLabel]=\"item.name\" *ngFor='let item of moduleArr;'></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item style='width:50%;float: left;'>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"试卷名称不能为空\">\r\n        <nz-select formControlName=\"testPaperName\" style='flex:1' [nzShowSearch]='true'\r\n                   (ngModelChange)='testPaperNameChange($event)'>\r\n          <nz-option [nzValue]=\"item.examId\" [nzLabel]=\"item.examName\"\r\n                     *ngFor='let item of paperArr;'></nz-option>\r\n          <!--          [nzDisabled]='disableIf(item)'-->\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item style='width:50%'>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>达标条件</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"达标条件不能为空\">\r\n        <nz-input-number nzPlaceHolder=\"请输入分数值\" [nzMin]=\"0\" [nzMax]=\"totalTestPaperScore\"\r\n                         formControlName=\"complianceConditions\"\r\n                         [nzStep]=\"1\"\r\n                         style=\"min-width:140px;\"\r\n        ></nz-input-number>\r\n        <span style='margin-left:20px;'>试卷总分：<span style='color:#8fc9fe'>{{totalTestPaperScore}}分</span></span>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n  <div *nzModalFooter>\r\n    <button nz-button (click)=\"cancel()\">取消</button>\r\n    <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"newLevelLoading\">确定</button>\r\n  </div>\r\n</nz-spin>\r\n","import {Component, Inject, Input, LOCALE_ID, OnDestroy, OnInit, Renderer2} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NzModalRef, NzModalService} from 'ng-zorro-antd/modal';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {MenuService} from 'core/services/menu.service';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {AliOssService} from 'core/services/ali-oss.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {KnowledgeManageService} from 'src/app/busi-services/knowledge-manag.service';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {NzUploadXHRArgs} from 'ng-zorro-antd';\r\nimport {TrainManageService} from '@app/busi-services/train-manage.service';\r\nimport {WINDOW} from '@app/service/service.module';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {UploadDir} from 'core/utils/uploadDir';\r\nimport {UploadOssService} from 'core/services/upload-oss.service';\r\nimport {HttpResponse} from '@angular/common/http';\r\nimport {NzUploadFile} from 'ng-zorro-antd/upload/interface';\r\n\r\n\r\n@Component({\r\n  selector: 'app-video-import',\r\n  templateUrl: './video-import.component.html',\r\n  styleUrls: ['./video-import.component.less'],\r\n})\r\nexport class VideoImportComponent implements OnInit , OnDestroy {\r\n\r\n  videoImportForm: FormGroup;\r\n  videoImportLoading = false;\r\n  loading = false;\r\n  nzFileList: NzUploadFile[] = [];\r\n  @Input() courseId: string;\r\n  // @Input() afterOpen: EventEmitter<void>;\r\n  @Input() coursePacketId: string;\r\n\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private menuService: MenuService,\r\n    private nzMesService: NzMessageService,\r\n    private courseMgService: CourseManageService,\r\n    private nzModalService: NzModalService,\r\n    private nzModalRef: NzModalRef,\r\n    private aliOssService: AliOssService,\r\n    private fb: FormBuilder,\r\n    private modalService: NzModalService,\r\n    private knowledgeManageService: KnowledgeManageService,\r\n    private renderer2: Renderer2,\r\n    private trainManageService: TrainManageService,\r\n    private sanitizer: DomSanitizer,\r\n    private uploadOssService: UploadOssService,\r\n    @Inject(LOCALE_ID) public locale: string,\r\n    @Inject(WINDOW) public win: any,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.videoImportForm = this.fb.group({\r\n      videoUrl: ['', Validators.required]\r\n    });\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n\r\n  // 自定义删除\r\n  removeFileSelf = () => {\r\n    this.videoImportForm.patchValue({\r\n      videoUrl: '',\r\n    });\r\n    this.nzFileList = [];\r\n  }\r\n\r\n\r\n  // 上传excel校验\r\n  beforeVideoUpload = (file: any) => {\r\n    const type = ToolsUtil.getFileType(file.name);\r\n    if (type === 'excel') {\r\n      return true;\r\n    } else {\r\n      this.nzMesService.error('请上传excel,支持后缀xls, xlsx');\r\n    }\r\n  }\r\n\r\n  // 上传视频\r\n  customVideoRequest = (item: NzUploadXHRArgs) => {\r\n    this.loading = true;\r\n    this.uploadOssService\r\n      .uploadOss(item.file, UploadDir.knowledge_file)\r\n      .subscribe((result) => {\r\n        this.loading = false;\r\n        this.videoImportForm.patchValue({\r\n          videoUrl: result,\r\n        });\r\n        item.onSuccess({...item}, item.file, {});\r\n      }, (err) => {\r\n        this.loading = false;\r\n        item.onError(err, item.file);\r\n        this.nzMesService.error(JSON.stringify(err));\r\n      });\r\n  }\r\n\r\n\r\n  // 录播下载excel模板\r\n  downTemplate() {\r\n    this.courseMgService.exportExcelVideo().subscribe((resp: HttpResponse<Blob>) => {\r\n        // const headers: HttpHeaders = resp.headers;\r\n        // (window as any).aa=headers.get('content-disposition').split('=')[1];\r\n        // console.log(headers.get('content-disposition').split('=')[1]);\r\n        const link = document.createElement('a');\r\n        // 支持HTML5下载属性的浏览器\r\n        const url = URL.createObjectURL(resp.body);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', '导入视频模板');\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      },\r\n      error => this.nzMesService.error(error));\r\n  }\r\n\r\n  save() {\r\n    if (!this.videoImportForm.value.videoUrl) {\r\n      this.nzMesService.warning('请先上传文件');\r\n      return;\r\n    }\r\n    this.videoImportLoading = true;\r\n    const params = {\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      fileUrl: this.videoImportForm.value.videoUrl\r\n    };\r\n    this.courseMgService.excelImportVideo(params).subscribe(res => {\r\n      this.videoImportLoading = false;\r\n      if (res.status === 200) {\r\n        this.nzMesService.success('导入成功');\r\n        this.nzModalRef.close(true);\r\n      } else {\r\n        if (res.status === 500) {\r\n          this.nzMesService.warning(res.message);\r\n        }\r\n      }\r\n    }, () => {\r\n      this.videoImportLoading = false;\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.nzModalRef.close(false);\r\n  }\r\n}\r\n\r\n","<nz-spin [nzSpinning]=\"loading\"\r\n         [nzDelay]=\"0\">\r\n<form nz-form [formGroup]=\"videoImportForm\">\r\n  <nz-form-item>\r\n    <nz-form-label [nzSpan]=\"5\" nzRequired style='max-width:100px;'>本地上传</nz-form-label>\r\n    <nz-form-control style='position:relative;'>\r\n      <nz-spin [nzSpinning]=\"videoImportLoading\"\r\n               [nzDelay]=\"0\">\r\n        <nz-upload\r\n          class=\"upload-list-inline\"\r\n          nzListType=\"picture\"\r\n          [nzShowUploadList]=' { showPreviewIcon: false, showRemoveIcon: true, showDownloadIcon: false }'\r\n          [(nzFileList)]=\"nzFileList\"\r\n          [nzRemove]='removeFileSelf'\r\n          [nzBeforeUpload]=\"beforeVideoUpload\"\r\n          [nzCustomRequest]=\"customVideoRequest\"\r\n        >\r\n          <button nz-button [disabled]='this.videoImportForm.value.videoUrl===\"\"?false:true'\r\n                  style='margin-bottom: 20px;'>\r\n                    <span><i nz-icon\r\n                             nzType=\"upload\" style='font-size:20px;'></i>上传文件</span>\r\n          </button>\r\n        </nz-upload>\r\n        <button nz-button style='position:absolute;left:126px;top:0;' (click)='downTemplate()'>\r\n                    <span><i nz-icon\r\n                             nzType=\"snippets\" style='font-size:20px;margin-right:20px'\r\n                             nzTheme=\"outline\"></i>模板下载</span>\r\n        </button>\r\n      </nz-spin>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n</form>\r\n<div *nzModalFooter>\r\n  <button nz-button (click)=\"cancel()\">取消</button>\r\n  <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"videoImportLoading\" >确定</button>\r\n</div>\r\n</nz-spin>\r\n\r\n\r\n\r\n\r\n","import {Component, OnInit, Input} from '@angular/core';\r\nimport {NzModalRef} from 'ng-zorro-antd/modal';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {NodeChangeEvent} from '../course-structure-tree/course-structure-tree.component';\r\n\r\n@Component({\r\n  selector: 'app-upload-handout',\r\n  templateUrl: './upload-handout.component.html',\r\n  styleUrls: ['./upload-handout.component.less'],\r\n})\r\nexport class UploadHandoutComponent implements OnInit {\r\n  isLoading = false;\r\n  files = [];\r\n  acceptTypeFile = {\r\n    acceptType: '',\r\n    desc: '',\r\n  };\r\n  acceptTypeFiles = {\r\n    deafult: {\r\n      acceptType: 'pdf,doc,ppt,docx,xls,xlsx,pptx,png,jpg,jpeg,mp4,rar,zip',\r\n      desc:\r\n        '支持扩展名：pdf、doc、docx、xls、xlsx、ppt、pptx、png、jpg、mp4、rar、zip',\r\n    },\r\n    courseTimeDivision: {\r\n      acceptType: 'pdf,doc,ppt,docx,xls,xlsx,pptx,png,jpg,jpeg,mp4',\r\n      desc: '支持扩展名：pdf、doc、docx、xls、xlsx、ppt、pptx、png、jpg、mp4',\r\n    },\r\n  };\r\n  @Input() node: NodeChangeEvent;\r\n  @Input() seq: number;\r\n  @Input() type: string;\r\n  @Input() limit = 0;\r\n  @Input() maxSize;\r\n  learningTarget = '1';\r\n\r\n  constructor(\r\n    private nzModalRef: NzModalRef,\r\n    private courseMgService: CourseManageService,\r\n    private nzMsg: NzMessageService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.setAcceptType();\r\n\r\n  }\r\n\r\n  setAcceptType() {\r\n    if (this.node.type === 'course-time-division') {\r\n      this.acceptTypeFile = this.acceptTypeFiles.courseTimeDivision;\r\n    } else {\r\n      this.acceptTypeFile = this.acceptTypeFiles.deafult;\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.nzModalRef.destroy();\r\n  }\r\n\r\n  confirm() {\r\n    const params: any = this.formatPostData(this.node);\r\n    if (!this.learningTarget) {\r\n      this.nzMsg.warning('请选择学习目标');\r\n      return;\r\n    }\r\n    if (params.length === 0) {\r\n      this.nzMsg.warning('请上传文件');\r\n      return;\r\n    }\r\n    let source$ = null;\r\n    switch (this.node.type) {\r\n      case 'chapter':\r\n        source$ = this.courseMgService.batchSave_courseChapterFile(params);\r\n        break;\r\n      case 'section':\r\n        if (this.type === '104') {\r\n          source$ = this.courseMgService.batchSave_courseSectionTaskFile(params);\r\n        } else {\r\n          source$ = this.courseMgService.batchSave_courseSectionFile(params);\r\n        }\r\n        break;\r\n      case 'course-time-division':\r\n        source$ = this.courseMgService.batchSave_courseTimeFile(params);\r\n        break;\r\n      default:\r\n        source$ = null;\r\n    }\r\n    if (!source$) {\r\n      return;\r\n    }\r\n\r\n    this.isLoading = true;\r\n    source$.subscribe(\r\n      (res) => {\r\n        this.isLoading = false;\r\n        if (res.status !== 201) {\r\n          this.nzMsg.error(res.message || '未知错误');\r\n          return;\r\n        }\r\n        this.nzModalRef.destroy(params);\r\n      },\r\n      (err) => {\r\n        this.isLoading = false;\r\n        this.nzMsg.error(JSON.stringify(err));\r\n      }\r\n    );\r\n  }\r\n\r\n  formatPostData(node: NodeChangeEvent) {\r\n    const data = node.data;\r\n    return this.files.map((file, i) => {\r\n      if (node.type === 'chapter') {\r\n        return {\r\n          courseId: data.courseId,\r\n          coursePacketId: data.coursePacketId,\r\n          courseChapterId: data.id,\r\n          attachmentName: file.name,\r\n          attachmentPath: file.path,\r\n          aattachmentExt: ToolsUtil.getExt(file.name),\r\n          seq: this.seq + i,\r\n        };\r\n      } else if (node.type === 'section') {\r\n\r\n        const obj: any = {\r\n          courseId: data.courseId,\r\n          coursePacketId: data.coursePacketId,\r\n          courseChapterId: data.courseChapterId,\r\n          courseSectionId: data.id,\r\n          attachmentName: file.name,\r\n          attachmentPath: file.path,\r\n          aattachmentExt: ToolsUtil.getExt(file.name),\r\n          sourceType: 1,\r\n          seq: this.seq + i,\r\n          type: this.type,\r\n          learningGoalCode: this.learningTarget\r\n        };\r\n        if (this.type === '104' || this.type === '101') {\r\n          obj.name = file.name;\r\n          obj.status = '1';\r\n          obj.isNeed = 0;\r\n          obj.downloadType = '0';\r\n          obj.gradeType = '1';\r\n          obj.taskType = '0';\r\n        } else {\r\n          obj.downloadType = '2';\r\n        }\r\n        return obj;\r\n      } else if (node.type === 'course-time-division') {\r\n        return {\r\n          courseId: data.courseId,\r\n          coursePacketId: data.coursePacketId,\r\n          courseTimeId: data.id,\r\n          attachmentName: file.name,\r\n          attachmentPath: file.path,\r\n          aattachmentExt: ToolsUtil.getExt(file.name),\r\n          seq: this.seq + i,\r\n        };\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div>\r\n  <div style='margin-bottom: 20px;'>\r\n    <span style='color:red'>*</span>学习目标：\r\n    <nz-select nzShowSearch nzPlaceHolder=\"请选择学习目标\" [(ngModel)]=\"learningTarget\" style='min-width:100px;'>\r\n      <nz-option nzLabel=\"了解\" nzValue=\"1\"></nz-option>\r\n      <nz-option nzLabel=\"理解\" nzValue=\"2\"></nz-option>\r\n      <nz-option nzLabel=\"掌握\" nzValue=\"3\"></nz-option>\r\n      <nz-option nzLabel=\"应用\" nzValue=\"4\"></nz-option>\r\n      <nz-option nzLabel=\"分析\" nzValue=\"5\"></nz-option>\r\n      <nz-option nzLabel=\"创新\" nzValue=\"6\"></nz-option>\r\n    </nz-select>\r\n  </div>\r\n  <qkc-upload\r\n    [acceptType]=\"acceptTypeFiles.deafult.acceptType\"\r\n    [limit]=\"limit\"\r\n    [maxSize]='maxSize'\r\n    multiple='true'\r\n    [(ngModel)]=\"files\">\r\n    <button nz-button><i nz-icon nzType=\"upload\"></i><span>选择文件</span></button>\r\n    <p style=\"margin-top: 8px;\">{{ acceptTypeFiles.deafult.desc }}</p>\r\n  </qkc-upload>\r\n\r\n  <div style=\"text-align: center;margin-top: 20px;\">\r\n    <button nz-button nzType=\"default\" style=\"margin-right: 20px;\" (click)=\"cancel()\">取消</button>\r\n    <button nz-button nzType=\"primary\" [nzLoading]=\"isLoading\" (click)=\"confirm()\">确定上传</button>\r\n  </div>\r\n</div>\r\n","<div class=\"container\">\r\n  <div class=\"left\">\r\n    <div class=\"row-title\">章节结构</div>\r\n    <app-course-structure-tree\r\n      [chapterSelectable]=\"false\"\r\n      [coursePacketId]=\"coursePacketId\"\r\n      (nodeChange)=\"nodeChange($event)\"\r\n      [defaultSection]='defaultSection'\r\n      [defaultExpandedKeys]='defaultExpandedKeys'\r\n      #tree>\r\n    </app-course-structure-tree>\r\n    <span class='not-content' *ngIf='preview===\"1\"&&!tree?.nodes.length'>\r\n      该课包尚未建立章节内容\r\n    </span>\r\n  </div>\r\n\r\n  <div class=\"gap\"></div>\r\n\r\n  <div class='right-content'>\r\n    <nz-spin [nzSpinning]=\"listLoading || hanoutLoading\" [nzDelay]=\"0\">\r\n      <div class=\"row-title\" style='padding-left: 10px;margin-top: 20px;'>\r\n        {{curNode?.data?.title}}\r\n        <button nz-button nzType=\"primary\" (click)='importVideo()' *ngIf='teachType===\"22\"'\r\n                style='float:right;margin-right:15px;'>导入视频\r\n        </button>\r\n      </div>\r\n      <div class=\"right\" *ngIf='teachType!==\"22\"'>\r\n        <nz-collapse [style]=\"{ border: 'none', 'background-color': '#fff'}\">\r\n          <nz-collapse-panel\r\n            [style]=\"{'margin-bottom': '24px', border: '1px solid #d9d9d9'}\"\r\n            [(nzActive)]=\"active1\"\r\n            [nzHeader]=\"lectureTpl\">\r\n            <ng-template #lectureTpl>\r\n            <span>\r\n              讲义\r\n              <i nz-icon\r\n                 nzType=\"question-circle\"\r\n                 nzTheme=\"outline\"\r\n                 nz-tooltip\r\n                 [nzTooltipTitle]=\"tipsJy\"\r\n                 [nzTooltipOverlayStyle]='{\"max-width\": \"770px\"}'\r\n                 class='font-question'\r\n                 nzTooltipTrigger='click'\r\n                 (click)='stopPropagation($event)'\r\n              ></i>\r\n            </span>\r\n            </ng-template>\r\n            <ng-template #tipsJy>\r\n              <div>讲义主要提供给讲师给学员上课使用：</div>\r\n              <div>1、建议优先WPS制作PPT ；</div>\r\n              <div>2、尽量少用第三模板；</div>\r\n              <div>3、PPT的文件大小应控制在100M之内；</div>\r\n            </ng-template>\r\n            <div class=\"list\" cdkDropList (cdkDropListDropped)=\"sectionDrop($event,'1')\">\r\n              <ng-container *ngIf=\"preview==='0'||handoutsLecture?.length\">\r\n                <div class=\"list-item\" *ngFor=\"let item of handoutsLecture;let sectionIdx=index;\" cdkDrag>\r\n              <span class=\"title\" [title]=\"item.attachmentName\">\r\n                <nz-avatar style=\"vertical-align: middle;\" [nzShape]=\"'circle'\" [nzSize]=\"20\"\r\n                           [ngStyle]=\"{ 'background-color': '#ea5c6c' }\"\r\n                           [nzText]=\"'讲'\"></nz-avatar>\r\n                {{ item.attachmentName }}\r\n              </span>\r\n                  <ng-container *ngIf='preview===\"0\"'>\r\n                    <div class='other-containers'>\r\n                    <span>\r\n                      <label\r\n                        nz-checkbox\r\n                        [nzDisabled]='disableMainLecture(item)'\r\n                        [(ngModel)]=\"item.isMainFile\"\r\n                        (ngModelChange)=\"mainFileChange($event, item)\">\r\n                        主讲义\r\n                      </label>\r\n                    </span>\r\n                    </div>\r\n                    <select class='other-container' [(ngModel)]=\"item.downloadType\"\r\n                            *ngIf='item.attachmentPath'\r\n                            (ngModelChange)=\"downloadChange($event, item)\">\r\n                      <option value=\"0\">不可下载</option>\r\n                      <option value=\"1\">讲师可下载</option>\r\n                    </select>\r\n                  </ng-container>\r\n                  <nz-spin [nzSpinning]=\"associateing[sectionIdx]\" [nzDelay]=\"0\" nzTip='查询主讲义信息中...'>\r\n                    <div class=\"action-group\">\r\n                      <a nz-button nzType=\"link\" (click)=\"previewHandout(item)\">\r\n                        <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>\r\n                        预览\r\n                      </a>\r\n                      <a nz-button nzType=\"link\" (click)=\"downLoad(item)\"\r\n                         *ngIf='item.attachmentPath&&item.attachmentPath.indexOf(\".\")>0'>\r\n                        <i nz-icon nzType=\"download\" nzTheme=\"outline\"></i>\r\n                        下载\r\n                      </a>\r\n                      <a nz-button nzType=\"link\" (click)=\"associate(item,sectionIdx)\"\r\n                         *ngIf='showassolite(item)'>\r\n                        <i nz-icon nzType=\"disconnect\" nzTheme=\"outline\"></i>\r\n                        关联\r\n                      </a>\r\n                      <a nz-button nzType=\"link\" [style]=\"{ color: '#f53131'}\" (click)=\"delHandout(item)\"\r\n                         *ngIf='preview===\"0\"'>\r\n                        <i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>\r\n                        删除\r\n                      </a>\r\n                    </div>\r\n                  </nz-spin>\r\n                </div>\r\n                <div class=\"add-section\" *ngIf='preview===\"0\"'>\r\n                  <div>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\"\r\n                            (click)=\"callSchoolEnterpriseLib('read','101')\">阅读库调用\r\n                    </button>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" (click)=\"uploadHandout('101')\">本地上传</button>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n              <span *ngIf=\"preview==='1'&&!handoutsLecture?.length\">没有讲义内容</span>\r\n            </div>\r\n          </nz-collapse-panel>\r\n        </nz-collapse>\r\n      </div>\r\n      <div class=\"right\" *ngIf=\"teachType==='22'\">\r\n        <nz-collapse [style]=\"{ border: 'none', 'background-color': '#fff'}\">\r\n          <nz-collapse-panel\r\n            [style]=\"{'margin-bottom': '24px', border: '1px solid #d9d9d9'}\"\r\n            [(nzActive)]=\"active2\"\r\n            [nzHeader]=\"recordingTpl\">\r\n            <ng-template #recordingTpl>\r\n              <span>录播</span>\r\n            </ng-template>\r\n            <div class=\"list\" cdkDropList (cdkDropListDropped)=\"sectionDrop($event,'2')\">\r\n              <ng-container *ngIf=\"preview==='0'||handoutsRecording?.length\">\r\n                <div class=\"list-item\" *ngFor=\"let item of handoutsRecording;let sectionIdx=index;\" cdkDrag>\r\n                  <div>\r\n                  <span class=\"title\" [title]=\"item.attachmentName\">\r\n<!--                    <nz-avatar [nzShape]=\"'square'\" [nzSize]=\"14\" [nzSrc]=\"getIcon(item.aattachmentExt)\"></nz-avatar>-->\r\n                &nbsp;     <nz-avatar style=\"vertical-align: middle;\" [nzShape]=\"'circle'\" [nzSize]=\"20\"\r\n                                      [ngStyle]=\"{ 'background-color': '#675dca' }\"\r\n                                      [nzText]=\"'视'\"></nz-avatar>\r\n                    {{ item.attachmentName }}\r\n                  </span>\r\n                    <span style='margin-left: 10px;color:#1890ff;vertical-align: top;'>{{item.authorName}}</span>\r\n                  </div>\r\n                  <div class=\"action-group\">\r\n                    <a nz-button nzType=\"link\" (click)=\"editHandout(item)\">\r\n                      <i nz-icon nzType=\"edit\" nzTheme=\"outline\"></i>\r\n                      编辑\r\n                    </a>\r\n                    <a nz-button nzType=\"link\" (click)=\"previewHandout(item)\">\r\n                      <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>\r\n                      预览\r\n                    </a>\r\n                    <a nz-button nzType=\"link\" [style]=\"{ color: '#f53131'}\" (click)=\"delHandout(item)\"\r\n                       *ngIf='preview===\"0\"'>\r\n                      <i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>\r\n                      删除\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"add-section\" *ngIf='preview===\"0\"'>\r\n                  <div>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\"\r\n                            (click)=\"videoUpload('polyway')\">保利威视频\r\n                    </button>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" (click)=\"videoUpload('localVideo')\">上传视频\r\n                    </button>\r\n                  </div>\r\n                  <div></div>\r\n                </div>\r\n              </ng-container>\r\n              <span *ngIf=\"preview==='1'&&!handoutsRecording?.length\">没有视频内容</span>\r\n            </div>\r\n          </nz-collapse-panel>\r\n        </nz-collapse>\r\n      </div>\r\n      <div class=\"right\" *ngIf='teachType!==\"22\"'>\r\n        <nz-collapse [style]=\"{ border: 'none', 'background-color': '#fff'}\">\r\n          <nz-collapse-panel\r\n            [style]=\"{'margin-bottom': '24px', border: '1px solid #d9d9d9'}\"\r\n            [(nzActive)]=\"active3\"\r\n            [nzHeader]=\"panelHeaderTpl\">\r\n            <ng-template #panelHeaderTpl>\r\n            <span>任务\r\n              <i nz-icon nzType=\"question-circle\" nzTheme=\"outline\"\r\n                 nz-tooltip [nzTooltipTitle]=\"tipsPak\" [nzTooltipOverlayStyle]='{\"max-width\": \"770px\"}'\r\n                 class='font-question' nzTooltipTrigger='click' (click)='stopPropagation($event)'></i></span>\r\n            </ng-template>\r\n            <ng-template #tipsPak>\r\n              <div>每个小节下的独立任务不能超过3个</div>\r\n              <div>未被主讲义绑定的任务为独立任务</div>\r\n            </ng-template>\r\n            <div class=\"list\" cdkDropList (cdkDropListDropped)=\"sectionDrop($event,'3')\">\r\n              <ng-container *ngIf=\"preview==='0'||taskList?.length\">\r\n                <div class=\"list-item\" *ngFor=\"let item of taskList;let sectionIdx=index;\" cdkDrag>\r\n                  <div class=\"title task\">\r\n                  <span [title]=\"item.name\"\r\n                        class='title-name'\r\n                        [ngStyle]='{\"max-width\":item.linkId?\"calc(100% - 56px)\":\"100%\"}'>\r\n                    <nz-avatar style=\"vertical-align: middle;\" [nzShape]=\"'circle'\" [nzSize]=\"20\"\r\n                               [ngStyle]=\"{ 'background-color': getColor(item.taskType) }\"\r\n                               [nzText]=\"getText(item.taskType)\"></nz-avatar>\r\n                    {{ item.name }}\r\n                    <span style='color:#33ade7' *ngIf='showExamType(item)'>{{getExamText(item)}}</span>\r\n                    <span style='color:#33ade7' *ngIf='ShowJobType(item)'>{{getTaskFormText(item.taskForm)}}</span>\r\n                  </span>\r\n                    <span style=\"color:red;min-width:56px;vertical-align: top;\" *ngIf='item.linkId'>【已绑】</span>\r\n                  </div>\r\n                  <!-- <span style='min-width: 70px;'>-->\r\n                  <!--      <label-->\r\n                  <!--        nz-checkbox-->\r\n                  <!--        [(ngModel)]=\"item.isNeed\"-->\r\n                  <!--        [disabled]='preview===\"1\"'-->\r\n                  <!--        (ngModelChange)=\"isNeedChange($event, item)\">-->\r\n                  <!--     必选-->\r\n                  <!--   </label>-->\r\n                  <!--   </span>-->\r\n                  <select [(ngModel)]=\"item.downloadType\"\r\n                          [ngClass]='{\"other-container\":true}'\r\n                          [disabled]='preview===\"1\"'\r\n                          *ngIf='item.attachmentPath'\r\n                          (ngModelChange)=\"downloadChange($event, item,true)\">\r\n                    <option value=\"0\">不可下载</option>\r\n                    <option value=\"1\">讲师可下载</option>\r\n                    <option value=\"2\">讲师+学生可下载</option>\r\n                  </select>\r\n                  <div style='min-width: 100px;height: 10px;' *ngIf=\"!item.attachmentPath\">\r\n                  </div>\r\n                  <select [(ngModel)]=\"item.gradeType\"\r\n                          class='other-container'\r\n                          [class.disable-select]='preview===\"1\" || exerciseType ===\"1\" || item.taskType===\"4\"'\r\n                          [disabled]='preview===\"1\" || exerciseType ===\"1\" || item.taskType===\"4\"'\r\n                          *ngIf='item.taskType===\"2\" || item.taskType===\"4\"'\r\n                          (ngModelChange)=\"gradeTypeChange($event, item)\">\r\n                    <option value=\"1\">学生自评</option>\r\n                    <option value=\"2\">老师批改</option>\r\n                  </select>\r\n                  <div style='min-width: 100px;height: 10px;'\r\n                       *ngIf='!(item.taskType===\"2\" || item.taskType===\"4\")'>\r\n                  </div>\r\n                  <select [(ngModel)]=\"item.isGrade\"\r\n                          class='other-container'\r\n                          [disabled]='preview===\"1\"'\r\n                          *ngIf='item.taskType===\"1\"'\r\n                          (ngModelChange)=\"isGradeChange($event, item)\">\r\n                    <option value=\"\">请选择</option>\r\n                    <option value=\"0\">不评分</option>\r\n                    <option value=\"1\">需评分</option>\r\n                  </select>\r\n                  <div style='min-width: 100px;height: 10px;'\r\n                       *ngIf='!(item.taskType===\"1\")'>\r\n                  </div>\r\n                  <button\r\n                    class=\"other-button\"\r\n                    *ngIf='(item.taskType===\"4\" || item.taskType===\"6\" || item.taskType===\"7\")&&preview===\"0\"'\r\n                    nz-button\r\n                    nzType=\"primary\" (click)='examSetting(item)'>\r\n                    {{(item.taskType === \"4\") ? '考试设置' : '权限设置'}}\r\n                  </button>\r\n                  <div style='width: 88px;height: 10px;'\r\n                       *ngIf='!((item.taskType===\"4\" || item.taskType===\"6\" || item.taskType===\"7\")&&preview===\"0\")'>\r\n                  </div>\r\n                  <div class=\"action-group\">\r\n                    <a nz-button nzType=\"link\" (click)=\"previewTask(item)\">\r\n                      <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>\r\n                      预览\r\n                    </a>\r\n                    <a nz-button nzType=\"link\" (click)=\"edit(item)\"\r\n                       *ngIf='(item.taskType===\"4\"||item.taskType===\"2\"||item.taskType===\"6\"||item.taskType===\"7\")&&preview===\"0\"'>\r\n                      <i nz-icon nzType=\"edit\" nzTheme=\"outline\" (click)=\"edit(item)\"></i>\r\n                      编辑\r\n                    </a>\r\n                    <a nz-button nzType=\"link\" (click)=\"downLoad(item)\"\r\n                       *ngIf='item.attachmentPath&&item.taskType!==\"4\"&&item.attachmentPath.indexOf(\".\")>0'>\r\n                      <i nz-icon nzType=\"download\" nzTheme=\"outline\"></i>\r\n                      下载\r\n                    </a>\r\n                    <a nz-button nzType=\"link\" [style]=\"{ color: '#f53131'}\" (click)=\"delHandout(item,true)\"\r\n                       *ngIf='preview===\"0\"'>\r\n                      <i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>\r\n                      删除\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"add-section\" *ngIf='preview===\"0\"&&taskList.length<limitTask'>\r\n                  <div>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\"\r\n                            (click)=\"callSchoolEnterpriseLib('read','1')\">阅读库调用\r\n                    </button>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\"\r\n                            (click)=\"callSchoolEnterpriseLib( 'case','1')\">案例库调用\r\n                    </button>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\"\r\n                            (click)=\"callSchoolEnterpriseLib( 'setting','1')\">实训库调用\r\n                    </button>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\">\r\n                      <a nz-dropdown [nzDropdownMenu]=\"menuwj\">\r\n                        <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\r\n                        问卷调研\r\n                      </a>\r\n                    </button>\r\n                    <nz-dropdown-menu #menuwj=\"nzDropdownMenu\">\r\n                      <ul nz-menu nzSelectable>\r\n                        <li nz-menu-item (click)=\"questionnaireCall('questionnaireType')\">问卷调用</li>\r\n                        <li nz-menu-item (click)=\"questionnaireCall('evaluationType')\">测评调用</li>\r\n                      </ul>\r\n                    </nz-dropdown-menu>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\">\r\n                      <a nz-dropdown [nzDropdownMenu]=\"menuExercises\">\r\n                        <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\r\n                        练习作业\r\n                      </a>\r\n                    </button>\r\n                    <nz-dropdown-menu #menuExercises=\"nzDropdownMenu\">\r\n                      <ul nz-menu nzSelectable>\r\n                        <li nz-menu-item (click)=\"entryExercises()\">新增作业</li>\r\n                        <li nz-menu-item (click)=\"chooseExercises()\">选择作业</li>\r\n                      </ul>\r\n                    </nz-dropdown-menu>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\">\r\n                      <a nz-dropdown [nzDropdownMenu]=\"menu\">\r\n                        <i nz-icon nzType=\"plus\" nzTheme=\"outline\"></i>\r\n                        考试任务\r\n                      </a>\r\n                    </button>\r\n                    <nz-dropdown-menu #menu=\"nzDropdownMenu\">\r\n                      <ul nz-menu nzSelectable>\r\n                        <li nz-menu-item (click)=\"addVolume()\">新增组卷</li>\r\n                        <li nz-menu-item (click)=\"chooseTestPaper()\">选择试卷</li>\r\n                      </ul>\r\n                    </nz-dropdown-menu>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" (click)=\"uploadHandout('104')\"\r\n                            [style]=\"{'margin-right': '10px'}\"><i nz-icon nzType=\"upload\" nzTheme=\"outline\"></i>本地上传\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n              <span *ngIf=\"preview==='1'&&!taskList?.length\">没有任务内容</span>\r\n            </div>\r\n          </nz-collapse-panel>\r\n        </nz-collapse>\r\n      </div>\r\n      <div class=\"right\">\r\n        <nz-collapse [style]=\"{ border: 'none', 'background-color': '#fff'}\">\r\n          <nz-collapse-panel\r\n            [style]=\"{'margin-bottom': '24px', border: '1px solid #d9d9d9'}\"\r\n            [(nzActive)]=\"active4\"\r\n            [nzHeader]=\"zlTpl\">\r\n            <ng-template #zlTpl>\r\n            <span>资料<i nz-icon nzType=\"question-circle\" nzTheme=\"outline\"\r\n                       nz-tooltip [nzTooltipTitle]=\"tipszl\" [nzTooltipOverlayStyle]='{\"max-width\": \"770px\"}'\r\n                       class='font-question' nzTooltipTrigger='click' (click)='stopPropagation($event)'></i></span>\r\n            </ng-template>\r\n            <ng-template #tipszl>\r\n              <div>主动发送给学员学习的资源</div>\r\n            </ng-template>\r\n            <div class=\"list\" cdkDropList (cdkDropListDropped)=\"sectionDrop($event,'4')\">\r\n              <ng-container *ngIf=\"preview==='0'||handoutsMaterial?.length\">\r\n                <div class=\"list-item\" [id]='\"material\"+sectionIdx'\r\n                     *ngFor=\"let item of handoutsMaterial;let sectionIdx=index;\" cdkDrag>\r\n                  <div>\r\n              <span class=\"title\" [title]=\"item.attachmentName\">\r\n<!--                <nz-avatar [nzShape]=\"'square'\" [nzSize]=\"14\" [nzSrc]=\"getIcon(item.aattachmentExt)\"></nz-avatar>-->\r\n                &nbsp; <nz-avatar style=\"vertical-align: middle;\" [nzShape]=\"'circle'\" [nzSize]=\"20\"\r\n                                  [ngStyle]=\"{ 'background-color': '#34bbc7' }\"\r\n                                  [nzText]=\"'资'\"></nz-avatar>\r\n                {{ item.attachmentName }}\r\n              </span>\r\n                  </div>\r\n                  <div class=\"action-group\">\r\n                    <a nz-button nzType=\"link\" (click)=\"previewHandout(item)\">\r\n                      <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>预览\r\n                    </a>\r\n                    <a nz-button nzType=\"link\" (click)=\"downLoad(item)\"\r\n                       *ngIf='item.attachmentPath&&item.attachmentPath.indexOf(\".\")>0'>\r\n                      <i nz-icon nzType=\"download\" nzTheme=\"outline\"></i>\r\n                      下载\r\n                    </a>\r\n                    <a nz-button nzType=\"link\" [style]=\"{ color: '#f53131'}\" (click)=\"delHandout(item)\"\r\n                       *ngIf='preview===\"0\"'>\r\n                      <i nz-icon nzType=\"delete\" nzTheme=\"outline\"></i>\r\n                      删除\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                <div class=\"add-section\" *ngIf='preview===\"0\"'>\r\n                  <div>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" [style]=\"{'margin-right': '10px'}\"\r\n                            (click)=\"callSchoolEnterpriseLib('read','102')\">阅读库调用\r\n                    </button>\r\n                    <button nz-button nzType=\"primary\" [nzSize]=\"'small'\" (click)=\"uploadHandout('102')\">本地上传</button>\r\n                  </div>\r\n                  <div></div>\r\n                </div>\r\n              </ng-container>\r\n              <span *ngIf=\"preview==='1'&&!handoutsMaterial?.length\">没有资料内容</span>\r\n            </div>\r\n          </nz-collapse-panel>\r\n        </nz-collapse>\r\n      </div>\r\n    </nz-spin>\r\n  </div>\r\n</div>\r\n<!--保利威上传-->\r\n<ng-template #polywaymodal>\r\n  <form nz-form [formGroup]=\"polyway\">\r\n    <nz-form-item *ngIf=\"reset\">\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>视频ID</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"视频ID不能为空\">\r\n        <input nz-input type=\"text\" formControlName=\"videoUrl\" placeholder=\"请输入视频ID\"\r\n               (keyup.enter)=\"comfirmUpload('polyway')\"/>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>指导讲师</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"指导讲师不能为空\">\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择指导讲师\" formControlName=\"authorId\">\r\n          <nz-option [nzLabel]=\"item.name\" [nzValue]=\"item.id\" *ngFor='let item of teacherList;'></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>视频名字</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"attachmentNameTpl\" style='max-width: 316px;'>\r\n        <input nz-input type=\"text\" formControlName=\"attachmentName\" placeholder=\"请输入视频名字\"\r\n               (keyup.enter)=\"comfirmUpload('polyway')\"/>\r\n      </nz-form-control>\r\n      <span style=\"margin:5px 0 0 10px;\"\r\n            [style.color]='polyway.controls.attachmentName.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{polyway.value.attachmentName.length}}/50</span>\r\n      <ng-template #attachmentNameTpl let-control>\r\n        <div *ngIf=\"control.hasError('required')\">课程名称不能为空</div>\r\n        <div *ngIf=\"control.hasError('maxlength')\">课程名称不能超过50个字符</div>\r\n      </ng-template>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>视频标签</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"视频标签不能为空\">\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择视频标签\" formControlName=\"videoType\">\r\n          <nz-option nzLabel=\"主要\" nzValue=\"1\"></nz-option>\r\n          <nz-option nzLabel=\"冲刺\" nzValue=\"2\"></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item *ngIf=\"reset\">\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>排序</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\">\r\n        <nz-input-number [nzStep]=\"1\" formControlName=\"seq\" [nzMin]='1' (keyup.enter)=\"comfirmUpload('polyway')\"\r\n        ></nz-input-number>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n<!--本地上传-->\r\n<ng-template #localvideomodal>\r\n  <form nz-form [formGroup]=\"localVideo\">\r\n    <nz-form-item *ngIf=\"reset\">\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>视频</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzErrorTip=\"请上传视频\">\r\n        <nz-spin [nzSpinning]=\"loading\"\r\n                 [nzDelay]=\"0\">\r\n          <qkc-upload\r\n            [showUploadList]='{showPreviewIcon: true,showRemoveIcon: true,showDownloadIcon: false}'\r\n            [isPolyway]='true'\r\n            (optsChange)='compltedUpload()'\r\n            limit=\"1\"\r\n            listType=\"picture-card\"\r\n            acceptType=\"flv,avi,mpg,mp4,wmv,mov,3gp,.asf\"\r\n            formControlName=\"videoUrl\">\r\n            <i nz-icon nzType=\"upload\" style='font-size:20px;'></i>\r\n          </qkc-upload>\r\n          <div class='desc'>\r\n            支持格式flv,avi,mpg,mp4,wmv,mov,3gp,.asf等\r\n          </div>\r\n          <div class='desc'>\r\n            (本地上传到保利威的视频需要经过保利威审核后才能正常播放)\r\n          </div>\r\n        </nz-spin>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>视频标签</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"视频标签不能为空\">\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择视频标签\" formControlName=\"videoType\">\r\n          <nz-option nzLabel=\"主要\" nzValue=\"1\">主要</nz-option>\r\n          <nz-option nzLabel=\"冲刺\" nzValue=\"2\">冲刺</nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>视频名字</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"attachmentNameTplLocal\" style='max-width: 316px;'>\r\n        <input nz-input type=\"text\" formControlName=\"attachmentName\" placeholder=\"请输入视频名字\"\r\n               (keyup.enter)=\"comfirmUpload('localVideo')\"/>\r\n      </nz-form-control>\r\n      <span style=\"margin:5px 0 0 10px;\"\r\n            [style.color]='localVideo.controls.attachmentName.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{localVideo.value.attachmentName.length}}/50</span>\r\n      <ng-template #attachmentNameTplLocal let-control>\r\n        <div *ngIf=\"control.hasError('required')\">课程名称不能为空</div>\r\n        <div *ngIf=\"control.hasError('maxlength')\">课程名称不能超过50个字符</div>\r\n      </ng-template>\r\n    </nz-form-item>\r\n\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>指导讲师</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"指导讲师不能为空\">\r\n        <nz-spin [nzSpinning]=\"instructorLoading\" [nzDelay]=\"0\">\r\n          <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择指导讲师\" formControlName=\"authorId\">\r\n            <nz-option [nzLabel]=\"item.name\" [nzValue]=\"item.id\" *ngFor='let item of teacherList;'></nz-option>\r\n          </nz-select>\r\n        </nz-spin>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item *ngIf=\"reset\">\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>排序</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\">\r\n        <nz-input-number [nzStep]=\"1\" formControlName=\"seq\" [nzMin]='1' (keyup.enter)=\"comfirmUpload('localVideo')\"\r\n        ></nz-input-number>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n<!--新增考试-->\r\n<ng-template #addExam>\r\n  <form nz-form [formGroup]=\"addExamFrom\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>任务名称</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"examNameTpl\">\r\n        <input nz-input type=\"text\" formControlName=\"missionName\" placeholder=\"请输入任务名称\"/>\r\n      </nz-form-control>\r\n      <span style=\"margin:5px 0 0 10px;display: inline-block;\"\r\n            [style.color]='addExamFrom.controls.missionName.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{addExamFrom.value.missionName.length}}/50</span>\r\n      <ng-template #examNameTpl let-control>\r\n        <div *ngIf=\"control.hasError('required')\">\r\n          任务名称不能为空\r\n        </div>\r\n        <div *ngIf=\"control.hasError('maxlength')\">{{'任务名称不能超过50个字符'}}</div>\r\n      </ng-template>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>组卷方式</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"组卷方式不能为空\">\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择组卷方式\" formControlName=\"formingMethod\">\r\n          <nz-option nzLabel=\"选题/录题组卷\" [nzValue]=\"1\"></nz-option>\r\n          <nz-option nzLabel=\"题型难度随机组卷\" [nzValue]=\"2\"></nz-option>\r\n          <nz-option nzLabel=\"知识点难度抽题组卷\" [nzValue]=\"3\"></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>子题库</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"子题库不能为空\">\r\n        <nz-spin [nzSpinning]=\"searchLoad\" [nzDelay]=\"0\">\r\n          <nz-tree-select\r\n            style=\"width: 100%\"\r\n            [nzNodes]=\"exam\"\r\n            nzDefaultExpandAll\r\n            nzShowSearch\r\n            nzPlaceHolder=\"请选择子题库\"\r\n            formControlName=\"subQuestionBank\"\r\n            (ngModelChange)='subQuestionBankChange($event)'\r\n            [nzDropdownStyle]=\"{'max-height': '400px'}\"\r\n            [nzTreeTemplate]=\"nzTreeTemplate\"\r\n          >\r\n          </nz-tree-select>\r\n        </nz-spin>\r\n        <ng-template #nzTreeTemplate let-node let-origin=\"origin\">\r\n            <span class=\"custom-node\">\r\n              <span *ngIf=\"!node.isLeaf\">\r\n                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>\r\n                <span class=\"folder-name\">{{ node.title }}</span>\r\n              </span>\r\n              <span *ngIf=\"node.isLeaf\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span class=\"file-name\">{{ node.title }}</span>\r\n              </span>\r\n            </span>\r\n        </ng-template>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n<!--编辑考试-->\r\n<ng-template #addExamExit>\r\n  <form nz-form [formGroup]=\"addExamFrom\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>任务名称</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"examNameTpl\">\r\n        <input nz-input type=\"text\" formControlName=\"missionName\" placeholder=\"请输入任务名称\"/>\r\n      </nz-form-control>\r\n      <span style=\"margin:5px 0 0 10px;display: inline-block;\"\r\n            [style.color]='addExamFrom.controls.missionName.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{addExamFrom.value.missionName.length}}/50</span>\r\n      <ng-template #examNameTpl let-control>\r\n        <div *ngIf=\"control.hasError('required')\">\r\n          任务名称不能为空\r\n        </div>\r\n        <div *ngIf=\"control.hasError('maxlength')\">{{'任务名称不能超过50个字符'}}</div>\r\n      </ng-template>\r\n    </nz-form-item>\r\n    <!--    <nz-form-item >-->\r\n    <!--      <nz-form-label [nzSpan]=\"5\" nzRequired>组卷方式</nz-form-label>-->\r\n    <!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"组卷方式不能为空\">-->\r\n    <!--        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择组卷方式\" formControlName=\"formingMethod\"-->\r\n    <!--                   [nzDisabled]='true'>-->\r\n    <!--          <nz-option nzLabel=\"选题/录题组卷\" [nzValue]=\"1\"></nz-option>-->\r\n    <!--          <nz-option nzLabel=\"题型难度随机组卷\" [nzValue]=\"2\"></nz-option>-->\r\n    <!--          <nz-option nzLabel=\"知识点难度抽题组卷\" [nzValue]=\"3\"></nz-option>-->\r\n    <!--        </nz-select>-->\r\n    <!--      </nz-form-control>-->\r\n    <!--    </nz-form-item>-->\r\n    <nz-form-item *ngIf='addExamFrom.value.subQuestionBank'>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>子题库</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"子题库不能为空\">\r\n        <nz-spin [nzSpinning]=\"searchLoad\" [nzDelay]=\"0\">\r\n          <nz-tree-select\r\n            [nzDisabled]='true'\r\n            style=\"width: 100%\"\r\n            [nzNodes]=\"exam\"\r\n            nzDefaultExpandAll\r\n            nzShowSearch\r\n            [nzAllowClear]='false'\r\n            nzPlaceHolder=\"请选择子题库\"\r\n            formControlName=\"subQuestionBank\"\r\n            (ngModelChange)='subQuestionBankChange($event)'\r\n            [nzDropdownStyle]=\"{'max-height': '400px'}\"\r\n            [nzTreeTemplate]=\"nzTreeTemplate\"\r\n          >\r\n          </nz-tree-select>\r\n        </nz-spin>\r\n        <ng-template #nzTreeTemplate let-node let-origin=\"origin\">\r\n            <span class=\"custom-node\">\r\n              <span *ngIf=\"!node.isLeaf\">\r\n                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>\r\n                <span class=\"folder-name\">{{ node.title }}</span>\r\n              </span>\r\n              <span *ngIf=\"node.isLeaf\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span class=\"file-name\">{{ node.title }}</span>\r\n              </span>\r\n            </span>\r\n        </ng-template>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <div style='text-align:right;'>\r\n      <button nz-button nzType=\"primary\" (click)=\"jobCancel()\" style='margin-right:20px;'>取消</button>\r\n      <button nz-button nzType=\"primary\" (click)=\"jumpQuestionBank('curExamData')\" style='margin-right:20px;'>跳转题库\r\n      </button>\r\n      <button nz-button nzType=\"primary\" (click)=\"examDetermine()\" style='margin-right:20px;'>确定</button>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n<!--新增作业-->\r\n<ng-template #jobSettings>\r\n  <form nz-form [formGroup]=\"addJobFromSeting\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>任务名称\r\n      </nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"jobNameTpl\">\r\n        <input nz-input placeholder=\"请输入任务名称\" formControlName=\"name\"/>\r\n      </nz-form-control>\r\n      <span style=\"margin:5px 0 0 10px;display: inline-block;\"\r\n            [style.color]='addJobFromSeting.controls.name.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{addJobFromSeting.value.name.length}}/50</span>\r\n      <ng-template #jobNameTpl let-control>\r\n        <div *ngIf=\"control.hasError('required')\">\r\n          任务名称不能为空\r\n        </div>\r\n        <div *ngIf=\"control.hasError('maxlength')\">{{'任务名称不能超过50个字符'}}</div>\r\n      </ng-template>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>任务类型\r\n      </nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"任务类型不能为空\">\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择任务类型\" formControlName=\"taskForm\">\r\n          <nz-option nzLabel=\"课前\" nzValue=\"0\"></nz-option>\r\n          <nz-option nzLabel=\"课中\" nzValue=\"1\"></nz-option>\r\n          <nz-option nzLabel=\"课后\" nzValue=\"2\"></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>子题库</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"子题库不能为空\">\r\n        <nz-tree-select\r\n          style=\"width: 100%\"\r\n          [nzNodes]=\"exercise\"\r\n          nzDefaultExpandAll\r\n          nzShowSearch\r\n          nzPlaceHolder=\"请选择子题库\"\r\n          formControlName=\"subQuestionBank\"\r\n          (ngModelChange)='execrisesSubQuestionBankChange($event)'\r\n          [nzDropdownStyle]=\"{'max-height': '400px'}\"\r\n          [nzTreeTemplate]=\"nzTreeTemplateSubQuestionBank\"\r\n        >\r\n        </nz-tree-select>\r\n        <ng-template #nzTreeTemplateSubQuestionBank let-node let-origin=\"origin\">\r\n            <span class=\"custom-node\">\r\n              <span *ngIf=\"!node.isLeaf\">\r\n                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>\r\n                <span class=\"folder-name\">{{ node.title }}</span>\r\n              </span>\r\n              <span *ngIf=\"node.isLeaf\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span class=\"file-name\">{{ node.title }}</span>\r\n              </span>\r\n            </span>\r\n        </ng-template>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n</ng-template>\r\n<!--编辑作业-->\r\n<ng-template #jobSettingsEdit>\r\n  <form nz-form [formGroup]=\"addJobFromSeting\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>任务名称\r\n      </nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"jobNameTpl\">\r\n        <input nz-input placeholder=\"请输入任务名称\" formControlName=\"name\"/>\r\n      </nz-form-control>\r\n      <span style=\"margin:5px 0 0 10px;display: inline-block;\"\r\n            [style.color]='addJobFromSeting.controls.name.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{addJobFromSeting.value.name.length}}/50</span>\r\n      <ng-template #jobNameTpl let-control>\r\n        <div *ngIf=\"control.hasError('required')\">\r\n          任务名称不能为空\r\n        </div>\r\n        <div *ngIf=\"control.hasError('maxlength')\">{{'任务名称不能超过50个字符'}}</div>\r\n      </ng-template>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>任务类型\r\n      </nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"任务类型不能为空\">\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择任务类型\" formControlName=\"taskForm\">\r\n          <nz-option nzLabel=\"课前\" nzValue=\"0\"></nz-option>\r\n          <nz-option nzLabel=\"课中\" nzValue=\"1\"></nz-option>\r\n          <nz-option nzLabel=\"课后\" nzValue=\"2\"></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <!--    <nz-form-item>-->\r\n    <!--      <nz-form-label [nzSpan]=\"5\" nzRequired>子题库</nz-form-label>-->\r\n    <!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"子题库不能为空\">-->\r\n    <!--        <nz-tree-select-->\r\n    <!--          [nzDisabled]='true'-->\r\n    <!--          [nzAllowClear]='false'-->\r\n    <!--          style=\"width: 100%\"-->\r\n    <!--          [nzNodes]=\"exercise\"-->\r\n    <!--          nzPlaceHolder=\"请选择子题库\"-->\r\n    <!--          formControlName=\"subQuestionBank\"-->\r\n    <!--          (ngModelChange)='execrisesSubQuestionBankChange($event)'-->\r\n    <!--          [nzDropdownStyle]=\"{'max-height': '400px'}\"-->\r\n    <!--          [nzTreeTemplate]=\"nzTreeTemplateSubQuestionBank\"-->\r\n    <!--        >-->\r\n    <!--        </nz-tree-select>-->\r\n    <!--        <ng-template #nzTreeTemplateSubQuestionBank let-node let-origin=\"origin\">-->\r\n    <!--            <span class=\"custom-node\">-->\r\n    <!--              <span *ngIf=\"!node.isLeaf\">-->\r\n    <!--                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>-->\r\n    <!--                <span class=\"folder-name\">{{ node.title }}</span>-->\r\n    <!--              </span>-->\r\n    <!--              <span *ngIf=\"node.isLeaf\">-->\r\n    <!--                <i nz-icon nzType=\"file\"></i>-->\r\n    <!--                <span class=\"file-name\">{{ node.title }}</span>-->\r\n    <!--              </span>-->\r\n    <!--            </span>-->\r\n    <!--        </ng-template>-->\r\n    <!--      </nz-form-control>-->\r\n    <!--    </nz-form-item>-->\r\n    <div style='text-align:right;'>\r\n      <button nz-button nzType=\"primary\" (click)=\"jobCancel()\" style='margin-right:20px;'>取消</button>\r\n      <button nz-button nzType=\"primary\" (click)=\"jumpQuestionBank('curJobData')\" style='margin-right:20px;'>跳转题库\r\n      </button>\r\n      <button nz-button nzType=\"primary\" (click)=\"jobDetermine()\" style='margin-right:20px;'>确定</button>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n<!--试卷调用-->\r\n<nz-modal [(nzVisible)]=\"examListPreview\" (nzOnCancel)=\"examListPreview=false;examSubQuestionBankExam=[]\" nzTitle='选择试卷'\r\n          nzWidth='1000' [nzFooter]='null' [nzBodyStyle]='{maxHeight:\"550px\"}'>\r\n  <div class='header'>\r\n    <div class='header-container wcl'>\r\n      <div class='header-item w31'>\r\n        <nz-select nzPlaceHolder=\"请选择查询关键字\" [(ngModel)]=\"queryKeywords\" (ngModelChange)=\"queryKeywordsChange()\"\r\n                   style=';width:150px;'>\r\n          <nz-option nzValue=\"1\" nzLabel=\"试卷ID\"></nz-option>\r\n          <nz-option nzValue=\"2\" nzLabel=\"试卷名称\"></nz-option>\r\n        </nz-select>\r\n        <input nz-input placeholder=\"名称搜索\" [(ngModel)]=\"testPaperName\" (keyup.enter)='getCallList(\"exam\")'\r\n               *ngIf=\"NumberS(queryKeywords)===2\"/>\r\n        <input nz-input placeholder=\"ID搜索\" [(ngModel)]=\"testPaperId\" (keyup.enter)='getCallList(\"exam\")'\r\n               *ngIf=\"NumberS(queryKeywords)===1\" type=\"number\" min=\"0\"/>\r\n      </div>\r\n      <div class='header-item w31'>\r\n        <label style='min-width:90px;line-height:32px'>组卷方式: </label>\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择组卷方式\" [(ngModel)]=\"selectedValue\"\r\n                   style='margin-right: 20px;width:calc(100% - 100px);flex:1'>\r\n          <nz-option nzValue=\"1\" nzLabel=\"选题组卷/录题组卷\"></nz-option>\r\n          <nz-option nzValue=\"2\" nzLabel=\"题型难度随机组卷\"></nz-option>\r\n          <nz-option nzValue=\"3\" nzLabel=\"知识点难度抽题组卷\"></nz-option>\r\n        </nz-select>\r\n      </div>\r\n      <div class='header-item mr0 w31'>\r\n        <label style='min-width:90px;line-height:32px'>子题库: </label>\r\n        <nz-spin [nzSpinning]=\"searchLoad\" [nzDelay]=\"0\">\r\n          <nz-tree-select\r\n            style=\"width: 178px\"\r\n            [nzNodes]=\"examSearch\"\r\n            nzDefaultExpandAll\r\n            nzShowSearch\r\n            nzMultiple\r\n            nzCheckable\r\n            [(ngModel)]=\"examSubQuestionBankExam\"\r\n            (ngModelChange)='subQuestionBankChangeSearch($event,\"examSearch\")'\r\n            [nzDropdownStyle]=\"{'max-height': '400px'}\"\r\n            [nzTreeTemplate]=\"nzTreeTemplateSearchExam\"\r\n          >\r\n          </nz-tree-select>\r\n        </nz-spin>\r\n        <ng-template #nzTreeTemplateSearchExam let-node let-origin=\"origin\">\r\n            <span class=\"custom-node\">\r\n              <span *ngIf=\"!node.isLeaf\">\r\n                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>\r\n                <span class=\"folder-name\">{{ node.title }}</span>\r\n              </span>\r\n              <span *ngIf=\"node.isLeaf\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span class=\"file-name\">{{ node.title }}</span>\r\n              </span>\r\n            </span>\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n    <button nz-button nzType=\"primary\" style='margin-left:20px;vertical-align: top;' (click)=\"getCallList('exam')\">查询\r\n    </button>\r\n  </div>\r\n  <nz-spin [nzSpinning]=\"isCallLoading\" [nzDelay]=\"0\">\r\n    <nz-table #basicTable [nzData]=\"listOfData\" [nzScroll]='{ y: \"350px\" }' [nzFrontPagination]='false'\r\n              class='evaluation-table'>\r\n      <thead>\r\n      <tr>\r\n        <th nzWidth='100px'>试卷ID</th>\r\n        <th nzWidth='150px'>试卷名称</th>\r\n        <th nzWidth='100px'>试卷年份</th>\r\n        <th nzWidth='100px'>组卷方式</th>\r\n        <th nzWidth='100px'>试卷分类</th>\r\n        <th nzWidth='80px'>题量</th>\r\n        <th nzWidth='80px'>分数</th>\r\n        <th nzWidth='120px'>操作</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let data of basicTable.data\">\r\n        <td>{{ data.id }}</td>\r\n        <td>{{ data.name }}</td>\r\n        <td>{{ data.year }}</td>\r\n        <td>{{ getFormingMethod(data.groupWay) }}</td>\r\n        <td>{{ getType(data.type) }}</td>\r\n        <td>{{ data.number }}</td>\r\n        <td>{{ data.score }}</td>\r\n        <td>\r\n          <a (click)='transfer(data,false)' *ngIf='showTransfer(data,false)'>调用</a>\r\n          <a (click)='cancelCall(data,\"exam\")' *ngIf='showTransfer(data,true)'>取消调用</a>\r\n          <nz-divider nzType=\"vertical\"></nz-divider>\r\n          <a (click)='previewExaminationPaper(data)'>预览</a>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </nz-table>\r\n  </nz-spin>\r\n</nz-modal>\r\n<!--作业调用-->\r\n<nz-modal [(nzVisible)]=\"exerciseListPreview\" (nzOnCancel)=\"exerciseListPreview=false;homeworkSubQuestionBank=[]\"\r\n          nzTitle='选择作业'\r\n          nzWidth='1000' [nzFooter]='null' [nzBodyStyle]='{maxHeight:\"550px\"}'>\r\n  <nz-spin [nzSpinning]=\"isCallLoading\" [nzDelay]=\"0\">\r\n    <div class='header'>\r\n      <div class='header-container'>\r\n        <div class='header-item'>\r\n          <nz-select nzPlaceHolder=\"请选择查询关键字\" [(ngModel)]=\"queryKeywordsJob\" (ngModelChange)=\"queryKeywordsJobChange()\"\r\n                     style=';width:150px;'>\r\n            <nz-option nzValue=\"1\" nzLabel=\"作业ID\"></nz-option>\r\n            <nz-option nzValue=\"2\" nzLabel=\"作业名称\"></nz-option>\r\n          </nz-select>\r\n          <input nz-input placeholder=\"名称搜索\" [(ngModel)]=\"testExerciseName\" (keyup.enter)='getCallList(\"exercise\")'\r\n                 *ngIf=\"NumberS(queryKeywordsJob)===2\"/>\r\n          <input nz-input placeholder=\"ID搜索\" [(ngModel)]=\"testExerciseId\" (keyup.enter)='getCallList(\"exercise\")'\r\n                 type=\"number\" min=\"0\"\r\n                 *ngIf=\"NumberS(queryKeywordsJob)===1\"/>\r\n        </div>\r\n        <div class='header-item'>\r\n          <label style='min-width:90px;line-height:32px'>子题库: </label>\r\n          <nz-spin [nzSpinning]=\"searchLoad\" [nzDelay]=\"0\">\r\n            <nz-tree-select\r\n              style=\"width: 250px\"\r\n              [nzNodes]=\"exerciseSearch\"\r\n              nzDefaultExpandAll\r\n              nzShowSearch\r\n              nzMultiple\r\n              nzCheckable\r\n              [(ngModel)]=\"homeworkSubQuestionBank\"\r\n              (ngModelChange)='subQuestionBankChangeSearch($event,\"exerciseSearch\")'\r\n              [nzDropdownStyle]=\"{'max-height': '400px'}\"\r\n              [nzTreeTemplate]=\"nzTreeTemplateSearchPractice\"\r\n            >\r\n            </nz-tree-select>\r\n          </nz-spin>\r\n          <ng-template #nzTreeTemplateSearchPractice let-node let-origin=\"origin\">\r\n            <span class=\"custom-node\">\r\n              <span *ngIf=\"!node.isLeaf\">\r\n                <i nz-icon [nzType]=\"node.isExpanded ? 'folder-open' : 'folder'\"></i>\r\n                <span class=\"folder-name\">{{ node.title }}</span>\r\n              </span>\r\n              <span *ngIf=\"node.isLeaf\">\r\n                <i nz-icon nzType=\"file\"></i>\r\n                <span class=\"file-name\">{{ node.title }}</span>\r\n              </span>\r\n            </span>\r\n          </ng-template>\r\n        </div>\r\n        <button nz-button nzType=\"primary\" style=\"margin-left:20px;\" (click)=\"getCallList('exercise')\">查询</button>\r\n      </div>\r\n    </div>\r\n    <nz-table #basicTableExercise [nzData]=\"listOfDataExercise\" [nzScroll]='{ y: \"350px\" }' class='evaluation-table'\r\n              [nzFrontPagination]='false'>\r\n      <thead>\r\n      <tr>\r\n        <th nzWidth='100px'>作业ID</th>\r\n        <th nzWidth='150px'>作业名称</th>\r\n        <th nzWidth='80px'>题量</th>\r\n        <th nzWidth='80px'>分数</th>\r\n        <th nzWidth='120px'>操作</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let data of basicTableExercise.data\">\r\n        <td>{{ data.id }}</td>\r\n        <td>{{ data.name }}</td>\r\n        <td>{{ data.number }}</td>\r\n        <td>{{ data.score }}</td>\r\n        <td>\r\n          <a (click)='transfer(data,true)' *ngIf='showTransfer(data,false)'>调用</a>\r\n          <a (click)='cancelCall(data,\"exercise\")' *ngIf='showTransfer(data,true)'>取消调用</a>\r\n          <nz-divider nzType=\"vertical\"></nz-divider>\r\n          <a (click)='previewExaminationPaper(data)'>预览</a>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </nz-table>\r\n  </nz-spin>\r\n</nz-modal>\r\n<!--问卷调用-->\r\n<nz-modal [(nzVisible)]=\"questionnairePreview\" (nzOnCancel)=\"closeQuestionnaire('questionnaireType')\" nzTitle='选择问卷'\r\n          nzWidth='1000' [nzFooter]='null' [nzBodyStyle]='{maxHeight:\"550px\"}'>\r\n  <div class='header'>\r\n    <div class='header-container'>\r\n      <div class='header-item'>\r\n        <label style='min-width:90px;line-height:32px'>关键词搜索: </label>\r\n        <input nz-input placeholder=\"支持名称搜索\" [(ngModel)]=\"questionnaireName\"/>\r\n      </div>\r\n      <div class='header-item'>\r\n        <label style='min-width:90px;line-height:32px'>问卷类型: </label>\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择问卷类型\" [(ngModel)]=\"questionnaireType\">\r\n          <nz-option nzLabel=\"总部测评\" nzValue=\"1\"></nz-option>\r\n          <nz-option nzLabel=\"校区测评\" nzValue=\"2\"></nz-option>\r\n        </nz-select>\r\n      </div>\r\n\r\n      <button nz-button nzType=\"primary\" (click)=\"questionnaireCall('questionnaireType')\">查询</button>\r\n      <button nz-button nzType=\"primary\" (click)=\"newQuestionnaire('questionnaireType')\" style='margin-left: 50px'>\r\n        新增问卷\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <nz-spin [nzSpinning]=\"isCallLoading\" [nzDelay]=\"0\">\r\n    <nz-table #questionnaireTable [nzData]=\"listOfQuestionnaireData\" class='evaluation-table'\r\n              [nzScroll]='{ y: \"350px\" }'\r\n              [nzFrontPagination]='false'>\r\n      <thead>\r\n      <tr>\r\n        <th nzWidth='100px'>问卷ID</th>\r\n        <th nzWidth='150px'>问卷名称</th>\r\n        <th nzWidth='100px'>问卷类型</th>\r\n        <th nzWidth='100px'>问卷学科</th>\r\n        <th nzWidth='100px'>题量</th>\r\n        <th nzWidth='80px'>问卷状态</th>\r\n        <th nzWidth='120px'>操作</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let data of questionnaireTable.data\">\r\n        <td>{{ data.paperId }}</td>\r\n        <td>{{ data.name }}</td>\r\n        <td>{{ getQuestionnaireType(data.evaluateId) }}</td>\r\n        <td>{{ data.majorName }}</td>\r\n        <td>{{ data.questionNumber }}</td>\r\n        <td>{{ getEvaluationStatus(data.status) }}</td>\r\n        <td>\r\n          <a (click)='transferQuestionnaire(data,\"questionnaireType\")' *ngIf='showTransfer(data,false)'>调用</a>\r\n          <a (click)='cancelCall(data,\"questionnaireType\")' *ngIf='showTransfer(data,true)'>取消调用</a>\r\n          <nz-divider nzType=\"vertical\"></nz-divider>\r\n          <a (click)='previewExaminationQuestionnaire(data)'>预览</a>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </nz-table>\r\n  </nz-spin>\r\n</nz-modal>\r\n<!--测评调用-->\r\n<nz-modal [(nzVisible)]=\"evaluationPreview\" nzTitle='选择测评'\r\n          nzWidth='1000' [nzFooter]='null' (nzOnCancel)=\"closeQuestionnaire('evaluationType')\"\r\n          [nzBodyStyle]='{maxHeight:\"550px\"}'>\r\n  <div class='header'>\r\n    <div class='header-container'>\r\n      <div class='header-item'>\r\n        <label style='min-width:90px;line-height:32px'>关键词搜索: </label>\r\n        <input nz-input placeholder=\"支持名称搜索\" [(ngModel)]=\"evaluationName\"/>\r\n      </div>\r\n      <div class='header-item'>\r\n        <label style='min-width:90px;line-height:32px'>测评类型: </label>\r\n        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择测评类型\" [(ngModel)]=\"evaluationType\">\r\n          <nz-option nzLabel=\"招生测评\" nzValue=\"1\"></nz-option>\r\n          <nz-option nzLabel=\"入学测评\" nzValue=\"2\"></nz-option>\r\n        </nz-select>\r\n      </div>\r\n      <button nz-button nzType=\"primary\" (click)=\"questionnaireCall('evaluationType')\">查询</button>\r\n      <button nz-button nzType=\"primary\" (click)=\"newQuestionnaire('evaluationType')\" style='margin-left: 50px'>新增测评\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <nz-spin [nzSpinning]=\"isCallLoading\" [nzDelay]=\"0\">\r\n    <nz-table #evaluationTable [nzData]=\"listOfEvaluationData\" [nzScroll]='{ y: \"350px\" }' class='evaluation-table'\r\n              [nzFrontPagination]='false'>\r\n      <thead>\r\n      <tr>\r\n        <th nzWidth='100px'>测评ID</th>\r\n        <th nzWidth='150px'>测评名称</th>\r\n        <th nzWidth='100px'>测评类型</th>\r\n        <th nzWidth='100px'>测评学科</th>\r\n        <th nzWidth='100px'>题量</th>\r\n        <th nzWidth='80px'>测评状态</th>\r\n        <th nzWidth='120px'>操作</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let data of evaluationTable.data\">\r\n        <td>{{ data.paperId }}</td>\r\n        <td>{{ data.name }}</td>\r\n        <td>{{ getEvaluationType(data.evaluateId) }}</td>\r\n        <td>{{ data.majorName }}</td>\r\n        <td>{{ data.questionNumber }}</td>\r\n        <td>{{ getEvaluationStatus(data.status) }}</td>\r\n        <td>\r\n          <a (click)='transferQuestionnaire(data,\"evaluationType\")' *ngIf='showTransfer(data,false)'>调用</a>\r\n          <a (click)='cancelCall(data,\"evaluationType\")' *ngIf='showTransfer(data,true)'>取消调用</a>\r\n          <nz-divider nzType=\"vertical\"></nz-divider>\r\n          <a (click)='previewExaminationQuestionnaire(data)'>预览</a>\r\n        </td>\r\n      </tr>\r\n      </tbody>\r\n    </nz-table>\r\n  </nz-spin>\r\n</nz-modal>\r\n<!--考试设置-->\r\n<nz-modal [(nzVisible)]=\"isVisible\" [nzMaskClosable]=\"false\" nzTitle=\"考试设置\" (nzOnCancel)=\"isVisible=false\">\r\n  <nz-spin [nzSpinning]=\"examSettingLoading\" [nzDelay]=\"0\">\r\n    <form nz-form [formGroup]=\"examSettingForm\">\r\n      <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\" nzRequired>考试时长</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"考试设置不能为空\">\r\n          <nz-input-number [nzMin]=\"1\" [nzStep]=\"1\"\r\n                           formControlName=\"examLength\" style='margin-right:10px'></nz-input-number>\r\n          分钟\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\" nzRequired>及格分数</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"及格分数不能为空\">\r\n          <nz-input-number [nzMin]=\"1\" [nzStep]=\"1\"\r\n                           formControlName=\"passScore\" style='margin-right:10px'></nz-input-number>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\" nzRequired>试卷类型</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"试卷类型不能为空\">\r\n          <nz-select formControlName=\"paperType\" (ngModelChange)=\"paperTypeChange($event)\">\r\n            <nz-option nzValue=\"1\" nzLabel=\"阶段考试\"></nz-option>\r\n            <nz-option nzValue=\"2\" nzLabel=\"单科考试\"></nz-option>\r\n            <nz-option nzValue=\"3\" nzLabel=\"模拟考试\"></nz-option>\r\n            <nz-option nzValue=\"4\" nzLabel=\"密押考试\"></nz-option>\r\n            <!--          <nz-option nzValue=\"5\" nzLabel=\"机考考试\"></nz-option>-->\r\n            <nz-option nzValue=\"6\" nzLabel=\"实操考试\"></nz-option>\r\n          </nz-select>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item *ngIf='examSettingForm.value.paperType===\"5\"'>\r\n        <nz-form-label [nzSpan]=\"5\" nzRequired>机考类型</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"机考类型不能为空\">\r\n          <nz-select formControlName=\"computerType\">\r\n            <nz-option nzValue=\"1\" nzLabel=\"初级\"></nz-option>\r\n            <nz-option nzValue=\"2\" nzLabel=\"中级\"></nz-option>\r\n            <nz-option nzValue=\"3\" nzLabel=\"税务师\"></nz-option>\r\n          </nz-select>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\" nzRequired>是否重考</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"是否重考不能为空\">\r\n          <nz-radio-group formControlName='isRedo'>\r\n            <label nz-radio nzValue=\"1\" nzDisabled>是</label>\r\n            <label nz-radio nzValue=\"0\" nzDisabled>否</label>\r\n          </nz-radio-group>\r\n          <div *ngIf='examSettingForm.value.paperType===\"6\"&&(examType===\"3\"||examType===\"2\")'\r\n               style='position:absolute;'>\r\n            补考按结课28天后遇到的10号开放权限，直到合格为止\r\n          </div>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <!--    <nz-form-item>-->\r\n      <!--      <nz-form-label [nzSpan]=\"5\" nzRequired>是否机考</nz-form-label>-->\r\n      <!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"是否机考不能为空\">-->\r\n      <!--        <nz-radio-group formControlName='isComputer'>-->\r\n      <!--          <label nz-radio nzValue=\"1\">是</label>-->\r\n      <!--          <label nz-radio nzValue=\"0\">否</label>-->\r\n      <!--        </nz-radio-group>-->\r\n      <!--      </nz-form-control>-->\r\n      <!--    </nz-form-item>-->\r\n\r\n      <!--    <nz-form-item>-->\r\n      <!--      <nz-form-label [nzSpan]=\"5\" nzRequired>有效时间</nz-form-label>-->\r\n      <!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"有效时间不能为空\">-->\r\n      <!--        <nz-date-picker formControlName=\"deadTime\"></nz-date-picker>-->\r\n      <!--      </nz-form-control>-->\r\n      <!--    </nz-form-item>-->\r\n      <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\" nzRequired>答题次数</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"答题次数不能为空\">\r\n          <nz-radio-group formControlName='answerTimes' [(ngModel)]='examSettingForm.value.answerTimes'\r\n                          (ngModelChange)='clearStatus(\"examSettingForm\")' [nzDisabled]='exerciseType ===\"2\" ?true:null'>\r\n            <label nz-radio [nzValue]=\"0\" >无限制</label>\r\n            <label nz-radio [nzValue]=\"1\" >\r\n              <nz-input-number [(ngModel)]=\"value\" [nzMin]=\"1\" [nzMax]=\"100\" [nzStep]=\"1\"\r\n                               [ngModelOptions]=\"{standalone: true}\" [disabled]='exerciseType ===\"2\" ?true:null'></nz-input-number>\r\n            </label>\r\n          </nz-radio-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-label [nzSpan]=\"5\" nzRequired>出成绩</nz-form-label>\r\n        <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"是否出成绩不能为空\">\r\n          <nz-radio-group formControlName='resultWay'>\r\n            <label nz-radio nzValue=\"1\">交卷即出</label>\r\n          </nz-radio-group>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </form>\r\n  </nz-spin>\r\n  <div *nzModalFooter>\r\n    <button nz-button (click)=\"isVisible = false\">取消</button>\r\n    <button nz-button nzType=\"primary\" (click)=\"saveExamination()\" [nzLoading]='examSettingLoading'>确定</button>\r\n  </div>\r\n</nz-modal>\r\n<!--问卷设置-->\r\n<nz-modal [(nzVisible)]=\"isQuestionnaireVisible\" [nzMaskClosable]=\"false\" nzTitle=\"权限设置\"\r\n          (nzOnCancel)=\"isQuestionnaireVisible=false\">\r\n  <form nz-form [formGroup]=\"questionnairSettingForm\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>答题次数</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"答题次数不能为空\">\r\n        <nz-radio-group formControlName='answerTimes' [(ngModel)]='questionnairSettingForm.value.answerTimes'\r\n                        (ngModelChange)='clearStatus(\"questionnairSettingForm\")'>\r\n          <label nz-radio [nzValue]=\"0\">无限制</label>\r\n          <label nz-radio [nzValue]=\"1\">\r\n            <nz-input-number [(ngModel)]=\"answerTimesValue\" [nzMin]=\"1\" [nzMax]=\"100\" [nzStep]=\"1\"\r\n                             [ngModelOptions]=\"{standalone: true}\"></nz-input-number>\r\n          </label>\r\n        </nz-radio-group>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n  <div *nzModalFooter>\r\n    <button nz-button (click)=\"isQuestionnaireVisible = false\">取消</button>\r\n    <button nz-button nzType=\"primary\" (click)=\"saveQuestionnaire()\">确定</button>\r\n  </div>\r\n</nz-modal>\r\n<!--讲义关联-->\r\n<nz-modal [(nzVisible)]=\"visibleAssociate\" [nzMaskClosable]=\"false\" nzTitle=\"讲义资源关联\"\r\n          (nzOnCancel)=\"completebind()\" [nzFooter]='null' [nzBodyStyle]='{maxHeight:\"500px\",overflowY:\"auto\"}'>\r\n  <nz-spin [nzSpinning]=\"bindLoading\"\r\n           [nzDelay]=\"0\">\r\n    <div class='associate'>\r\n    <span style='float: left'>\r\n      主讲义（共{{this.totalPage}}页）\r\n    </span>\r\n      <span style='float: right;cursor: pointer' (click)='previewHandout(currentAssocate)'>\r\n      <i nz-icon nzType=\"eye\" nzTheme=\"outline\"></i>\r\n      预览\r\n    </span>\r\n    </div>\r\n    <div class='association-table' *ngFor='let itemArr of assocateClassLists;let i=index'>\r\n      <div style='margin-bottom: 10px;'>\r\n        {{'第' + itemArr[0].sectionSeq + '节  ' + itemArr[0].sectionName}}\r\n        <i nz-icon nzType=\"caret-right\" nzTheme=\"outline\" (click)='itemArr.expend=false' *ngIf='itemArr.expend'\r\n           style='cursor: pointer'></i>\r\n        <i nz-icon nzType=\"caret-down\" nzTheme=\"outline\" (click)='itemArr.expend=true' *ngIf='!itemArr.expend'\r\n           style='cursor: pointer'></i>\r\n      </div>\r\n      <div *ngFor='let item of itemArr;let j=index' [ngClass]='{\"h0\":itemArr.expend,\"association-list\":true}'>\r\n        <div class='list-item'>\r\n         <span class=\"associate-title\" [title]=\"item.name\">\r\n                     <nz-avatar style=\"vertical-align: middle;\" [nzShape]=\"'circle'\" [nzSize]=\"20\"\r\n                                [ngStyle]=\"{ 'background-color': getColor(item.taskType),marginTop:'-5px' }\"\r\n                                [nzText]=\"getText(item.taskType)\"></nz-avatar>\r\n           {{item.name}}\r\n         </span>\r\n          <nz-input-number [(ngModel)]=\"item.pageNum\" [nzMin]=\"1\" [nzMax]=\"1000000\" [nzStep]=\"1\" nzPlaceHolder='请输入页码'\r\n                           style='width:120px;float:right' (ngModelChange)='modelChangeDetect($event)'\r\n                           (nzFocus)='current = undefined' (nzBlur)='current = undefined'></nz-input-number>\r\n          <span style='min-width: 70px;float:right'>\r\n            <label\r\n              nz-checkbox\r\n              [nzDisabled]='(currentBindLength>=bingLimit&&(!assocateLists[i].pageNum))||(!item.pageNum)'\r\n              [(ngModel)]=\"item.isBindAssoicate\"\r\n              (ngModelChange)=\"isBindChange($event, item)\">\r\n             </label>\r\n             <button nz-button nzType=\"dashed\"\r\n                     (click)=\"getBlur(item)\"\r\n                     style='margin:0 10px'\r\n                     [disabled]='(currentBindLength>=bingLimit&&(!assocateLists[i].pageNum))||(!item.pageNum)||(assocateLists[i].pageNum===item.pageNum)'>{{'绑定'}}</button>\r\n         </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div *nzModalFooter>\r\n      <!--    <button nz-button (click)=\"visibleAssociate = false\">取消</button>-->\r\n      <button nz-button nzType=\"primary\" (click)=\"completebind()\">关闭</button>\r\n    </div>\r\n  </nz-spin>\r\n</nz-modal>\r\n<!--资源预览-->\r\n<app-resource-preview-modal [isPreviewpolyway]='isPreviewpolyway' [previewTitle]='previewTitle'\r\n                            [resourceUrl]='resourceUrl' *ngIf='previewStart'\r\n                            (closePreview)='closePreview()'></app-resource-preview-modal>\r\n","import {Component, Inject, OnInit, TemplateRef, ViewChild, ViewChildren} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NzModalRef, NzModalService} from 'ng-zorro-antd/modal';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {MenuService} from 'core/services/menu.service';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {UploadHandoutComponent} from '../upload-handout/upload-handout.component';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {CourseStructureTreeComponent, NodeChangeEvent} from '../course-structure-tree/course-structure-tree.component';\r\nimport {AliOssService} from 'core/services/ali-oss.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {KnowledgeManageService} from 'src/app/busi-services/knowledge-manag.service';\r\nimport {queryParam, ToolsUtil} from 'core/utils/tools.util';\r\nimport {environment} from 'src/environments/environment';\r\nimport {forkJoin, Observable, Subscriber, Subscription, timer} from 'rxjs';\r\nimport {CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\r\nimport {LocalStorageUtil} from 'core/utils/localstorage.util';\r\nimport {hex_sha1} from 'core/utils/sha1';\r\nimport {NzSafeAny, NzSelectComponent, NzTreeNode} from 'ng-zorro-antd';\r\nimport {TrainManageService} from '@app/busi-services/train-manage.service';\r\nimport {SafeResourceUrl} from '@angular/platform-browser';\r\nimport {spaceValidator} from '@app/shared/validators/atr-validtors';\r\nimport {VideoImportComponent} from './video-import/video-import.component';\r\nimport {CallItem, HandoutItem, HttpResponseDataStandard, Json, Teacher, WjCallItem} from 'core/base/common';\r\nimport {NzTreeNodeOptions} from 'ng-zorro-antd/core/tree';\r\nimport {StatisticsLogService} from '@app/busi-services/statistics-log.service';\r\nimport {STATISTICALRULES} from 'core/base/static-data';\r\nimport {DOCUMENT} from '@angular/common';\r\n\r\ndeclare const WebOfficeSDK;\r\n\r\n@Component({\r\n  selector: 'app-chapter-handout',\r\n  templateUrl: './chapter-handout.component.html',\r\n  styleUrls: ['./chapter-handout.component.less'],\r\n})\r\nexport class ChapterHandoutComponent implements OnInit {\r\n  //#region state\r\n  _PAGE_ID_ = 'MaterialCallResource';\r\n  active1 = true; // 默认全部展开即可\r\n  active2 = true;\r\n  active3 = true;\r\n  active4 = true;\r\n  listLoading = false;\r\n  hanoutLoading = false;\r\n  isStandard = false;\r\n  totalPage = 0;\r\n  handouts: HandoutItem[] = [];\r\n  taskList: Json[] = [];\r\n  curNode: NodeChangeEvent;\r\n  handoutsMaterial: HandoutItem[] = []; // 资料\r\n  handoutsLecture: HandoutItem[] = []; // 讲义\r\n  handoutsRecording: HandoutItem[] = []; // 录播\r\n  teacherList: Teacher[] = [];\r\n  modalFormRef: NzModalRef;\r\n  exam: Array<NzTreeNode | NzTreeNodeOptions> = []; // 试卷子题库数据\r\n  exercise: Array<NzTreeNode | NzTreeNodeOptions> = []; // 作业子题库数据\r\n  examSearch: Array<NzTreeNode | NzTreeNodeOptions> = []; // 试卷子题库数据搜索\r\n  exerciseSearch: Array<NzTreeNode | NzTreeNodeOptions> = []; // 作业子题库数据搜索\r\n  searchLoad = false;\r\n  examListPreview = false; // 试卷调用\r\n  exerciseListPreview = false; // 作业调用\r\n  listOfData: CallItem[] = [];  // 试卷调用列表\r\n  listOfDataExercise: CallItem[] = [];  // 作业调用列表\r\n  listOfQuestionnaireData: WjCallItem[] = [];\r\n  listOfEvaluationData: WjCallItem[] = [];\r\n  selectedValue = ''; //  试卷调用组卷方式\r\n  examSubQuestionBankExam = []; //  试卷调用子题库\r\n  examSubQuestionBankExamBak = []; //  试卷调用子题库\r\n  homeworkSubQuestionBank = []; //  作业调用子题库\r\n  homeworkSubQuestionBankBak = []; //  作业调用子题库\r\n  testPaperName = ''; // 试卷调用作业名\r\n  testPaperId = ''; // 试卷调用作业ID\r\n  testExerciseName = ''; // 作业调用试卷名\r\n  testExerciseId = ''; // 作业调用试卷ID\r\n  polywayId: string;\r\n  NumberS = Number;\r\n  isPreviewpolyway = false;\r\n  orgCode = ToolsUtil.getOrgCode();\r\n  value = 1; // 考试设置答题次数\r\n  answerTimesValue = 1; // 问卷设置答题次数\r\n  isVisible = false; // 考试设置\r\n  isQuestionnaireVisible = false; // 问卷设置\r\n  examSettingForm: FormGroup; // 考试设置\r\n  questionnairSettingForm: FormGroup; // 问卷设置\r\n  addJobFromSeting: FormGroup; // 新增作业\r\n  addExamFrom: FormGroup; // 新增考试\r\n  polyway: FormGroup; //  保利威id上传\r\n  localVideo: FormGroup; // 保利威本地上传\r\n  visibleAssociate = false;\r\n  currentAssocate: HandoutItem;\r\n  assocateList = [];\r\n  current: number; // 实时记录页码\r\n  tokenObj = LocalStorageUtil.getTkToken();\r\n  currentExam: Json = {\r\n    id: ''\r\n  }; // 考试设置当前任务数据\r\n  currentQuestionnair: any = {\r\n    id: ''\r\n  }; // 问卷设置当前任务数据\r\n  currentBindLength = 0;\r\n  courseId = '';\r\n  preview = '0';\r\n  exerciseType = '1';\r\n  coursePacketId = '';\r\n  professionId = '';\r\n  title: string;\r\n  status: '0' | '1';\r\n  auditStatus: '0' | '1' | '2' | '3' | '99';\r\n  lessonCount = 1;\r\n  isSmart: '0' | '1' = '0';\r\n  code: string;\r\n  teachType: '11' | '12' | '21' | '22';\r\n  assocateLists = [];\r\n  assocateClassLists = [];\r\n  defaultSection: Json;\r\n  defaultExpandedKeys = [];\r\n  examType = '1';\r\n  reset = true;\r\n  resourceUrl: SafeResourceUrl = '';\r\n  questionnairePreview = false;\r\n  evaluationPreview = false;\r\n  questionnaireType: string;  // 问卷\r\n  questionnaireName: string;\r\n  evaluationType: string;  // 测评\r\n  evaluationName: string;\r\n  isCallLoading = false; // 作业/考试调用中\r\n  loading = false; // 本地上传\r\n  examSettingLoading = false; // 考试设置\r\n  bindLoading = false; // 绑定任务\r\n  instructorLoading = false; // 指导讲师\r\n  trainLoading = false; // 实训预览\r\n  queryKeywords = '1';\r\n  queryKeywordsJob = '1';\r\n  previewTitle = '';\r\n  previewStart = false;\r\n  limitTask = 1000000;\r\n  bingLimit = 1000000;\r\n  wps;\r\n  wpsApplication;\r\n  stack;\r\n  associateing = {};\r\n  private modalRef: NzModalRef<null>; // 作业修改弹框\r\n  private curJobData: HandoutItem = {}; // 当前作业数据\r\n  private curExamData: HandoutItem = {}; // 当前考试数据\r\n  @ViewChild('polywaymodal') polywayModal: TemplateRef<null>;\r\n  @ViewChild('localvideomodal') localVideoModal: TemplateRef<null>;\r\n  @ViewChild('addExam') addExam: TemplateRef<null>;\r\n  @ViewChild('addExamExit') addExamExit: TemplateRef<null>;\r\n  @ViewChild('jobSettings') jobSettings: TemplateRef<null>;\r\n  @ViewChild('jobSettingsEdit') jobSettingsEdit: TemplateRef<null>;\r\n  @ViewChild('questionnaire') questionnaire: TemplateRef<null>;\r\n  @ViewChildren(NzSelectComponent) nzSelects: NzSelectComponent;\r\n  @ViewChild('tree') tree: CourseStructureTreeComponent;\r\n\r\n  //#endregion\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private menuService: MenuService,\r\n    private nzMesService: NzMessageService,\r\n    private nzModalService: NzModalService,\r\n    private aliOssService: AliOssService,\r\n    private modalService: NzModalService,\r\n    private knowledgeManageService: KnowledgeManageService,\r\n    private trainManageService: TrainManageService,\r\n    private courseMgService: CourseManageService,\r\n    private statisticsLogService: StatisticsLogService,\r\n    @Inject(DOCUMENT) private doc: Document\r\n  ) {\r\n    // 处理章节点击回显\r\n    const currentSession = SessionStorageUtil.getSelection();\r\n    if (currentSession) {\r\n      this.defaultSection = JSON.parse(currentSession);\r\n    }\r\n    const currentChapter = SessionStorageUtil.getChapter();\r\n    if (currentChapter) {\r\n      this.defaultExpandedKeys = [currentChapter];\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initParams();\r\n    this.initFrom();\r\n  }\r\n\r\n  /**\r\n   * 考试设置回显\r\n   * @param item HandoutItem\r\n   */\r\n  examSetting(item: HandoutItem) {\r\n    if (item.taskType === '4') {\r\n      this.currentExam = item;\r\n      this.getExamination();\r\n    } else {\r\n      this.questionnaireSetting(item);\r\n    }\r\n  }\r\n\r\n  getExamType(type) {\r\n    switch (String(type)) {\r\n      case '1' :\r\n        return '【阶段考试】';\r\n      case '2' :\r\n        return '【单科考试】';\r\n      case '3' :\r\n        return '【模拟考试】';\r\n      case '4' :\r\n        return '【密押考试】';\r\n      case '5' :\r\n        return '【机考考试】';\r\n      case '6' :\r\n        return '【实操考试】';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 问卷设置回显\r\n   * @param item 问卷Item\r\n   */\r\n  questionnaireSetting(item: HandoutItem) {\r\n    this.currentQuestionnair = item;\r\n    this.courseMgService.getExamination(item.id).subscribe(res => {\r\n      if (res.status === 200) {\r\n        const data = JSON.parse(JSON.stringify(res.data || {}));\r\n        if (data.answerTimes && Number(data.answerTimes) !== 0) {\r\n          this.answerTimesValue = data.answerTimes;\r\n          this.questionnairSettingForm.patchValue({\r\n            answerTimes: 1\r\n          });\r\n        } else {\r\n          this.questionnairSettingForm.patchValue({\r\n            answerTimes: 0\r\n          });\r\n          this.answerTimesValue = undefined;\r\n        }\r\n        // tslint:disable-next-line:forin\r\n        for (const i in this.questionnairSettingForm.controls) {\r\n          this.questionnairSettingForm.controls[i].markAsUntouched();\r\n          this.questionnairSettingForm.controls[i].markAsPristine();\r\n          this.questionnairSettingForm.controls[i].updateValueAndValidity();\r\n        }\r\n        this.isQuestionnaireVisible = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 考试设置保存\r\n   */\r\n  saveQuestionnaire() {\r\n    const {answerTimes} = this.questionnairSettingForm.value;\r\n    if (answerTimes === 1 && !(this.answerTimesValue)) {\r\n      this.nzMesService.warning('请输入你想要的答题次数');\r\n      return;\r\n    }\r\n    const params = {\r\n      answerTimes: Object.is(answerTimes, 1) ? String(this.answerTimesValue) : '0',\r\n      id: this.currentQuestionnair.id\r\n    };\r\n    this.courseMgService.examSetting(params).subscribe(res => {\r\n      if (res.status === 201) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: (this.currentQuestionnair.taskType === '6' ? '问卷' : '测评') + '任务权限设置更改',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n          content: JSON.stringify(params),\r\n        });\r\n        this.isQuestionnaireVisible = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 考试设置保存\r\n   */\r\n  saveExamination() {\r\n    if (this.examSettingForm.value.answerTimes === 1 && !(this.value)) {\r\n      this.nzMesService.warning('请输入你想要的答题次数');\r\n      return;\r\n    }\r\n    Object.keys(this.examSettingForm.controls).forEach(key => {\r\n      this.examSettingForm.controls[key].markAsDirty();\r\n      this.examSettingForm.controls[key].updateValueAndValidity();\r\n    });\r\n    if (this.examSettingForm.invalid) {\r\n      return;\r\n    }\r\n    this.examSettingLoading = true;\r\n    const params = JSON.parse(JSON.stringify(this.examSettingForm.value));\r\n    if (Object.is(params.answerTimes, 1)) {\r\n      params.answerTimes = String(this.value);\r\n    }\r\n    params.id = this.currentExam.id;\r\n    this.courseMgService.examSetting(params).subscribe(res => {\r\n      this.examSettingLoading = false;\r\n      if (res.status === 201) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '考试任务考试设置更改',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n          content: JSON.stringify(params),\r\n        });\r\n        this.isVisible = false;\r\n        this.getTaskList();\r\n      }\r\n    }, () => {\r\n      this.examSettingLoading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 子题库树节点数据转换\r\n   * @param data 一个节点\r\n   * @param label 类型\r\n   */\r\n  conversionNode(data, label: 'exam' | 'exercise' | 'examSearch' | 'exerciseSearch') {\r\n    if (data.length) {\r\n      data.forEach((item, ii) => {\r\n        if (item.sublibraryModuleList && item.sublibraryModuleList.length) {\r\n          data[ii].children = item.sublibraryModuleList;\r\n          data[ii].children.forEach((child, iii) => {\r\n            data[ii].children[iii].title = child.name;\r\n            data[ii].children[iii].key = child.id;\r\n            data[ii].children[iii].isLeaf = true;\r\n          });\r\n        }\r\n        data[ii].title = item.name;\r\n        data[ii].key = item.code;\r\n        if (label === 'exam' || label === 'exercise') {\r\n          data[ii].disabled = true;\r\n          data[ii].selectable = false;\r\n        }\r\n        if (!item.sublibraryModuleList || !item.sublibraryModuleList.length) {\r\n          data[ii].isLeaf = true;\r\n        }\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * 章节拖动\r\n   * @param event CdkDragDrop\r\n   * @param type 数据类型\r\n   */\r\n  sectionDrop(event: CdkDragDrop<any[]>, type: '1' | '2' | '3' | '4') {\r\n    const params: any = [];\r\n    const successFn = (res: any) => {\r\n      if (res.status !== 201) {\r\n        this.nzMesService.error(res.message || '移动失败，未知错误！');\r\n        return;\r\n      }\r\n    };\r\n    const failFn = (error: any) => {\r\n      this.nzMesService.error(JSON.stringify(error));\r\n    };\r\n    if (type === '3') { // 任务\r\n      moveItemInArray(this.taskList, event.previousIndex, event.currentIndex);\r\n      this.taskList.forEach((ee, ii) => {\r\n        const obj: any = {};\r\n        obj.id = ee.id;\r\n        obj.seq = this.taskList.length - ii;\r\n        this.taskList[ii].seq = obj.seq;\r\n        params.push(obj);\r\n      });\r\n      this.courseMgService.saveOrUpdateTask(params).subscribe(successFn, failFn);\r\n    } else {\r\n      if (type === '1') { // 讲义\r\n        moveItemInArray(this.handoutsLecture, event.previousIndex, event.currentIndex);\r\n        this.handoutsLecture.forEach((ee, ii) => {\r\n          const obj: any = {};\r\n          obj.id = ee.id;\r\n          obj.seq = this.handoutsLecture.length - ii;\r\n          this.handoutsLecture[ii].seq = obj.seq;\r\n          params.push(obj);\r\n        });\r\n      } else if (type === '2') { // 录播\r\n        moveItemInArray(this.handoutsRecording, event.previousIndex, event.currentIndex);\r\n        this.handoutsRecording.forEach((ee, ii) => {\r\n          const obj: any = {};\r\n          obj.id = ee.id;\r\n          obj.seq = this.handoutsRecording.length - ii;\r\n          this.handoutsRecording[ii].seq = obj.seq;\r\n          params.push(obj);\r\n        });\r\n      } else {  // 资料\r\n        moveItemInArray(this.handoutsMaterial, event.previousIndex, event.currentIndex);\r\n        this.handoutsMaterial.forEach((ee, ii) => {\r\n          const obj: any = {};\r\n          obj.id = ee.id;\r\n          obj.seq = this.handoutsMaterial.length - ii;\r\n          this.handoutsMaterial[ii].seq = obj.seq;\r\n          params.push(obj);\r\n        });\r\n      }\r\n      this.courseMgService.saveOrUpdate(params).subscribe(successFn, failFn);\r\n    }\r\n    console.log(this.handoutsRecording);\r\n  }\r\n\r\n  /**\r\n   * 回显考试设置\r\n   */\r\n  getExamination() {\r\n    this.courseMgService.getExamination(this.currentExam.id).subscribe(res => {\r\n      if (res.status === 200) {\r\n        const data = JSON.parse(JSON.stringify(res.data || {}));\r\n        // if (res.data.deadTime) {\r\n        //   data.deadTime = new Date(res.data.deadTime);\r\n        // }\r\n        this.examType = data.examType;\r\n        const obj = {\r\n          id: data.id,\r\n          examLength: data.examLength || 0,\r\n          passScore: data.passScore || 0,\r\n          paperType: data.paperType || '1',\r\n          isRedo: (data.isRedo && String(data.isRedo)) || '0',\r\n          // isComputer: data.isComputer || '1',\r\n          computerType: data.computerType || '1',\r\n          // deadTime: data.deadTime || new Date(),\r\n          resultWay: data.resultWay || '1',\r\n          configType: data.configType || '1'\r\n        };\r\n        this.examSettingForm.patchValue(obj);\r\n        if (!Object.is(data.answerTimes, 0)) {\r\n          this.value = data.answerTimes;\r\n          this.examSettingForm.patchValue({\r\n            answerTimes: 1\r\n          });\r\n        } else {\r\n          this.value = undefined;\r\n          this.examSettingForm.patchValue({\r\n            answerTimes: 0\r\n          });\r\n        }\r\n        // tslint:disable-next-line:forin\r\n        for (const i in this.examSettingForm.controls) {\r\n          this.examSettingForm.controls[i].markAsUntouched();\r\n          this.examSettingForm.controls[i].markAsPristine();\r\n          this.examSettingForm.controls[i].updateValueAndValidity();\r\n        }\r\n        this.isVisible = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 指导讲师\r\n   */\r\n  private getTeacher(): void {\r\n    this.instructorLoading = true;\r\n    this.knowledgeManageService.getTeacher().subscribe(res => {\r\n      this.instructorLoading = false;\r\n      if (res.status === 200) {\r\n        this.teacherList = res.data;\r\n      }\r\n    }, () => {\r\n      this.instructorLoading = false;\r\n    });\r\n  }\r\n\r\n  private initFrom(): void {\r\n    // 考试设置\r\n    this.examSettingForm = this.fb.group({\r\n      id: [''],\r\n      examLength: [0, Validators.required],\r\n      passScore: [0, Validators.required],\r\n      // isComputer: ['1', Validators.required],\r\n      computerType: ['1'],\r\n      isRedo: ['0'],\r\n      paperType: ['1'],\r\n      answerTimes: [0, Validators.required],\r\n      // deadTime: [new Date(), Validators.required],\r\n      resultWay: ['1', Validators.required],\r\n      configType: ['1', Validators.required]\r\n    });\r\n    this.questionnairSettingForm = this.fb.group({\r\n      answerTimes: [1, Validators.required],\r\n    });\r\n    // 作业任务\r\n    this.addJobFromSeting = this.fb.group({\r\n      id: [this.courseId],\r\n      taskForm: ['2', Validators.required],\r\n      name: ['课后练习', [Validators.required, spaceValidator(), Validators.maxLength(50)]],\r\n      subQuestionBank: ['', [Validators.required]]\r\n    });\r\n    // 考试任务\r\n    this.addExamFrom = this.fb.group({\r\n      missionName: ['', [Validators.required, Validators.maxLength(50), spaceValidator()]],\r\n      formingMethod: [1, [Validators.required]],\r\n      subQuestionBank: ['', [Validators.required]]\r\n    });\r\n    this.polyway = this.fb.group({\r\n      videoUrl: ['', [Validators.required]],\r\n      authorId: ['', [Validators.required]],\r\n      videoType: ['1', [Validators.required]],\r\n      seq: [1, [Validators.required]],\r\n      id: [''],\r\n      attachmentName: ['', [Validators.required, Validators.maxLength(50), spaceValidator()]]\r\n    });\r\n    this.localVideo = this.fb.group({\r\n      videoUrl: [[], [Validators.required]],\r\n      authorId: ['', [Validators.required]],\r\n      videoType: ['1', [Validators.required]],\r\n      seq: [1, [Validators.required]],\r\n      id: [''],\r\n      attachmentName: ['', [Validators.required, Validators.maxLength(50), spaceValidator()]]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 课包信息\r\n   */\r\n  private initParams(): void {\r\n    const {courseId, id, professionId, status, code, teachType, name, auditStatus, lessonCount, isSmart, preview, isUsed, exerciseType}\r\n      = SessionStorageUtil.getPacketInfo();\r\n    this.courseId = courseId;\r\n    this.coursePacketId = id;\r\n    this.professionId = professionId;\r\n    this.isStandard = isUsed > 0;\r\n    this.code = code;\r\n    this.teachType = teachType;\r\n    this.title = name;\r\n    this.status = status;\r\n    this.auditStatus = auditStatus;\r\n    this.lessonCount = Number(lessonCount);\r\n    this.isSmart = isSmart;\r\n    this.preview = preview;\r\n    this.exerciseType = exerciseType;\r\n  }\r\n\r\n  /**\r\n   * 任务列表\r\n   */\r\n  private getTaskList(): void {\r\n    this.listLoading = true;\r\n    const params = {\r\n      courseSectionId: this.curNode.data.id,\r\n    };\r\n    this.knowledgeManageService.getTaskList(params).subscribe(res => {\r\n      this.isCallLoading = false;\r\n      this.listLoading = false;\r\n      if (res.status === 200) {\r\n        if (res.data && res.data.length) {\r\n          this.taskList = res.data;\r\n          this.taskList.forEach((data, i) => {\r\n            this.taskList[i].isDownloadType = data.downloadType === '1' ? true : false;\r\n            this.taskList[i].isNeed = data.isNeed === '1' ? true : false;\r\n          });\r\n          this.taskList.sort((a, b) => a.seq > b.seq ? -1 : a.seq < b.seq ? 1 :\r\n            a.createTime > b.createTime ? -1 : a.createTime < b.createTime ? 1 : 0);\r\n        } else {\r\n          this.taskList = [];\r\n        }\r\n      }\r\n    }, () => {\r\n      this.listLoading = false;\r\n      this.isCallLoading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 资料列表\r\n   */\r\n  private getHandoutFiles(): void {\r\n    if (!this.curNode) {\r\n      console.error('please select node');\r\n      return;\r\n    }\r\n    const id = this.curNode.data.id;\r\n    const source$ = this.courseMgService.sectionFileList_courseSectionFile(id);\r\n    if (source$) {\r\n      this.hanoutLoading = true;\r\n      source$.subscribe(res => {\r\n        this.hanoutLoading = false;\r\n        if (res.status !== 200) {\r\n          this.nzMesService.error(res.message);\r\n          return;\r\n        }\r\n        this.handouts = res.data;\r\n        this.handouts.forEach((data, i) => {\r\n          this.handouts[i].isDownloadType = data.downloadType === '1' ? true : false;\r\n        });\r\n        this.handoutsLecture = this.getTypeData('101');\r\n        this.handoutsMaterial = this.getTypeData('102');\r\n        this.handoutsRecording = this.getTypeData('103');\r\n      }, () => {\r\n        this.hanoutLoading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   *  过滤某一类型列表，比如讲义列表\r\n   * @param type 类型\r\n   */\r\n  private getTypeData(type: '101' | '102' | '103') {\r\n    const arr = this.handouts.filter(e => {\r\n      return e.type === type;\r\n    }).map(ee => {\r\n      const ext = ToolsUtil.getFileExt(ee.title);\r\n      ee.aattachmentExt = Object.is(ext, ee.title) ? '' : ext;\r\n      ee.attachmentName = ee.title || ee.attachmentName;\r\n      ee.attachmentPath = ee.attachmentPath;\r\n      ee.isMainFile = ee.isMainFile === '0' ? false : true;\r\n      return ee;\r\n    });\r\n    arr.sort((a, b) => a.seq > b.seq ? -1 : a.seq < b.seq ? 1 :\r\n      a.createTime > b.createTime ? -1 : a.createTime < b.createTime ? 1 : 0);\r\n    return arr;\r\n  }\r\n\r\n  /**\r\n   * 获取关联列表\r\n   */\r\n  private getssocateList() {\r\n    this.courseMgService.getssocateList(this.curNode.data.courseChapterId, this.currentAssocate.id).subscribe(res => {\r\n      if (res.status === 200) {\r\n        if (res.data && res.data.length) {\r\n          this.assocateList = res.data;\r\n          this.assocateList.forEach((e, i) => {\r\n            this.assocateList[i].isBindAssoicate = e.pageNum ? true : false;\r\n          });\r\n          this.assocateLists = JSON.parse(JSON.stringify(this.assocateList));\r\n          this.assocateClassLists = [];\r\n          let sectionSeq;\r\n          let innerArr = [];\r\n\r\n          this.assocateList.forEach((ee, ii) => {\r\n            if (!sectionSeq) {\r\n              sectionSeq = ee.sectionSeq;\r\n            }\r\n            if (sectionSeq === ee.sectionSeq) {\r\n              innerArr.push(ee);\r\n              if (ii === this.assocateList.length - 1) {\r\n                this.assocateClassLists.push(innerArr);\r\n              }\r\n            } else {\r\n              this.assocateClassLists.push(innerArr);\r\n              innerArr = [];\r\n              sectionSeq = ee.sectionSeq;\r\n              innerArr.push(ee);\r\n              if (ii === this.assocateList.length - 1) {\r\n                this.assocateClassLists.push(innerArr);\r\n              }\r\n            }\r\n          });\r\n\r\n          this.currentBindLength = res.data.filter(resP => {\r\n            return resP.pageNum;\r\n          }).length;\r\n        } else {\r\n          this.assocateList = [];\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 预览保利威\r\n   * @param handout HandoutItem\r\n   */\r\n  previewpolyway(handout: HandoutItem) {\r\n    this.previewTitle = '';\r\n    this.isPreviewpolyway = true;\r\n    this.resourceUrl = this.polywayId = handout.attachmentPath;\r\n    this.previewStart = true;\r\n  }\r\n\r\n  /**\r\n   * 预览讲义\r\n   * @param handout HandoutItem\r\n   */\r\n  previewHandout(handout: HandoutItem) {\r\n    if (handout.attachmentPath.indexOf('/') < 0) {\r\n      this.previewpolyway(handout);\r\n    } else {\r\n      this.previewTitle = handout.attachmentName;\r\n      this.isPreviewpolyway = false;\r\n      this.resourceUrl = handout.attachmentPath;\r\n      this.previewStart = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 本地上传\r\n   * @param type '101' | '102' | '104'\r\n   */\r\n  uploadHandout(type: '101' | '102' | '104') {\r\n    const obj: Partial<UploadHandoutComponent> = {\r\n      node: this.curNode,\r\n      type,\r\n    };\r\n    let field = '';\r\n    if (type === '104') {\r\n      field = 'learnSet-task-action';\r\n    } else if (type === '101') {\r\n      field = 'learnSet-lecture-action';\r\n    } else if (type === '102') {\r\n      field = 'learnSet-material-action';\r\n    } else {\r\n      field = 'learnSet-record-action';\r\n    }\r\n    if (type === '101') {\r\n      obj.seq = ToolsUtil.getMaxSeq(this.handoutsLecture);\r\n      obj.maxSize = 100;\r\n    } else if (type === '102') {\r\n      obj.seq = ToolsUtil.getMaxSeq(this.handoutsMaterial);\r\n    } else if (type === '104') {\r\n      obj.seq = ToolsUtil.getMaxSeq(this.taskList);\r\n    }\r\n    if (type === '104') {\r\n      obj.limit = this.limitTask - this.taskList.length;\r\n    }\r\n    const modalRef = this.nzModalService.create<UploadHandoutComponent>({\r\n      nzTitle: '本地上传',\r\n      nzContent: UploadHandoutComponent,\r\n      nzComponentParams: obj,\r\n      nzFooter: null,\r\n      nzMaskClosable: false\r\n    });\r\n\r\n    modalRef.afterClose.subscribe(params => {\r\n      if (params) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '本地上传',\r\n          actionCode: STATISTICALRULES.packetInfo[field].addCode,\r\n          content: JSON.stringify(params),\r\n        });\r\n        this.getHandoutFiles();\r\n        this.getTaskList();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 点击章节\r\n   * @param node 树节点\r\n   */\r\n  nodeChange(node: NodeChangeEvent) {\r\n    SessionStorageUtil.setChapter(node.data.courseChapterId);\r\n    SessionStorageUtil.setSelection(node.data);\r\n    this.curNode = node;\r\n    this.getHandoutFiles();\r\n    this.getTaskList();\r\n  }\r\n\r\n  // param.taskType = 2; // 任务类型：阅读任务(0)、案例任务(1)、作业任务(2)、实训任务(3)、考试任务(4)、实战任务(5)、问卷(6)、测评(7)\r\n  getDescType(param) {\r\n    return [\r\n      '阅读任务',\r\n      '案例任务',\r\n      '作业任务',\r\n      '实训任务',\r\n      '考试任务',\r\n      '实战任务',\r\n      '问卷',\r\n      '测评',\r\n    ][param];\r\n  }\r\n\r\n  /**\r\n   * 删除讲义\r\n   * @param handout  HandoutItem\r\n   * @param task  是否任务\r\n   */\r\n  delHandout(handout: HandoutItem, task?: boolean) {\r\n    this.nzModalService.confirm({\r\n      nzTitle: '警告',\r\n      nzContent: `确定要删除“${handout.attachmentName ? handout.attachmentName : handout.name}”吗？`,\r\n      nzOnOk: () => {\r\n        return new Promise((resolve) => {\r\n          const source$ = task ?\r\n            this.courseMgService.del_courseSectionFileTask(handout.id) : this.courseMgService.del_courseSectionFile(handout.id);\r\n          source$.subscribe(res => {\r\n            if (res.status !== 204) {\r\n              this.nzMesService.error(res.message);\r\n              resolve(false);\r\n              return;\r\n            }\r\n            if (task) { // 更新seq\r\n              this.statisticsLogService.statisticsPacketInfoLog({\r\n                name: '删除' + this.getDescType(handout.taskType),\r\n                actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].delCode,\r\n                content: handout.id,\r\n              });\r\n              const params = [];\r\n              const successFn = (resT: any) => {\r\n                if (resT.status !== 201) {\r\n                  this.nzMesService.error(resT.message);\r\n                  return;\r\n                }\r\n              };\r\n              const failFn = (error: any) => {\r\n                this.nzMesService.error(JSON.stringify(error));\r\n              };\r\n              this.taskList.filter(w => w.id !== handout.id).forEach((ee, ii) => {\r\n                const obj: any = {};\r\n                obj.id = ee.id;\r\n                obj.seq = ii;\r\n                params.push(obj);\r\n              });\r\n              if (params.length) {\r\n                this.courseMgService.saveOrUpdateTask(params).subscribe(successFn, failFn);\r\n              }\r\n            } else {\r\n              const type = handout.type;\r\n              let desc;\r\n              let field;\r\n              if (type === '101') {\r\n                desc = '讲义';\r\n                field = 'learnSet-lecture-action';\r\n              } else if (type === '103') {\r\n                desc = '录播视频';\r\n                field = 'learnSet-record-action';\r\n              } else if (type === '102') {\r\n                desc = '资料';\r\n                field = 'learnSet-material-action';\r\n              }\r\n              this.statisticsLogService.statisticsPacketInfoLog({\r\n                name: '删除' + desc,\r\n                actionCode: STATISTICALRULES.packetInfo[field].delCode,\r\n                content: handout.id,\r\n              });\r\n\r\n            }\r\n            if (handout.isMainFile) {\r\n              this.getTaskList();\r\n              this.getHandoutFiles();\r\n            } else {\r\n              task ? this.getTaskList() : this.getHandoutFiles();\r\n            }\r\n            resolve(true);\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 设置主讲义\r\n   * @param ifMainFile boolean\r\n   * @param item HandoutItem\r\n   */\r\n  mainFileChange(ifMainFile: boolean, item: HandoutItem) {\r\n    const work = [this.courseMgService.modifySectionResource({id: item.id, isMainFile: ifMainFile ? '1' : '0'})];\r\n    if (ifMainFile) { // 设置主讲义去除其他主讲义\r\n      this.handoutsLecture.every((ee, ii) => {\r\n        if (ee.isMainFile && ee.id !== item.id) {\r\n          const param = {id: ee.id, isMainFile: '0'};\r\n          work.push(this.courseMgService.modifySectionResource(param));\r\n          this.handoutsLecture[ii].isMainFile = false;\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n    }\r\n    forkJoin(work).subscribe(res => {\r\n      if (res[0].status !== 201) {\r\n        this.nzMesService.error(res[0].message);\r\n        return;\r\n      }\r\n      this.statisticsLogService.statisticsPacketInfoLog({\r\n        name: '主讲义更改',\r\n        actionCode: STATISTICALRULES.packetInfo['learnSet-lecture-action'].modify,\r\n        content: JSON.stringify({id: item.id, isMainFile: ifMainFile ? '1' : '0'}),\r\n      });\r\n      item.isMainFile = ifMainFile;\r\n      this.getTaskList();\r\n    }, err => {\r\n      this.nzMesService.error(JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * 是否自评修改\r\n   * @param gradeType 1:学生自评 ; 2:老师批改\r\n   * @param handout  HandoutItem\r\n   */\r\n  gradeTypeChange(gradeType: '1' | '2', handout: HandoutItem) {\r\n    const params = {id: handout.id, gradeType, needTeacherProc: gradeType === '1' ? 0 : 1};\r\n    this.courseMgService.modifySectionResourceTask(params).subscribe(res => {\r\n      if (res.status !== 201) {\r\n        this.nzMesService.error(res.message);\r\n        return;\r\n      }\r\n      this.statisticsLogService.statisticsPacketInfoLog({\r\n        name: '作业任务自评更改',\r\n        actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n        content: JSON.stringify(params),\r\n      });\r\n      handout.gradeType = gradeType;\r\n    }, err => {\r\n      this.nzMesService.error(JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 是否需评分\r\n   * @param isGrade 0 :不评分| 1 需评分\r\n   * @param handout HandoutItem\r\n   */\r\n  isGradeChange(isGrade: '' | '0' | '1', handout: HandoutItem) {\r\n    const params = {id: handout.id, isGrade};\r\n    this.courseMgService.modifySectionResourceTask(params).subscribe(res => {\r\n      if (res.status !== 201) {\r\n        this.nzMesService.error(res.message);\r\n        return;\r\n      }\r\n      this.statisticsLogService.statisticsPacketInfoLog({\r\n        name: '案例任务是否评分更改',\r\n        actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n        content: JSON.stringify(params),\r\n      });\r\n      handout.isGrade = isGrade;\r\n    }, err => {\r\n      this.nzMesService.error(JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 能否下载\r\n   * @param downloadType  0 :不可以 1 可以\r\n   * @param handout HandoutItem\r\n   * @param isTask boolean\r\n   */\r\n  downloadChange(downloadType: '0' | '1', handout: HandoutItem, isTask?: boolean) {\r\n    const params = {id: handout.id, downloadType};\r\n    let source$;\r\n    if (isTask) {\r\n      source$ = this.courseMgService.modifySectionResourceTask(params);\r\n    } else {\r\n      source$ = this.courseMgService.modifySectionResource(params);\r\n    }\r\n    source$.subscribe(res => {\r\n      if (res.status !== 201) {\r\n        this.nzMesService.error(res.message);\r\n        return;\r\n      }\r\n      if (isTask) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '阅读任务能否下载更改',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n          content: JSON.stringify(params),\r\n        });\r\n      } else {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '讲义能否下载更改',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-lecture-action'].modify,\r\n          content: JSON.stringify(params),\r\n        });\r\n      }\r\n      handout.downloadType = downloadType;\r\n    }, err => {\r\n      this.nzMesService.error(JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 视频上传\r\n   * @param label 本地/保利威\r\n   * @param reset 新增/修改\r\n   * @param data  HandoutItem\r\n   */\r\n  videoUpload(label: 'localVideo' | 'polyway', reset = true, data?: HandoutItem) {\r\n    this.reset = reset;\r\n    this.getTeacher();\r\n    // tslint:disable-next-line:forin\r\n    for (const i in this[label].controls) {\r\n      this[label].controls[i].markAsUntouched();\r\n      this[label].controls[i].markAsPristine();\r\n      this[label].controls[i].updateValueAndValidity();\r\n    }\r\n    if (reset) {\r\n      this[label].patchValue({\r\n        seq: (this.handoutsRecording[0] && this.handoutsRecording[0].seq) ? (this.handoutsRecording[0].seq + 1) : 1\r\n      });\r\n    }\r\n    this.modalFormRef = this.modalService.create({\r\n      nzTitle: this.getLabel(label, reset),\r\n      nzContent: this[label + 'Modal'],\r\n      nzMaskClosable: false,\r\n      nzWrapClassName: 'vertical-center-modal',\r\n      nzCancelText: '取消',\r\n      nzOkText: '保存',\r\n      nzOnOk: (e) => {\r\n        return this.comfirmUpload(label, data);\r\n      },\r\n      nzOnCancel: (ee) => {\r\n        this[label].patchValue({\r\n          videoUrl: label === 'localVideo' ? [] : '',\r\n          authorId: '',\r\n          videoType: '1',\r\n          seq: 1,\r\n          attachmentName: '',\r\n          id: '',\r\n        });\r\n      },\r\n    });\r\n  }\r\n\r\n  private getLabel(label: 'polyway' | 'localVideo', reset: boolean): '保利威' | '本地上传' | '编辑信息' {\r\n    if (reset) {\r\n      return label === 'polyway' ? '保利威' : '本地上传';\r\n    } else {\r\n      return '编辑信息';\r\n    }\r\n  }\r\n\r\n  comfirmUpload(label: 'polyway' | 'localVideo', data?: HandoutItem): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n      // tslint:disable-next-line:forin\r\n      for (const i in this[label].controls) {\r\n        this[label].controls[i].markAsDirty();\r\n        this[label].controls[i].updateValueAndValidity();\r\n      }\r\n      if (this[label].invalid) {\r\n        this.nzMesService.warning('请按规则填写所有必填项');\r\n        resolve(false);\r\n        return;\r\n      }\r\n      const {value} = this[label];\r\n      const {videoUrl} = value;\r\n      const param: any = this.getParams(label, this.reset);\r\n      if (this.reset) { // 新增\r\n        if (label === 'polyway') {\r\n          this.getDuration(videoUrl).subscribe((res) => {\r\n            if (res.code === 200) {\r\n              if (res.data.length) {\r\n                param[0].videoLength = this.getVideoLength(res.data[0].duration);\r\n                this.storingData(param, resolve, label, this.reset);\r\n              } else {\r\n                this.nzMesService.warning('请填写正确的视频ID');\r\n                resolve(false);\r\n              }\r\n            } else {\r\n              this.nzMesService.warning('保利威服务异常，请稍后再试');\r\n              resolve(false);\r\n            }\r\n          });\r\n        } else {\r\n          param[0].videoLength = this.getVideoLength(param[0].attachmentPath[0].videoLength);\r\n          param[0].attachmentPath = param[0].attachmentPath[0].path;\r\n          this.storingData(param, resolve, label, this.reset);\r\n        }\r\n      } else {\r\n        if (typeof param[0].attachmentPath !== 'string') {\r\n          param[0].attachmentPath = param[0].attachmentPath[0].path;\r\n          param[0].resourceId = data.resourceId;\r\n        }\r\n        this.storingData(param, resolve, label, this.reset);\r\n      }\r\n    });\r\n  }\r\n\r\n  getParams(label: 'polyway' | 'localVideo', reset: boolean) {\r\n    const {courseId, coursePacketId} = this;\r\n    const {id, courseChapterId} = this.curNode.data;\r\n    const {value} = this[label];\r\n    const {authorId, videoType, seq, videoUrl, attachmentName, videoLength} = value;\r\n    const obj: any = {\r\n      courseId,\r\n      coursePacketId,\r\n      courseChapterId,\r\n      courseSectionId: id,\r\n      title: attachmentName,\r\n      attachmentName,\r\n      attachmentPath: videoUrl,\r\n      authorId,\r\n      attachmentExt: typeof videoUrl === 'string' ? '' : ToolsUtil.getFileExt(videoUrl[0].name),\r\n      authorName: this.teacherList.filter(eee => Object.is(eee.id, authorId))[0].name,\r\n      type: '103',\r\n      // sourceType: label === 'polyway' ? 2 : 1,\r\n      sourceType: 2,\r\n      seq,\r\n      videoType,\r\n      videoLength,\r\n    };\r\n    if (!reset) {\r\n      obj.id = value.id;\r\n    }\r\n    return [\r\n      obj\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * 获取上传时长\r\n   * @param videoUrl vid\r\n   */\r\n  getDuration(videoUrl: string) {\r\n    const params: any = {\r\n      ptime: (new Date()).getTime(),\r\n      vids: videoUrl,\r\n    };\r\n    const sign = hex_sha1(queryParam(params) + environment.secretkey).toUpperCase();\r\n    params.sign = sign;\r\n    return this.courseMgService.getVideoLength(params, environment.userid);\r\n  }\r\n\r\n  storingData(param, resolve, label, reset) {\r\n    // let interfaceUrl;\r\n    // if (reset) {\r\n    // interfaceUrl = 'batchSave_courseSectionFile';\r\n    // } else {\r\n    // interfaceUrl = 'saveOrUpdate';\r\n    // }\r\n    this.courseMgService.batchSave_courseSectionFile(param).subscribe(resP => {\r\n      if (resP.status === 201) {\r\n        const field = reset ? 'addCode' : 'modify';\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: (reset ? '新增' : '编辑') + '录播视频',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-record-action'][field],\r\n          content: JSON.stringify(param),\r\n        });\r\n        this.getHandoutFiles();\r\n        this[label].patchValue({\r\n          videoUrl: label === 'localVideo' ? [] : '',\r\n          authorId: '',\r\n          videoType: '1',\r\n          seq: 1,\r\n          attachmentName: '',\r\n          id: '',\r\n        });\r\n        // tslint:disable-next-line:forin\r\n        for (const i in this[label].controls) {\r\n          this[label].controls[i].markAsUntouched();\r\n          this[label].controls[i].markAsPristine();\r\n          this[label].controls[i].updateValueAndValidity();\r\n        }\r\n        this.modalFormRef.destroy();\r\n        resolve(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 各种调用\r\n   * @param type 阅读库/案例库/实训库\r\n   * @param task  类型\r\n   * @param data  HandoutItem\r\n   */\r\n  callSchoolEnterpriseLib(type: 'read' | 'case' | 'setting', task: '1' | '101' | '102' | '103', data?: HandoutItem) {\r\n    let tasks;\r\n    if (task === '1') {\r\n      tasks = this.taskList;\r\n    } else if (task === '101') {\r\n      tasks = this.handoutsLecture;\r\n    } else if (task === '102') {\r\n      tasks = this.handoutsMaterial;\r\n    } else if (task === '103') {\r\n      tasks = this.handoutsRecording;\r\n    }\r\n    const nodes = tasks.map(el => {\r\n      return {\r\n        taskId: el.id,\r\n        id: el.resourceId\r\n      };\r\n    });\r\n    const item: any = {\r\n      type: 'scp-section-handout',\r\n      professionId: this.professionId,\r\n      sectionInfo: {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        courseChapterId: this.curNode.data.courseChapterId,\r\n        courseSectionId: this.curNode.data.id,\r\n      },\r\n      seq: ToolsUtil.getMaxSeq(tasks),\r\n      nodes,\r\n    };\r\n    if (this.isStandard) {\r\n      item.isStandard = '1';\r\n    } else {\r\n      item.isStandard = '';\r\n    }\r\n    if (task === '1') {\r\n      item.limit = this.limitTask;\r\n    }\r\n    SessionStorageUtil.putScpResourceMaterial(item);\r\n    if (type === 'read') {\r\n      SessionStorageUtil.removeReadtree();\r\n    } else if (type === 'case') {\r\n      SessionStorageUtil.removeCasetree();\r\n    } else if (type === 'setting') {\r\n      SessionStorageUtil.removeTrainTree();\r\n    }\r\n    this.menuService.gotoUrl({\r\n      url: '/m/rm/' + type,\r\n      paramUrl: `?from=scp&task=${task}`\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 下载文件\r\n   * @param name 文件名\r\n   * @param attachmentPath 文件路径\r\n   */\r\n  downLoad(item: HandoutItem) {\r\n    let name = item.attachmentName;\r\n    if (name.indexOf('.') < 0) {\r\n      const pathArr = item.attachmentPath.split('.');\r\n      name += ('.' + pathArr[pathArr.length - 1]);\r\n    }\r\n    this.aliOssService.downloadFile(name, item.attachmentPath).subscribe(res => res);\r\n  }\r\n\r\n  /**\r\n   * 获取作业/考试调用列表\r\n   * @param label 考试/作业\r\n   */\r\n  async getCallList(label: 'exam' | 'exercise') {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    const params = {\r\n      id: label === 'exam' ? ((String(this.testPaperId) && String(this.testPaperId) !== 'null') ? this.testPaperId : '')\r\n        : ((String(this.testExerciseId) && String(this.testExerciseId) !== 'null') ? this.testExerciseId : ''),\r\n      proId: codeUid,\r\n      groupWay: label === 'exercise' ? '' : this.selectedValue ? this.selectedValue : '',\r\n      courseCode: this.code,\r\n      name: label === 'exam' ? (this.testPaperName ? this.testPaperName : '') : (this.testExerciseName ? this.testExerciseName : ''),\r\n      isNotTaskType: label === 'exam' ? '4' : '2', // 过滤掉作业类型\r\n      sublibraryModuleIds: label === 'exam' ? this.examSubQuestionBankExamBak.join(',') : this.homeworkSubQuestionBankBak.join(','),\r\n      pageSize: '10000',\r\n      pageNum: '1'\r\n    };\r\n    ToolsUtil.getAjax(environment.questionBankApi + 'system/qkcPaper/list', params).subscribe(res => {\r\n      try {\r\n        const result = JSON.parse(res);\r\n        if (result.code === 200) {\r\n          if (label === 'exam') {\r\n            this.listOfData = result.data.rows;\r\n          } else {\r\n            this.listOfDataExercise = result.data.rows;\r\n          }\r\n        } else {\r\n          this.nzMesService.warning(res);\r\n        }\r\n      } catch (e) {\r\n        this.nzMesService.warning(res || e);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 获取子题库模块树\r\n   * @param label 类型\r\n   */\r\n  getSubQuestionBank(label: 'exam' | 'exercise' | 'examSearch' | 'exerciseSearch') {\r\n    return new Promise((resolve) => {\r\n      this.searchLoad = true;\r\n      ToolsUtil.getAjax(environment.questionBankApi + 'system/qkcPaper/courseCode', {\r\n        courseCode: this.code,\r\n        type: (label === 'exam' || label === 'examSearch') ? 'EXAM' : 'PRACTICE'\r\n      }).subscribe(resultS => {\r\n        this.searchLoad = false;\r\n        try {\r\n          const resP = JSON.parse(resultS);\r\n          if (resP.code === 200) {\r\n            this[label] = this.conversionNode(resP.data, label);\r\n            resolve(true);\r\n          } else {\r\n            this.nzMesService.error(resP.message);\r\n            resolve(false);\r\n          }\r\n        } catch (e) {\r\n          resolve(false);\r\n          this.nzMesService.error('题库服务异常');\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  getTaskFormText(taskForm) {\r\n    switch (taskForm) {\r\n      case '0':\r\n        return '【课前】';\r\n      case '1':\r\n        return '【课中】';\r\n      case '2':\r\n        return '【课后】';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 新增/编辑作业\r\n   * @param data HandoutItem\r\n   */\r\n  async entryExercises(data?: HandoutItem) {\r\n    this.curJobData = data ? data : {};\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    this.getSubQuestionBank('exercise').then(resS => {\r\n      if (resS) {\r\n        if (data) {\r\n          this.addJobFromSeting.patchValue({\r\n            name: data.name,\r\n            taskForm: data.taskForm,\r\n            subQuestionBank: Number(data.quebankId)\r\n          });\r\n        } else {\r\n          const selected = LocalStorageUtil.getPracSubquestionbank();\r\n          this.addJobFromSeting.patchValue({\r\n            name: '课后练习',\r\n            taskForm: '2',\r\n            subQuestionBank: selected ? Number(selected) : ''\r\n          });\r\n        }\r\n        this.modalRef = this.nzModalService.create({\r\n          nzTitle: data ? '编辑作业' : '新增作业',\r\n          nzContent: data ? this.jobSettingsEdit : this.jobSettings,\r\n          nzMaskClosable: false,\r\n          nzCancelText: '取消',\r\n          nzFooter: data ? null : undefined,\r\n          nzOkText: '确定',\r\n          nzOnOk: () => {\r\n            return new Promise((resolve) => {\r\n              Object.keys(this.addJobFromSeting.controls).forEach(key => {\r\n                this.addJobFromSeting.controls[key].markAsDirty();\r\n                this.addJobFromSeting.controls[key].updateValueAndValidity();\r\n              });\r\n              if (this.addJobFromSeting.invalid) {\r\n                resolve(false);\r\n                return;\r\n              }\r\n              if (data) { // 编辑\r\n                this.realSave({\r\n                  id: data.id,\r\n                  name: this.addJobFromSeting.value.name,\r\n                  taskForm: this.addJobFromSeting.value.taskForm\r\n                }).subscribe(param => {\r\n                  if (param) {\r\n                    this.statisticsLogService.statisticsPacketInfoLog({\r\n                      name: '编辑作业',\r\n                      actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n                      content: JSON.stringify(param),\r\n                    });\r\n                    resolve(true);\r\n                  } else {\r\n                    resolve(false);\r\n                  }\r\n                });\r\n              } else { // 新增\r\n                const params = {\r\n                  name: this.addJobFromSeting.value.name,\r\n                  proId: codeUid,\r\n                  courseCode: this.code,\r\n                  taskType: 2,\r\n                  groupWay: 1,\r\n                  sublibraryModuleId: this.addJobFromSeting.value.subQuestionBank,\r\n                  userPhone: LocalStorageUtil.getUser().userName\r\n                };\r\n                ToolsUtil.postAjax(environment.questionBankApi + 'system/qkcPaper/savePaper', params).subscribe(res => {\r\n                  try {\r\n                    const result = JSON.parse(res);\r\n                    if (result.code === 200) {\r\n                      const syncParams = {\r\n                        proId: codeUid,\r\n                        courseCode: this.code,\r\n                        mobile: LocalStorageUtil.getUser().userName,\r\n                      };\r\n                      ToolsUtil.postAjax(environment.questionBankApi + 'system/qkcPaper/saveDefaultCourse', syncParams)\r\n                        .subscribe(async resT => {\r\n                          try {\r\n                            const resultT = JSON.parse(resT);\r\n                            if (resultT.code === 200) {\r\n                              const result$ = await this.postTaskList(result, true);\r\n                              result$.subscribe(param => {\r\n                                if (param) {\r\n                                  this.statisticsLogService.statisticsPacketInfoLog({\r\n                                    name: '新增作业',\r\n                                    actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n                                    content: JSON.stringify(param),\r\n                                  });\r\n                                  this.edit({id: result.data.paperId, taskType: '2'});\r\n                                  resolve(true);\r\n                                } else {\r\n                                  resolve(false);\r\n                                }\r\n                              });\r\n                            } else {\r\n                              this.nzMesService.error(resT);\r\n                              resolve(false);\r\n                            }\r\n                          } catch (e) {\r\n                            this.nzMesService.error(resT);\r\n                            resolve(false);\r\n                          }\r\n                        });\r\n                    } else {\r\n                      if (result.code === 99) {\r\n                        this.nzMesService.warning('通过审核的课程才能新增作业,题库课程查询编码不存在');\r\n                      } else {\r\n                        this.nzMesService.warning(res);\r\n                      }\r\n                      resolve(false);\r\n                    }\r\n                  } catch (e) {\r\n                    this.nzMesService.warning(e);\r\n                    resolve(false);\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 新增/编辑组卷\r\n   * @param data HandoutItem\r\n   */\r\n  async addVolume(data?) {\r\n    this.curExamData = data ? data : {};\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    this.getSubQuestionBank('exam').then(resS => {\r\n      if (resS) {\r\n        this.addExamFrom.reset();\r\n        if (data) {\r\n          this.addExamFrom.patchValue({\r\n            missionName: data.name,\r\n            formingMethod: data.groupWay ? Number(data.groupWay) : (data.examType ? Number(data.examType) : 1),\r\n            subQuestionBank: Number(data.quebankId)\r\n          });\r\n        } else {\r\n          const selected = LocalStorageUtil.getExamSubquestionbank();\r\n          this.addExamFrom.patchValue({\r\n            missionName: '',\r\n            formingMethod: 1,\r\n            subQuestionBank: selected ? Number(selected) : ''\r\n          });\r\n        }\r\n        this.modalRef = this.nzModalService.create({\r\n          nzTitle: data ? '编辑组卷' : '新增组卷',\r\n          nzContent: data ? this.addExamExit : this.addExam,\r\n          nzMaskClosable: false,\r\n          nzFooter: data ? null : undefined,\r\n          nzCancelText: '取消',\r\n          nzOkText: '确定',\r\n          nzOnOk: () => {\r\n            return new Promise((resolve, reject) => {\r\n              Object.keys(this.addExamFrom.controls).forEach(key => {\r\n                this.addExamFrom.controls[key].markAsDirty();\r\n                this.addExamFrom.controls[key].updateValueAndValidity();\r\n              });\r\n              if (this.addExamFrom.invalid) {\r\n                resolve(false);\r\n                return;\r\n              }\r\n              if (data) {// 编辑组卷\r\n                this.realSave({\r\n                  id: data.id,\r\n                  name: this.addExamFrom.value.missionName,\r\n                }).subscribe(param => {\r\n                  if (param) {\r\n                    this.statisticsLogService.statisticsPacketInfoLog({\r\n                      name: '编辑组卷',\r\n                      actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n                      content: JSON.stringify(param),\r\n                    });\r\n                    resolve(true);\r\n                  } else {\r\n                    resolve(false);\r\n                  }\r\n                });\r\n              } else {\r\n                const params = {\r\n                  name: this.addExamFrom.value.missionName,\r\n                  groupWay: this.addExamFrom.value.formingMethod,\r\n                  proId: codeUid,\r\n                  courseCode: this.code,\r\n                  taskType: 4,\r\n                  sublibraryModuleId: this.addExamFrom.value.subQuestionBank,\r\n                  userPhone: LocalStorageUtil.getUser().userName\r\n                };\r\n                ToolsUtil.postAjax(environment.questionBankApi + 'system/qkcPaper/savePaper', params).subscribe(res => {\r\n                  try {\r\n                    const result = JSON.parse(res);\r\n                    if (result.code === 200) {\r\n                      const syncParams = {\r\n                        proId: codeUid,\r\n                        courseCode: this.code,\r\n                        mobile: LocalStorageUtil.getUser().userName\r\n                      };\r\n                      ToolsUtil.postAjax(environment.questionBankApi + 'system/qkcPaper/saveDefaultCourse', syncParams)\r\n                        .subscribe(async resT => {\r\n                          try {\r\n                            const resultT = JSON.parse(resT);\r\n                            if (resultT.code === 200) {\r\n                              // 新增\r\n                              const result$ = await this.postTaskList(result, false);\r\n                              result$.subscribe(param => {\r\n                                if (param) {\r\n                                  this.statisticsLogService.statisticsPacketInfoLog({\r\n                                    name: '新增组卷',\r\n                                    actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].addCode,\r\n                                    content: JSON.stringify(param),\r\n                                  });\r\n                                  this.edit({id: result.data.paperId, taskType: '4'});\r\n                                  resolve(true);\r\n                                } else {\r\n                                  resolve(false);\r\n                                }\r\n                              });\r\n                            } else {\r\n                              this.nzMesService.error(resT);\r\n                              resolve(false);\r\n                            }\r\n                          } catch (e) {\r\n                            this.nzMesService.error(resT);\r\n                            resolve(false);\r\n                          }\r\n                        });\r\n                    } else {\r\n                      if (result.code === 99) {\r\n                        this.nzMesService.warning('通过审核的课程才能新增组卷,题库课程查询编码不存在');\r\n                      } else {\r\n                        this.nzMesService.warning(res);\r\n                      }\r\n                      resolve(false);\r\n                    }\r\n                  } catch (e) {\r\n                    this.nzMesService.warning(res || e);\r\n                  }\r\n                });\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /*\r\n  * 新增/调用作业或试卷\r\n  * result：新增返回数据\r\n  * job：作业/试卷\r\n  * data: 调用列表数据\r\n  * 考试任务:\r\n  *  不可重做模式（高校模式）   默认讲师批改，不可修改\r\n  *  可重做模式               默认学员自评，不可修改\r\n  * 作业任务:\r\n  *  不可重做模式（高校模式）   默认学员自评，可以修改\r\n  *  可重做模式               默认学员自评，不可修改\r\n  * */\r\n  async postTaskList(result: HttpResponseDataStandard, job?: boolean, data?: CallItem) {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    // 线下面授(11)、线下双师(12)、线上直播(21)、线上录播(22)',\r\n    const gradeType = job ? 1 : this.exerciseType === '1' ? 1 : 2;\r\n    const param: any = {\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      courseChapterId: this.curNode.data.courseChapterId,\r\n      courseSectionId: this.curNode.data.id,\r\n      status: 1, // 状态：有效(1)、失效(0)\r\n      seq: ToolsUtil.getMaxSeq(this.taskList),\r\n      examType: 1, // 组卷方式：选题/录题组卷(1)、题型难度随机组卷(2)、知识点难度抽题组卷(3)\r\n      // gradeType: (this.teachType === '21' || this.teachType === '22') ? 1 : 2,\r\n      gradeType, // 评分类型：学生自评(1)、老师评分(2)\r\n      needTeacherProc: gradeType === 1 ? 0 : 1,\r\n      isGrade: 1, // 是否需要评分：否(0)、是(1)\r\n      attachmentPath: environment.questionBank + '#/questionList?proId=' + codeUid + '&courseCode=' + this.code // 附件路径\r\n    };\r\n    // 新增作业\r\n    if (job) {\r\n      param.taskType = 2; // 任务类型：阅读任务(0)、案例任务(1)、作业任务(2)、实训任务(3)、考试任务(4)、实战任务(5)、问卷(6)、测评(7)\r\n      if (data) { // 调用\r\n        param.name = data.name;\r\n        param.attachmentName = data.name;\r\n        param.quebankId = (data.sublibraryModuleIdList && data.sublibraryModuleIdList.length)\r\n          ? data.sublibraryModuleIdList.map(e => e.sublibraryModuleId).join(',') : '';\r\n        param.resourceId = data.paperUuid + '-' + data.id;\r\n        param.taskForm = '2';\r\n      } else {  // 新增\r\n        param.name = this.addJobFromSeting.value.name; // 任务名称(默认等于附件名)\r\n        param.attachmentName = this.addJobFromSeting.value.name; // 附件名\r\n        param.resourceId = result.data.paperUuid + '-' + result.data.paperId; // 资源id，题库返回的作业考试id\r\n        param.taskForm = this.addJobFromSeting.value.taskForm; // 任务形式：课前(0)、课中(1)、课后(2)\r\n        param.quebankId = this.addJobFromSeting.value.subQuestionBank; // 任务形式：课前(0)、课中(1)、课后(2)\r\n      }\r\n    } else {\r\n      // 新增试卷\r\n      param.taskType = 4;\r\n      param.paperType = '1';\r\n      if (data) { // 调用\r\n        param.quebankId = (data.sublibraryModuleIdList && data.sublibraryModuleIdList.length)\r\n          ? data.sublibraryModuleIdList.map(e => e.sublibraryModuleId).join(',') : '';\r\n        param.examType = data.groupWay;\r\n        param.name = data.name;\r\n        param.attachmentName = data.name;\r\n        param.resourceId = data.paperUuid + '-' + data.id;\r\n      } else {   // 新增\r\n        param.examType = this.addExamFrom.value.formingMethod;\r\n        param.name = this.addExamFrom.value.missionName;\r\n        param.attachmentName = this.addExamFrom.value.missionName;\r\n        param.resourceId = result.data.paperUuid + '-' + result.data.paperId;\r\n        param.quebankId = this.addExamFrom.value.subQuestionBank; // 任务形式：课前(0)、课中(1)、课后(2)\r\n      }\r\n      if (this.exerciseType === '2') {\r\n        param.answerTimes = 1;\r\n      }\r\n    }\r\n    return this.realSave(param);\r\n  }\r\n\r\n  realSave(param) {\r\n    return new Observable<any>((observer: Subscriber<any>) => {\r\n      this.courseMgService.newTestPaper(param).subscribe(resul => {\r\n        if (resul.status === 201) {\r\n          this.getTaskList();\r\n          observer.next(param);\r\n          observer.complete();\r\n          observer.unsubscribe();\r\n        } else {\r\n          this.isCallLoading = false;\r\n          observer.next(false);\r\n          observer.complete();\r\n          observer.unsubscribe();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // 选择试卷\r\n  chooseTestPaper() {\r\n    this.getSubQuestionBank('examSearch');\r\n    this.getCallList('exam');\r\n    this.selectedValue = '';  // 组卷类型\r\n    this.testPaperName = '';  // 试卷名\r\n    this.examSubQuestionBankExam = []; //  试卷调用子题库\r\n    this.examSubQuestionBankExamBak = []; //  试卷调用子题库\r\n    this.examListPreview = true;\r\n  }\r\n\r\n// 选择作业\r\n  chooseExercises() {\r\n    this.getSubQuestionBank('exerciseSearch');\r\n    this.getCallList('exercise');\r\n    this.homeworkSubQuestionBank = []; //  作业调用子题库\r\n    this.homeworkSubQuestionBankBak = []; //  作业调用子题库\r\n    this.testExerciseName = ''; // 作业名\r\n    this.exerciseListPreview = true;\r\n  }\r\n\r\n// 关联主讲义\r\n  associate(item: HandoutItem, sectionIdx: number) {\r\n    this.associateing[sectionIdx] = true;\r\n    this.totalPage = 0;\r\n    this.currentAssocate = item;\r\n    this.courseMgService.getViewUrlWebPath(environment.OSS_URL + item.attachmentPath).subscribe(async (res) => {\r\n      if (res.status === 200) {\r\n        this.wps = WebOfficeSDK.config({\r\n          url: res.data.wpsUrl,\r\n        });\r\n        this.wps.iframe.style.display = 'none';\r\n        await this.wps.ready();\r\n        this.wpsApplication = this.wps.Application;\r\n        this.stack = this.wpsApplication.Stack();\r\n        this.totalPage = await this.wpsApplication.ActivePresentation.Slides.Count;\r\n        this.associateing[sectionIdx] = false;\r\n        this.visibleAssociate = true;\r\n      }\r\n    });\r\n    this.getssocateList();\r\n  }\r\n\r\n\r\n  // 是否必须更改\r\n  isNeedChange(ifNeed: any, item: any) {\r\n    const isNeed = item.isNeed ? '1' : '0';\r\n    const params = {id: item.id, isNeed};\r\n    const source$ = this.courseMgService.modifySectionResourceTask(params);\r\n    source$.subscribe(res => {\r\n      if (res.status !== 201) {\r\n        this.nzMesService.error(res.message);\r\n        return;\r\n      }\r\n      item.isNeed = ifNeed;\r\n    }, err => {\r\n      this.nzMesService.error(JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n// 是否可以设置主讲义\r\n  disableMainLecture(item) {\r\n    return !(this.preview === '1'\r\n      || (item.attachmentPath\r\n        && (item.attachmentPath.indexOf('.ppt') > -1\r\n          || item.attachmentPath.indexOf('.pptx') > -1)));\r\n  }\r\n\r\n  /**\r\n   * 能否关联\r\n   * @param item HandoutItem\r\n   */\r\n  showassolite(item: HandoutItem) {\r\n    return this.preview === '0' && item.isMainFile && item.attachmentPath &&\r\n      (item.attachmentPath.indexOf('.ppt') > -1 || item.attachmentPath.indexOf('.pptx') > -1);\r\n  }\r\n\r\n  saveAssociate() {\r\n    const params = [];\r\n    this.assocateList.forEach((ee, ii) => {\r\n      const obj: any = {};\r\n      obj.id = ee.linkId;\r\n      obj.courseId = ee.courseId;\r\n      obj.coursePacketId = ee.coursePacketId;\r\n      obj.courseChapterId = ee.courseChapterId;\r\n      obj.courseSectionId = ee.courseSectionId;\r\n      obj.courseTaskId = ee.id;\r\n      obj.resourceId = this.currentAssocate.id;\r\n      obj.pageNum = ee.pageNum;\r\n      obj.seq = ee.seq;\r\n      params.push(obj);\r\n    });\r\n    this.courseMgService.saveAssocateList(params).subscribe(res => {\r\n      if (res.status === 201) {\r\n        this.visibleAssociate = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getType(type: any) {\r\n    switch (type) {\r\n      case 1:\r\n        return '真题';\r\n      case 2:\r\n        return '模拟';\r\n      case 3:\r\n        return '原创';\r\n      case 4:\r\n        return '测试卷';\r\n    }\r\n  }\r\n\r\n// 调用/取消调用逻辑\r\n  showTransfer(data: WjCallItem, flag: boolean) {\r\n    // 任务最多7个\r\n    if (this.taskList.length >= this.limitTask) {\r\n      if (!flag) {\r\n        return false;\r\n      }\r\n    }\r\n    let list = [];\r\n    if (this.taskList.length) {\r\n      list = this.taskList.map(e => {\r\n        return e.resourceId.split('-')[0];\r\n      });\r\n    }\r\n    // 取消调用显示逻辑\r\n    if (flag) {\r\n      if (list.length) {\r\n        if (list.indexOf(data.paperUuid) > -1) {\r\n          return true;\r\n        }\r\n      }\r\n    } else {\r\n      // 调用显示逻辑\r\n      if (!list.length) {\r\n        return true;\r\n      }\r\n      if (list.indexOf(data.paperUuid) < 0) {\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 调用\r\n   * @param data 列表项目\r\n   * @param ifExercise 是否作业/考试\r\n   */\r\n  async transfer(data: CallItem, ifExercise: boolean) {\r\n    this.isCallLoading = true;\r\n    // 调用新增\r\n    const result$ = await this.postTaskList(null, ifExercise, data);\r\n    result$.subscribe(param => {\r\n      if (param) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: ifExercise ? '调用作业' : '调用试卷',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].addCode,\r\n          content: JSON.stringify(param),\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 取消调用\r\n   * @param data 列表项\r\n   * @param type 类型\r\n   */\r\n  cancelCall(data: CallItem, type?: 'exam' | 'exercise' | 'questionnaireType' | 'evaluationType') {\r\n    this.isCallLoading = true;\r\n    const list = this.taskList.map(e => {\r\n      return e.resourceId.split('-')[0];\r\n    });\r\n    const index = list.findIndex((ee) => {\r\n      return ee === data.paperUuid;\r\n    });\r\n    this.courseMgService.del_courseSectionFileTask(this.taskList[index].id).subscribe(res => {\r\n      if (res.status !== 204) {\r\n        this.nzMesService.error(res.message);\r\n        return;\r\n      }\r\n      this.getTaskList();\r\n    }, () => {\r\n      this.isCallLoading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 预览试卷\r\n   * @param data HandoutItem\r\n   */\r\n  async previewExaminationPaper(data: HandoutItem) {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    if (data.resourceId) {\r\n      open(environment.questionBank + '#/paper/previewPaper?paperId=' + data.resourceId.split('-')[1] +\r\n        '&token=' + this.tokenObj.token + '&refreshToken=' + this.tokenObj.refreshToken + '&proId=' + codeUid + '&courseCode=' + this.code);\r\n    } else {\r\n      open(environment.questionBank + '#/paper/previewPaper?paperId=' + data.id +\r\n        '&token=' + this.tokenObj.token + '&refreshToken=' + this.tokenObj.refreshToken + '&proId=' + codeUid + '&courseCode=' + this.code);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 编辑题库相关\r\n   * @param data HandoutItem\r\n   */\r\n  edit(data: HandoutItem) {\r\n    if (data.name) {\r\n      if (data.taskType === '2') {\r\n        this.entryExercises(data);\r\n      } else if (data.taskType === '4') {\r\n        this.addVolume(data); // 新增/编辑组卷\r\n      } else {\r\n        this.otherEdit(data);\r\n      }\r\n    } else {\r\n      this.otherEdit(data);\r\n    }\r\n  }\r\n\r\n  async otherEdit(data: HandoutItem) {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    const syncParams = {\r\n      proId: codeUid,\r\n      courseCode: this.code,\r\n      mobile: LocalStorageUtil.getUser().userName\r\n    };\r\n    ToolsUtil.postAjax(environment.questionBankApi + 'system/qkcPaper/saveDefaultCourse', syncParams).subscribe(resT => {\r\n      try {\r\n        const resultT = JSON.parse(resT);\r\n        if (resultT.code === 200) {\r\n          let url: string;\r\n          const str = 'courseCode=' + this.code\r\n            + '&proId=' + codeUid + '&token=' + this.tokenObj.token + '&refreshToken=' + this.tokenObj.refreshToken + '&paperId=';\r\n          if (data.taskType === '7') {\r\n            url = environment.questionBank\r\n              + '#/PaperEvaluation/List?'\r\n              + str;\r\n          } else if (data.taskType === '6') {\r\n            url = environment.questionBank\r\n              + '#/PaperQuestionnaire/List?'\r\n              + str;\r\n          } else {\r\n            url = environment.questionBank\r\n              + '#/paper/createPaper?'\r\n              + str;\r\n          }\r\n          if (data.resourceId) {\r\n            url += data.resourceId.split('-')[1];\r\n          } else {\r\n            url += data.id;\r\n          }\r\n          open(url);\r\n        } else {\r\n          this.nzMesService.error('题库服务异常，设置默认课程失败');\r\n        }\r\n      } catch (e) {\r\n        this.nzMesService.error(resT);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 预览任务\r\n   * @param item HandoutItem\r\n   */\r\n  previewTask(item: HandoutItem) {\r\n    if (item.taskType === '3') {\r\n      this.previewTraining(item);\r\n    } else if (item.taskType === '1') {\r\n      const url = '/m/rm/material-pre-case';\r\n      const tabTitle = `预览案例`;\r\n      this.menuService.gotoUrl({\r\n        url,\r\n        paramUrl: `/${item.resourceId}/104/${item.courseChapterId}`,\r\n        title: tabTitle,\r\n      });\r\n    } else if (item.taskType === '2' || item.taskType === '4' || item.taskType === '6' || item.taskType === '7') {\r\n      this.previewExaminationPaper(item);\r\n    } else {\r\n      this.previewHandout(item);\r\n    }\r\n  }\r\n\r\n\r\n  // 实时记录绑定页码\r\n  modelChangeDetect(current: number) {\r\n    if (typeof current === 'number') {\r\n      this.current = current;\r\n    }\r\n  }\r\n\r\n  stopPropagation(event: MouseEvent) {\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * 设置主讲义关联页码\r\n   * @param item 列表项\r\n   */\r\n  async getBlur(item) {\r\n    this.bindLoading = true;\r\n    if (this.totalPage) {\r\n      const pageNum = this.current || item.pageNum;\r\n      if (this.totalPage < pageNum) {\r\n        this.bindLoading = false;\r\n        timer(0).subscribe(() => {\r\n          item.isBindAssoicate = false;\r\n        });\r\n        this.nzMesService.warning('当前讲义总共 ' + this.totalPage + ' 页,绑定页码超过了主讲义的页数范围!');\r\n        return;\r\n      }\r\n      if (item.paperId) {\r\n        ToolsUtil.getAjax(environment.questionBankApi + 'system/qkcPaper/decidePaper?paperId=' + item.paperId)\r\n          .subscribe(result => {\r\n            try {\r\n              const res = JSON.parse(result);\r\n              if (res.code === 200) {\r\n                if (res.data.decide) {\r\n                  this.nzMesService.warning('包含综合题的作业任务不能绑定到主讲义中');\r\n                  this.bindLoading = false;\r\n                  timer(0).subscribe(() => {\r\n                    item.isBindAssoicate = false;\r\n                  });\r\n                } else {\r\n                  this.boundTask(item);\r\n                }\r\n              } else {\r\n                this.nzMesService.error('题库服务异常，查询任务信息失败');\r\n              }\r\n            } catch (e) {\r\n              this.nzMesService.error(result);\r\n            }\r\n          });\r\n      } else {\r\n        this.boundTask(item);\r\n      }\r\n    } else {\r\n      this.bindLoading = false;\r\n      timer(0).subscribe(() => {\r\n        item.isBindAssoicate = false;\r\n      });\r\n      this.nzMesService.error('该主讲义没有页面，请保证有页面的前提下绑定任务');\r\n    }\r\n  }\r\n\r\n  boundTask(item) {\r\n    const pageNum = this.current || item.pageNum;\r\n    const params: any = {\r\n      courseId: item.courseId,\r\n      coursePacketId: item.coursePacketId,\r\n      courseChapterId: item.courseChapterId,\r\n      courseSectionId: item.courseSectionId,\r\n      courseTaskId: item.id,\r\n      resourceId: this.currentAssocate.id,\r\n      pageNum,\r\n      seq: item.seq,\r\n      id: item.linkId\r\n    };\r\n    this.courseMgService.handoutPageNumberRelatedTasks(params).subscribe(res => {\r\n      this.bindLoading = false;\r\n      if (res.status === 201) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '讲义资料关联更改',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-lecture-action'].modify,\r\n          content: JSON.stringify(params),\r\n        });\r\n        item.linkId = res.data.id;\r\n        item.isBindAssoicate = true;\r\n        const index = this.assocateList.findIndex((e) => {\r\n          return e.id === item.id;\r\n        });\r\n        this.assocateLists[index] = JSON.parse(JSON.stringify(this.assocateList[index]));\r\n        this.currentBindLength = this.assocateList.filter(resP => {\r\n          return resP.isBindAssoicate;\r\n        }).length;\r\n        console.log(this.currentBindLength);\r\n        // this.getssocateList();\r\n      } else {\r\n        timer(0).subscribe(() => {\r\n          item.isBindAssoicate = false;\r\n        });\r\n      }\r\n    }, () => {\r\n      this.bindLoading = false;\r\n      timer(0).subscribe(() => {\r\n        item.isBindAssoicate = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  getApp(fn) {\r\n    if (this.bindLoading) {\r\n      if (!this.totalPage) {\r\n        const wps = this.doc.getElementById('iframePage')['contentWindow'].wps;\r\n        if (wps) {\r\n          fn(wps);\r\n        } else {\r\n          timer(100).subscribe(() => {\r\n            this.getApp(fn);\r\n          });\r\n        }\r\n      } else {\r\n        fn(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 是否绑定主讲义\r\n   * @param flag boolean\r\n   * @param item 列表项\r\n   */\r\n  isBindChange(flag: boolean, item) {\r\n    if (flag) {\r\n      this.getBlur(item);\r\n    } else {\r\n      this.delBind(item);\r\n    }\r\n  }\r\n\r\n  delBind(item) {\r\n    this.knowledgeManageService.delBind(item.linkId).subscribe(res => {\r\n      if (res.status === 204) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '讲义资料关联更改',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-lecture-action'].modify,\r\n          content: JSON.stringify({id: item.linkId}),\r\n        });\r\n        delete item.pageNum;\r\n        delete item.linkId;\r\n        item.isBindAssoicate = false;\r\n        const index = this.assocateList.findIndex((e) => {\r\n          return e.id === item.id;\r\n        });\r\n        this.assocateLists[index] = JSON.parse(JSON.stringify(this.assocateList[index]));\r\n        this.currentBindLength = this.assocateList.filter(resP => {\r\n          return resP.isBindAssoicate;\r\n        }).length;\r\n      } else {\r\n        timer(0).subscribe(() => {\r\n          item.isBindAssoicate = true;\r\n        });\r\n      }\r\n    }, err => {\r\n      timer(0).subscribe(() => {\r\n        item.isBindAssoicate = true;\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  completebind() {\r\n    this.visibleAssociate = false;\r\n    this.totalPage = 0;\r\n    this.wps.iframe.parentNode.parentNode.removeChild(this.wps.iframe.parentNode);\r\n    this.stack.End();\r\n    this.wpsApplication = null;\r\n    this.wps.destroy();\r\n    this.wps = null;\r\n    this.getTaskList();\r\n  }\r\n\r\n  getText(type) {\r\n    switch (String(type)) {\r\n      case '0':\r\n        return '读';\r\n      case '1':\r\n        return '例';\r\n      case '2':\r\n        return '作';\r\n      case '3':\r\n        return '训';\r\n      case '4':\r\n        return '考';\r\n      case '5':\r\n        return '战';\r\n      case '6':\r\n        return '问';\r\n      case '7':\r\n        return '测';\r\n    }\r\n  }\r\n\r\n  getColor(taskType: any) {\r\n    switch (taskType) {\r\n      case '0':\r\n        return '#f0a14d';\r\n      case '1':\r\n        return '#35ad8e';\r\n      case '2':\r\n        return '#b27fd7';\r\n      case '3':\r\n        return '#ecc13a';\r\n      case '4':\r\n        return '#33ade7';\r\n      case '5':\r\n        return '#5f88f2';\r\n      case '6':\r\n        return '#40a9ff';\r\n      case '7':\r\n        return '#567180';\r\n    }\r\n  }\r\n\r\n  getFormingMethod(type) {\r\n    switch (type) {\r\n      case 1:\r\n        return '选题组卷/录题组卷';\r\n      case 2:\r\n        return '题型难度随机组卷';\r\n      case 3:\r\n        return '知识点难度抽题组卷';\r\n    }\r\n  }\r\n\r\n// 实训预览\r\n  private previewTraining(item: any) {\r\n    this.trainLoading = true;\r\n    this.trainManageService.getAccountPeriodId(item.resourceId).subscribe(res => {\r\n      if (res.status === 200) {\r\n        const params = {\r\n          id: item.resourceId,\r\n          accountId: res.data.accountId,\r\n        };\r\n        const success = (resP: any) => {\r\n          this.trainLoading = false;\r\n          if (resP.status === 200) {\r\n            if (resP.data) {\r\n              window.open(resP.data);\r\n            }\r\n          }\r\n        };\r\n        const error = (err: any) => {\r\n          this.trainLoading = false;\r\n          this.nzMesService.create('error', JSON.stringify(err));\r\n        };\r\n        this.trainManageService.getPracticalDetail(params).subscribe(success, error);\r\n      } else {\r\n        this.trainLoading = false;\r\n      }\r\n    }, err => {\r\n      this.trainLoading = false;\r\n    });\r\n  }\r\n\r\n// 答题次数状态重置\r\n  clearStatus(label: 'examSettingForm' | 'questionnairSettingForm') {\r\n    const {answerTimes} = this[label].controls;\r\n    answerTimes.markAsUntouched();\r\n    answerTimes.markAsPristine();\r\n    answerTimes.updateValueAndValidity();\r\n  }\r\n\r\n// 编辑录播视频信息\r\n  editHandout(item: any) {\r\n    if (item.attachmentExt) {\r\n      item.attachmentName = item.title;\r\n      item.videoUrl = [\r\n        {\r\n          name: item.title,\r\n          title: item.title,\r\n          path: item.attachmentPath,\r\n          videoLength: item.videoLength\r\n        }\r\n      ];\r\n      this.localVideo.patchValue(item);\r\n      this.videoUpload('localVideo', false, item);\r\n    } else {\r\n      item.attachmentName = item.title;\r\n      item.videoUrl = item.attachmentPath;\r\n      this.polyway.patchValue(item);\r\n      this.videoUpload('polyway', false, item);\r\n    }\r\n  }\r\n\r\n  compltedUpload() {\r\n    const {videoUrl} = this.localVideo.value;\r\n    this.localVideo.patchValue({\r\n      attachmentName: videoUrl[0].title.split('.')[0]\r\n    });\r\n  }\r\n\r\n// 本地视频获取视频时长\r\n  private getVideoLength(duration) {\r\n    let videoLength = 0;\r\n    const arr = duration.split(':');\r\n    const hour = Number(arr[0]);\r\n    const minute = Number(arr[1]);\r\n    const second = Number(arr[2]);\r\n    if (hour > 0) {\r\n      videoLength += hour * 60;\r\n    }\r\n    if (minute > 0) {\r\n      videoLength += minute;\r\n    }\r\n    if (second > 0) {\r\n      videoLength += 1;\r\n    }\r\n    return videoLength;\r\n  }\r\n\r\n  paperTypeChange(type: any) {\r\n    if (type === '6' && (this.examType === '3' || this.examType === '2')) {\r\n      this.examSettingForm.patchValue({\r\n        isRedo: '1'\r\n      });\r\n    } else {\r\n      this.examSettingForm.patchValue({\r\n        isRedo: '0'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 调用问卷\r\n   * @param data 列表item\r\n   * @param label 类型\r\n   */\r\n  async transferQuestionnaire(data: WjCallItem, label: 'evaluationType' | 'questionnaireType') {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    this.isCallLoading = true;\r\n    const param: any = {\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      courseChapterId: this.curNode.data.courseChapterId,\r\n      courseSectionId: this.curNode.data.id,\r\n      status: 1, // 状态：有效(1)、失效(0)\r\n      seq: ToolsUtil.getMaxSeq(this.taskList),\r\n      attachmentPath: environment.questionBank +\r\n        (label === 'evaluationType' ? '#/PaperEvaluation/List' : '#/PaperQuestionnaire/List')\r\n        + '?proId=' + codeUid + '&courseCode=' + this.code, // 附件路径\r\n      name: data.name,\r\n      attachmentName: data.name,\r\n      resourceId: data.paperUuid + '-' + data.paperId,\r\n      taskType: label === 'evaluationType' ? 7 : 6,\r\n      answerTimes: 1\r\n    };\r\n\r\n\r\n    this.courseMgService.newTestPaper(param).subscribe(resul => {\r\n      this.statisticsLogService.statisticsPacketInfoLog({\r\n        name: label === 'evaluationType' ? '调用测评' : '调用问卷',\r\n        actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].addCode,\r\n        content: JSON.stringify(param),\r\n      });\r\n      if (resul.status === 201) {\r\n        this.getTaskList();\r\n      }\r\n    }, () => {\r\n      this.isCallLoading = false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 预览问卷\r\n   * @param data HandoutItem\r\n   */\r\n  async previewExaminationQuestionnaire(data: WjCallItem) {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    const str = '&token=' + this.tokenObj.token + '&refreshToken=' + this.tokenObj.refreshToken\r\n      + '&proId=' + codeUid + '&courseCode=' + this.code;\r\n    open(environment.questionBank + '#/paper/previewPaper?paperId=' + data.paperId + str);\r\n  }\r\n\r\n  /**\r\n   * 问卷测评查询\r\n   * @param label 问卷/测评\r\n   */\r\n  async questionnaireCall(label: 'evaluationType' | 'questionnaireType') {\r\n    const {evaluationType, questionnaireType, evaluationName, questionnaireName, orgCode, code} = this;\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    ToolsUtil.getAjax(environment.questionBankApi + 'system/qkcPaper/evaluateQuestionnaireList', {\r\n      proId: codeUid,\r\n      typeId: label === 'evaluationType' ? 3 : 4,\r\n      evaluateId: label === 'evaluationType' ?\r\n        evaluationType ? evaluationType : undefined : questionnaireType ? questionnaireType : undefined,\r\n      name: label === 'evaluationType' ? evaluationName ? evaluationName : undefined : questionnaireName ? questionnaireName : undefined,\r\n      courseCode: code,\r\n      status: 2,\r\n      pageSize: '10000',\r\n      pageNum: '1',\r\n    }).subscribe(res => {\r\n      try {\r\n        const result = JSON.parse(res);\r\n        if (result.code === 200) {\r\n          if (label === 'evaluationType') {\r\n            this.listOfEvaluationData = result.data.rows;\r\n            this.evaluationPreview = true;\r\n          } else {\r\n            this.listOfQuestionnaireData = result.data.rows;\r\n            this.questionnairePreview = true;\r\n          }\r\n        } else {\r\n          this.nzMesService.error(result.message);\r\n        }\r\n      } catch (e) {\r\n        this.nzMesService.error('题库服务异常');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getEvaluationType(evaluateId: '1' | '2') {\r\n    switch (evaluateId) {\r\n      case '1':\r\n        return '招生测评';\r\n      case '2':\r\n        return '入学测评';\r\n    }\r\n  }\r\n\r\n\r\n  getQuestionnaireType(evaluateId: '1' | '2') {\r\n    switch (evaluateId) {\r\n      case '1':\r\n        return '总部测评';\r\n      case '2':\r\n        return '校区测评';\r\n    }\r\n  }\r\n\r\n  getEvaluationStatus(status: 1 | 2 | 3 | 4) {\r\n    switch (status) {\r\n      case 1:\r\n        return '未发布';\r\n      case 2:\r\n        return '已发布';\r\n      case 3:\r\n        return '已过期';\r\n      case 4:\r\n        return '未完成';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 新增问卷测评\r\n   * @param label 类型\r\n   */\r\n  async newQuestionnaire(label: 'evaluationType' | 'questionnaireType') {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    const str = 'token=' + this.tokenObj.token + '&refreshToken=' + this.tokenObj.refreshToken\r\n      + '&proId=' + codeUid + '&courseCode=' + this.code;\r\n    if (label === 'evaluationType') {\r\n      open(environment.questionBank + '#/PaperEvaluation/List?' + str);\r\n    } else {\r\n      open(environment.questionBank + '#/PaperQuestionnaire/List?' + str);\r\n    }\r\n  }\r\n\r\n  closeQuestionnaire(label: 'evaluationType' | 'questionnaireType') {\r\n    if (label === 'evaluationType') {\r\n      this.questionnaireType = '';\r\n      this.questionnaireName = '';\r\n      this.evaluationPreview = false;\r\n    } else {\r\n      this.questionnairePreview = false;\r\n      this.evaluationType = '';\r\n      this.evaluationName = '';\r\n    }\r\n  }\r\n\r\n// 试卷新增缓存子题库模块id\r\n  subQuestionBankChange(checkData: any) {\r\n    if (checkData) {\r\n      LocalStorageUtil.putExamSubquestionbank(checkData);\r\n    }\r\n  }\r\n\r\n// 作业新增缓存子题库模块id\r\n  execrisesSubQuestionBankChange(checkData: any) {\r\n    if (checkData) {\r\n      LocalStorageUtil.putPracSubquestionbank(checkData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 作业/试卷调用获取子题库模块id\r\n   * @param data 子题库选中节点\r\n   * @param label 类型\r\n   */\r\n  subQuestionBankChangeSearch(data, label: 'examSearch' | 'exerciseSearch') {\r\n    const bakLabel = label === 'examSearch' ? 'examSubQuestionBankExamBak' : 'homeworkSubQuestionBankBak';\r\n    this[bakLabel] = [];\r\n    if (data.length) {\r\n      data.forEach(e => {\r\n        if (parseFloat(e).toString() === 'NaN') {\r\n          this[label].every((item) => {\r\n            if (item['code'] === e) {\r\n              // @ts-ignore\r\n              item.children.forEach(child => {\r\n                this[bakLabel].push(child.key);\r\n              });\r\n            } else {\r\n              return true;\r\n            }\r\n          });\r\n        } else {\r\n          this[bakLabel].push(e);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 批量excel导入视频\r\n   */\r\n  importVideo() {\r\n    this.nzModalService.create<VideoImportComponent, NzSafeAny>({\r\n      nzTitle: '导入视频',\r\n      nzContent: VideoImportComponent,\r\n      nzComponentParams: {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n      },\r\n      nzMaskClosable: false,\r\n    }).afterClose\r\n      .subscribe((flag: boolean) => {\r\n        if (flag) {\r\n          this.getHandoutFiles();\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  queryKeywordsChange() {\r\n    Number(this.queryKeywords) === 1 ? this.testPaperName = '' : this.testPaperId = '';\r\n  }\r\n\r\n  queryKeywordsJobChange() {\r\n    Number(this.queryKeywordsJob) === 1 ? this.testExerciseName = '' : this.testExerciseId = '';\r\n  }\r\n\r\n  getExamText(data) {\r\n    if (String(data.taskType) === '4') {\r\n      return this.getExamType(data.paperType || '1');\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  showExamType(item: any) {\r\n    return String(item.taskType) === '4';\r\n  }\r\n\r\n  ShowJobType(item: any) {\r\n    return String(item.taskType) === '2';\r\n  }\r\n\r\n  jobCancel() {\r\n    this.modalRef.destroy();\r\n  }\r\n\r\n  /**\r\n   * 作业考试编辑跳转题库\r\n   * @param label 作业/考试\r\n   */\r\n  jumpQuestionBank(label: 'curJobData' | 'curExamData') {\r\n    this.otherEdit(this[label] as HandoutItem);\r\n  }\r\n\r\n  /**\r\n   * 编辑作业确定\r\n   */\r\n  jobDetermine() {\r\n    Object.keys(this.addJobFromSeting.controls).forEach(key => {\r\n      this.addJobFromSeting.controls[key].markAsDirty();\r\n      this.addJobFromSeting.controls[key].updateValueAndValidity();\r\n    });\r\n    if (this.addJobFromSeting.invalid) {\r\n      return;\r\n    }\r\n    this.realSave({\r\n      id: this.curJobData.id,\r\n      name: this.addJobFromSeting.value.name,\r\n      taskForm: this.addJobFromSeting.value.taskForm\r\n    }).subscribe(param => {\r\n      if (param) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '编辑作业',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n          content: JSON.stringify(param),\r\n        });\r\n        this.modalRef.destroy();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 编辑考试确定\r\n   */\r\n  examDetermine() {\r\n    Object.keys(this.addExamFrom.controls).forEach(key => {\r\n      this.addExamFrom.controls[key].markAsDirty();\r\n      this.addExamFrom.controls[key].updateValueAndValidity();\r\n    });\r\n    if (this.addExamFrom.invalid) {\r\n      return;\r\n    }\r\n    this.realSave({\r\n      id: this.curExamData.id,\r\n      name: this.addExamFrom.value.missionName,\r\n    }).subscribe(param => {\r\n      if (param) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '编辑组卷',\r\n          actionCode: STATISTICALRULES.packetInfo['learnSet-task-action'].modify,\r\n          content: JSON.stringify(param),\r\n        });\r\n        this.modalRef.destroy();\r\n      }\r\n    });\r\n  }\r\n\r\n  closePreview() {\r\n    this.isPreviewpolyway = false;\r\n    this.resourceUrl = '';\r\n    this.previewTitle = '';\r\n    this.previewStart = false;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpService } from './http.service';\r\n// import { UploadFile, UploadXHRArgs } from 'ng-zorro-antd';\r\nimport { Observable } from 'rxjs';\r\nimport { ToolsUtil } from '../utils/tools.util';\r\nimport { HttpRequest, HttpClient, HttpEvent, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\nimport {ServicesModule} from '@app/service/service.module';\r\n\r\n@Injectable({\r\n  providedIn: ServicesModule\r\n})\r\nexport class UploadOssService {\r\n  uploadData: any;\r\n  constructor(private httpService: HttpService, private httpClient: HttpClient) { }\r\n\r\n  uploadOss = (file, uploadDir) => {\r\n    return new Observable<any>(observe => {\r\n      const success = result => {\r\n        if (result.status === 200) {\r\n          this.uploadData = result.data;\r\n          this.customReq(file).subscribe((url) => {\r\n            observe.next(url);\r\n            observe.unsubscribe();\r\n          });\r\n\r\n        } else {\r\n          observe.next(false);\r\n          observe.unsubscribe();\r\n        }\r\n      };\r\n\r\n      const error = err => {\r\n        observe.next(false);\r\n        observe.unsubscribe();\r\n      };\r\n\r\n      this.httpService.post('res/oss/getPolicy', { dir: uploadDir }, {}).subscribe(success, error);\r\n    });\r\n\r\n  }\r\n\r\n  customReq = (file) => {\r\n    const formData = new FormData();\r\n    const key = this.uploadData.dir + ToolsUtil.getRandomFileName() + '.' + ToolsUtil.getFileExt(file.name);\r\n    formData.append('OSSAccessKeyId', this.uploadData.accessKeyId);\r\n    formData.append('policy', this.uploadData.policy);\r\n    formData.append('Signature', this.uploadData.signature);\r\n    formData.append('key', key);\r\n    formData.append('success_action_status', '200');\r\n    formData.append('file', file as any);\r\n    // this.uploadData.host!\r\n    const req = new HttpRequest('POST', environment.OSS_URL, formData, {\r\n      reportProgress: true\r\n    });\r\n\r\n    return new Observable<any>(observe => {\r\n      const success = (event: HttpEvent<any>) => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n\r\n        } else if (event instanceof HttpResponse) {\r\n          // const url = event.url + key;\r\n          observe.next(`/${key}`);\r\n          observe.unsubscribe();\r\n        }\r\n      };\r\n\r\n      const error = () => {\r\n        observe.next(false);\r\n        observe.unsubscribe();\r\n      };\r\n\r\n      this.httpClient.request(req).subscribe(success, error);\r\n    });\r\n  }\r\n}\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NzModalRef, NzModalService} from 'ng-zorro-antd/modal';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {NzUploadXHRArgs} from 'ng-zorro-antd';\r\nimport {Observable, Observer} from 'rxjs';\r\nimport {UploadDir} from 'core/utils/uploadDir';\r\nimport {UploadOssService} from 'core/services/upload-oss.service';\r\nimport {NzUploadFile} from 'ng-zorro-antd/upload/interface';\r\nimport {CompanyItem} from '../other-setting.interface';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {STATISTICALRULES} from 'core/base/static-data';\r\nimport {StatisticsLogService} from '@app/busi-services/statistics-log.service';\r\n\r\n@Component({\r\n  selector: 'app-new-company',\r\n  templateUrl: './new-company.component.html',\r\n  styleUrls: ['./new-company.component.less'],\r\n})\r\nexport class NewCompanyComponent implements OnInit {\r\n  @Input() courseId: string;\r\n  @Input() coursePacketId: string;\r\n  @Input() companyLists: any[];\r\n  @Input() companyItem: CompanyItem;\r\n  newCompanyForm: FormGroup;\r\n  newCompanyLoading = false;\r\n  nzFileList: NzUploadFile[] = [];\r\n  isUsed = SessionStorageUtil.getPacketInfoItem('isUsed');\r\n  private acceptType = ['zip', 'rar'];\r\n\r\n  constructor(\r\n    private nzMesService: NzMessageService,\r\n    private nzModalService: NzModalService,\r\n    private nzModalRef: NzModalRef,\r\n    private fb: FormBuilder,\r\n    private uploadOssService: UploadOssService,\r\n    private courseManageService: CourseManageService,\r\n    private statisticsLogService: StatisticsLogService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    const {companyItem} = this;\r\n    if (companyItem.id) {\r\n      const {name, termType, filePath, fileName, permission} = companyItem;\r\n      const item = {\r\n        name,\r\n        termType,\r\n        filePath,\r\n        permission: permission ? permission.split(',') : []\r\n      };\r\n      this.nzFileList = [{\r\n        ...item, ...{\r\n          uid: ToolsUtil.getRandomFileName(),\r\n          name: fileName\r\n        }\r\n      }];\r\n      this.newCompanyForm = new FormGroup({\r\n        name: new FormControl(\r\n          {\r\n            value: item.name,\r\n            disabled: this.isUsed > 0\r\n          }, [Validators.required, Validators.maxLength(40)]),\r\n        termType: new FormControl(\r\n          {\r\n            value: item.termType,\r\n            disabled: this.isUsed > 0\r\n          }, Validators.required),\r\n        filePath: new FormControl(\r\n          item.filePath, Validators.required),\r\n        permission: new FormControl(\r\n          item.permission, Validators.required),\r\n      });\r\n    } else {\r\n      this.newCompanyForm = this.fb.group({\r\n        name: ['', [Validators.required, Validators.maxLength(40)]],\r\n        termType: [0, [Validators.required]],\r\n        filePath: ['', [Validators.required]],\r\n        permission: [['业务中心', '数字大脑'], [Validators.required]]\r\n      });\r\n    }\r\n  }\r\n\r\n  beforeUpload = (item: NzUploadXHRArgs) => {\r\n    return new Observable((observer: Observer<boolean>) => {\r\n      let pass = true;\r\n      if (item.name.length > 35) {\r\n        this.nzMesService.error('文件名字太长啦，保证包含扩展名35个文字以内');\r\n        pass = false;\r\n      }\r\n      if (this.acceptType.indexOf(ToolsUtil.getExt(item.name)) < 0) {\r\n        this.nzMesService.error('请上传zip或rar压缩类型的文件');\r\n        pass = false;\r\n      }\r\n      if (pass) {\r\n        observer.next(true);\r\n        observer.complete();\r\n      } else {\r\n        observer.next(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  removeFileSelf = (item: NzUploadXHRArgs) => {\r\n    this.nzFileList = [];\r\n    this.newCompanyForm.patchValue({\r\n      filePath: ''\r\n    });\r\n    this.newCompanyForm.controls.filePath.markAsUntouched();\r\n    this.newCompanyForm.controls.filePath.markAsPristine();\r\n    this.newCompanyForm.controls.filePath.updateValueAndValidity();\r\n  };\r\n\r\n  customRewardRequest = (item: NzUploadXHRArgs) => {\r\n    this.newCompanyLoading = true;\r\n    this.uploadOssService\r\n      .uploadOss(item.file, UploadDir.company_file)\r\n      .subscribe((result) => {\r\n        this.newCompanyLoading = false;\r\n        this.newCompanyForm.patchValue({\r\n          filePath: result\r\n        });\r\n        item.onSuccess({...item}, item.file, {});\r\n      }, (err) => {\r\n        this.newCompanyLoading = false;\r\n        item.onError(err, item.file);\r\n        this.nzMesService.error(JSON.stringify(err));\r\n      });\r\n  };\r\n\r\n\r\n  save() {\r\n    for (const i in this.newCompanyForm.controls) {\r\n      if (this.newCompanyForm.controls.hasOwnProperty(i)) {\r\n        this.newCompanyForm.controls[i].markAsDirty();\r\n        this.newCompanyForm.controls[i].updateValueAndValidity();\r\n      }\r\n    }\r\n    if (this.newCompanyForm.invalid) {\r\n      return;\r\n    }\r\n    this.newCompanyLoading = true;\r\n    const seq = this.companyItem?.seq;\r\n    const content = {\r\n      id: this.companyItem?.id,\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      name: this.newCompanyForm.value.name,\r\n      seq: seq ? seq : ToolsUtil.getMaxSeq(this.companyLists),\r\n      filePath: this.newCompanyForm.value.filePath,\r\n      status: 1,\r\n      fileName: this.nzFileList[0].name,\r\n      termType: this.newCompanyForm.value.termType,\r\n      permission: this.newCompanyForm.value.permission.join(','),\r\n    }\r\n    this.courseManageService.addCoursePacketCompany(content).subscribe(res => {\r\n      this.newCompanyLoading = false;\r\n      const edit = !!this.companyItem.id;\r\n      const field = edit ? 'modify' : 'addCode';\r\n      this.statisticsLogService.statisticsPacketInfoLog({\r\n        name: edit ? '修改公司信息' : '新增公司',\r\n        actionCode: STATISTICALRULES.packetInfo['otherSet-99train-action'][field],\r\n        content: JSON.stringify(content),\r\n      });\r\n      if (res.status === 201) {\r\n        this.nzModalRef.close(true);\r\n      }\r\n    }, () => {\r\n      this.newCompanyLoading = false;\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.nzModalRef.close(false);\r\n  }\r\n\r\n  getNameLength() {\r\n    const {name} = this.newCompanyForm.controls;\r\n    return typeof name === 'string' ? (name as string).length : name.value.length;\r\n  }\r\n}\r\n\r\n","<nz-spin [nzSpinning]=\"newCompanyLoading\"\r\n         [nzDelay]=\"0\">\r\n  <form nz-form [formGroup]=\"newCompanyForm\">\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>公司名称</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"nameTpl\">\r\n        <input nz-input placeholder=\"请输入公司名称\" formControlName=\"name\"/>\r\n      </nz-form-control>\r\n      <span style=\"margin-left: 10px;\"\r\n            [style.color]='newCompanyForm.controls.name.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{getNameLength() }}/40</span>\r\n      <ng-template #nameTpl let-control>\r\n        <div\r\n          *ngIf=\"control.hasError('required')\">公司名称不能为空\r\n        </div>\r\n        <div\r\n          *ngIf=\"control.hasError('maxlength')\">公司名称不能超过40个字符\r\n        </div>\r\n      </ng-template>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>有效期限</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"有效期限不能为空\">\r\n        <nz-select formControlName=\"termType\" style='flex:1' [nzShowSearch]='true'>\r\n          <nz-option [nzValue]=\"0\" nzLabel=\"半年\"></nz-option>\r\n          <nz-option [nzValue]=\"1\" nzLabel=\"1年\"></nz-option>\r\n          <nz-option [nzValue]=\"2\" nzLabel=\"2年\"></nz-option>\r\n          <nz-option [nzValue]=\"3\" nzLabel=\"3年\"></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>权限设置</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"权限设置不能为空\">\r\n        <nz-select formControlName=\"permission\" style='flex:1' [nzShowSearch]='true' nzMode=\"multiple\">\r\n          <nz-option nzValue=\"业务中心\" nzLabel=\"业务中心\"></nz-option>\r\n          <nz-option nzValue=\"数字大脑\" nzLabel=\"数字大脑\"></nz-option>\r\n          <nz-option nzValue=\"财务中心\" nzLabel=\"财务中心\"></nz-option>\r\n        </nz-select>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n    <nz-form-item>\r\n      <nz-form-label [nzSpan]=\"5\" nzRequired>上传数据包</nz-form-label>\r\n      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"数据包不能为空\">\r\n        <input type='hidden' formControlName=\"filePath\"/>\r\n        <nz-upload\r\n          [nzBeforeUpload]='beforeUpload'\r\n          [nzCustomRequest]=\"customRewardRequest\"\r\n          [nzRemove]='removeFileSelf'\r\n          [(nzFileList)]='nzFileList'\r\n          [nzShowUploadList]=' { showPreviewIcon: false, showRemoveIcon: true, showDownloadIcon: false }'\r\n        >\r\n          <button nz-button [disabled]='newCompanyForm.value.filePath?true:null'>\r\n            <i nz-icon nzType=\"upload\" style='font-size:20px;'></i>本地上传\r\n          </button>\r\n          <div *ngIf='!newCompanyForm.value.filePath'>\r\n            支持zip、rar格式\r\n          </div>\r\n        </nz-upload>\r\n      </nz-form-control>\r\n    </nz-form-item>\r\n  </form>\r\n  <div *nzModalFooter>\r\n    <button nz-button (click)=\"cancel()\">取消</button>\r\n    <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"newCompanyLoading\">确定</button>\r\n  </div>\r\n</nz-spin>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  forwardRef,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Output,\r\n  Input,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\r\nimport {NzTreeNodeOptions} from 'ng-zorro-antd/tree';\r\n\r\n@Component({\r\n  selector: 'app-school-zone',\r\n  templateUrl: './school-zone.component.html',\r\n  styleUrls: ['./school-zone.component.less'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => SchoolZoneComponent),\r\n      multi: true\r\n    }\r\n  ],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SchoolZoneComponent implements OnInit, ControlValueAccessor {\r\n  opts: NzTreeNodeOptions[] = [];\r\n  selectedValues: string[] = [];\r\n  expandKeys: string [] = [];\r\n  @Input() checkAll = {\r\n    flag: false\r\n  };\r\n  @Output() schoolZone = new EventEmitter<any>();\r\n  private dataLength = 0;\r\n  private dataPLength = 0;\r\n\r\n\r\n  constructor(\r\n    private cdr: ChangeDetectorRef,\r\n    private courseMgService: CourseManageService,\r\n    private nzMsg: NzMessageService) {\r\n  }\r\n\r\n  private onModelChange = (_: any) => {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.collegeList();\r\n  }\r\n\r\n  writeValue(values: string[]): void {\r\n    this.selectedValues = values;\r\n    this.setExpandKeys();\r\n    this.detectChange();\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onModelChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n  }\r\n\r\n  setDisabledState?(isDisabled: boolean): void {\r\n\r\n  }\r\n\r\n  collegeList() {\r\n    this.courseMgService.collegeList('area').subscribe(res => {\r\n      if (res.status !== 200) {\r\n        this.nzMsg.error(res.message);\r\n        return;\r\n      }\r\n      this.opts = this.formatOpts(res.data).filter(e => e.children.length);\r\n      this.dataLength = 0;\r\n      this.dataPLength = this.opts.length;\r\n      this.opts.forEach(item => {\r\n        if (item.children && item.children.length) {\r\n          this.dataLength += item.children.length;\r\n        }\r\n      });\r\n      const {opts, dataLength, dataPLength} = this;\r\n      this.schoolZone.emit({opts, dataLength, dataPLength});\r\n      this.setExpandKeys();\r\n      this.detectChange();\r\n    }, err => {\r\n      this.nzMsg.error(JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n  formatOpts(data: any[]) {\r\n    const formatChildren = (children: any[]) => {\r\n      if (!children || children.length === 0) {\r\n        return [];\r\n      } else {\r\n        return children.map(school => {\r\n          return {\r\n            key: school.oCode,\r\n            value: school.oCode,\r\n            title: school.orgName,\r\n            isLeaf: true\r\n          };\r\n        });\r\n      }\r\n    };\r\n    return data.map(area => {\r\n      return {\r\n        key: 'AREA_' + area.typeCode,\r\n        value: area.typeCode,\r\n        title: area.typeName,\r\n        children: formatChildren(area.chlidren)\r\n      };\r\n    });\r\n  }\r\n\r\n  selectedChange(values: any[]) {\r\n    const flag = values.every((value, i) => {\r\n      if (value.indexOf('AREA_') < 0) {\r\n        return true;\r\n      }\r\n    });\r\n    if (flag) {\r\n      if (this.dataLength === values.length) {\r\n        this.checkAll.flag = true;\r\n      } else {\r\n        this.checkAll.flag = false;\r\n      }\r\n    } else {\r\n      if (this.dataPLength === values.length) {\r\n        this.checkAll.flag = true;\r\n      } else {\r\n        this.checkAll.flag = false;\r\n      }\r\n    }\r\n    this.setModalChange(values, false);\r\n  }\r\n\r\n  setExpandKeys() {\r\n    if (!this.selectedValues) {\r\n      return;\r\n    }\r\n    if (this.opts.length === 0 || this.selectedValues.length === 0) {\r\n      return;\r\n    }\r\n    const tmpSelectedValues = [...this.selectedValues];\r\n    const tmpExpandedkeys = [];\r\n    for (const node of this.opts) {\r\n      if (node.children.length === 0) {\r\n        continue;\r\n      }\r\n      for (const childNode of node.children) {\r\n        if (tmpSelectedValues.length === 0) {\r\n          this.expandKeys = Array.from(new Set(tmpExpandedkeys));\r\n          return;\r\n        }\r\n        const idx = tmpSelectedValues.findIndex(key => key === childNode.key);\r\n        if (idx !== -1) {\r\n          tmpExpandedkeys.push(node.key);\r\n          tmpSelectedValues.splice(idx, 1);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  checkAllStatus(checkAll: boolean) {\r\n    if (checkAll) {\r\n      const list = [];\r\n      this.opts.map(item => {\r\n        if (item.children && item.children.length > 0) {\r\n          item.children.map(it => {\r\n            list.push(it.key);\r\n          });\r\n        }\r\n      });\r\n      this.selectedValues = list;\r\n\r\n      this.setModalChange(list, true);\r\n    } else {\r\n      this.selectedValues = [];\r\n      this.setModalChange([], true);\r\n    }\r\n  }\r\n\r\n  setModalChange(values: string[], checkAll: boolean) {\r\n    if (checkAll) {\r\n      this.onModelChange(values);\r\n    } else {\r\n      const selectedValues = values.reduce((pre, cur) => {\r\n        if (cur.startsWith('AREA_')) {\r\n          const schools = this.opts.find(item => item.key === cur).children;\r\n          const schoolKeys = schools.map(school => school.key);\r\n          Array.prototype.push.apply(pre, schoolKeys);\r\n        } else {\r\n          pre.push(cur);\r\n        }\r\n        return pre;\r\n      }, []);\r\n      this.onModelChange(selectedValues);\r\n    }\r\n  }\r\n\r\n  detectChange() {\r\n    this.cdr.markForCheck();\r\n  }\r\n\r\n}\r\n","<nz-tree-select\r\n  style=\"width: 80%\"\r\n  [(ngModel)]=\"selectedValues\"\r\n  [nzNodes]=\"opts\"\r\n  [nzExpandedKeys]=\"expandKeys\"\r\n  nzShowSearch\r\n  nzCheckable\r\n  [nzMultiple]=\"true\"\r\n  [nzMaxTagCount]=\"10\"\r\n  [nzMaxTagPlaceholder]=\"omittedPlaceHolder\"\r\n  [nzDropdownStyle]=\"{'max-height': '400px'}\"\r\n  (ngModelChange)=\"selectedChange($event)\"\r\n  [nzHideUnMatched]='true'\r\n>\r\n</nz-tree-select>\r\n<label nz-checkbox [(ngModel)]=\"checkAll.flag\" (ngModelChange)=\"checkAllStatus($event)\"\r\n       style=\"margin-left: 10px;\">全选</label>\r\n<ng-template #omittedPlaceHolder let-omittedValues> 还有 {{ omittedValues.length }} 个校区/大区...</ng-template>\r\n","import {Component, Inject, Input, LOCALE_ID, OnInit, Renderer2,} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NzModalRef, NzModalService} from 'ng-zorro-antd/modal';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {MenuService} from 'core/services/menu.service';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {AliOssService} from 'core/services/ali-oss.service';\r\nimport {FormBuilder} from '@angular/forms';\r\nimport {KnowledgeManageService} from 'src/app/busi-services/knowledge-manag.service';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {NzUploadXHRArgs} from 'ng-zorro-antd';\r\nimport {TrainManageService} from '@app/busi-services/train-manage.service';\r\nimport {WINDOW} from '@app/service/service.module';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {UploadDir} from 'core/utils/uploadDir';\r\nimport {UploadOssService} from 'core/services/upload-oss.service';\r\nimport {NzUploadFile} from 'ng-zorro-antd/upload/interface';\r\nimport {Json} from 'core/base/common';\r\nimport {Observable, Observer} from 'rxjs';\r\nimport {STATISTICALRULES} from 'core/base/static-data';\r\nimport {StatisticsLogService} from '@app/busi-services/statistics-log.service';\r\n\r\n@Component({\r\n  selector: 'app-reward-settings',\r\n  templateUrl: './reward-settings.component.html',\r\n  styleUrls: ['./reward-settings.component.less'],\r\n})\r\nexport class RewardSettingsComponent implements OnInit {\r\n  private limitTask = 10000;\r\n  @Input() courseId: string;\r\n  @Input() professionId: string;\r\n  @Input() coursePacketId: string;\r\n  @Input() currentCard: Json;\r\n  rewardSettingsLoading = false;\r\n  nzFileList: NzUploadFile[] = [];\r\n  nzFileListBak: NzUploadFile[] = [];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private menuService: MenuService,\r\n    private nzMesService: NzMessageService,\r\n    private courseMgService: CourseManageService,\r\n    private nzModalService: NzModalService,\r\n    private nzModalRef: NzModalRef,\r\n    private aliOssService: AliOssService,\r\n    private fb: FormBuilder,\r\n    private modalService: NzModalService,\r\n    private knowledgeManageService: KnowledgeManageService,\r\n    private renderer2: Renderer2,\r\n    private trainManageService: TrainManageService,\r\n    private sanitizer: DomSanitizer,\r\n    private uploadOssService: UploadOssService,\r\n    private statisticsLogService: StatisticsLogService,\r\n    @Inject(LOCALE_ID) public locale: string,\r\n    @Inject(WINDOW) public win: any,\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.nzFileList = this.currentCard.coursePacketCardRecourseList || [];\r\n    this.nzFileListBak = JSON.parse(JSON.stringify(this.nzFileList));\r\n  }\r\n\r\n  beforeUpload = (item: NzUploadXHRArgs) => {\r\n    return new Observable((observer: Observer<boolean>) => {\r\n      if (item.name.length > 35) {\r\n        this.nzMesService.error('文件名字太长啦，保证包含扩展名35个文字以内');\r\n        observer.next(false);\r\n        observer.complete();\r\n        return;\r\n      }\r\n      if ('jpg,jpeg,png,doc,docx,xls,xlsx,ppt,pptx,pdf,mp4'.indexOf(ToolsUtil.getExt(item.name)) < 0) {\r\n        this.nzMesService.error('请上传后缀名为jpg,jpeg,png,doc,docx,xls,xlsx,ppt,pptx,pdf,mp4类型的文件！');\r\n        observer.next(false);\r\n        observer.complete();\r\n        return;\r\n      }\r\n      observer.next(true);\r\n      observer.complete();\r\n    });\r\n  };\r\n\r\n  customRewardRequest = (item: NzUploadXHRArgs) => {\r\n    this.rewardSettingsLoading = true;\r\n    this.uploadOssService\r\n      .uploadOss(item.file, UploadDir.reward_file)\r\n      .subscribe((result) => {\r\n        this.rewardSettingsLoading = false;\r\n        item.file.url = result;\r\n        item.onSuccess({...item}, item.file, {});\r\n      }, (err) => {\r\n        this.rewardSettingsLoading = false;\r\n        item.onError(err, item.file);\r\n        this.nzMesService.error(JSON.stringify(err));\r\n      });\r\n  };\r\n\r\n  resourceCall() {\r\n    SessionStorageUtil.putScpResourceMaterial({\r\n      type: 'scp-section-handout',\r\n      professionId: this.professionId,\r\n      sectionInfo: {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        coursePacketCardId: this.currentCard.id\r\n      },\r\n      seq: ToolsUtil.getMaxSeq(this.nzFileList),\r\n      nodes: this.nzFileList ? this.nzFileList.map(el => {\r\n        return {\r\n          taskId: el.id,\r\n          id: el.resourceId,\r\n        };\r\n      }) : [],\r\n      isStandard: '',\r\n      limit: this.limitTask\r\n    });\r\n    SessionStorageUtil.removeReadtree();\r\n    this.nzModalRef.close(true);\r\n    this.menuService.gotoUrl({\r\n      url: '/m/rm/read',\r\n      paramUrl: `?from=scp&task=2&reward=1`\r\n    });\r\n  }\r\n\r\n  diffFileChange(nzFileList, nzFileListBak) {\r\n    if (this.nzFileList.length !== this.nzFileListBak.length) {\r\n      return true;\r\n    } else {\r\n      if (this.nzFileList.length) {\r\n        if (this.nzFileList.filter(e => e.id).length !== this.nzFileList.length) {\r\n          return true;\r\n        }\r\n        // const ids = this.nzFileListBak.map(i => i.id);\r\n        // return !(this.nzFileList.every(item => {\r\n        //   if (ids.indexOf(item.id) > -1) {\r\n        //     return true;\r\n        //   }\r\n        // }));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  save() {\r\n    if (!this.nzFileList.length) {\r\n      this.nzMesService.warning('请先上传文件');\r\n      return;\r\n    }\r\n    this.rewardSettingsLoading = true;\r\n    const params = [];\r\n    this.nzFileList.forEach((itemP, iP) => {\r\n      const param: any = {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        coursePacketCardId: this.currentCard.id,\r\n        seq: iP,\r\n        id: itemP.id\r\n      };\r\n      if (itemP.originFileObj) {\r\n        param.attachmentPath = itemP.originFileObj['url'];\r\n      }\r\n      if (itemP.originFileObj) {\r\n        param.title = itemP.originFileObj.name;\r\n      }\r\n      params.push(param);\r\n    });\r\n    this.courseMgService.levelInformationBatchUpload(params).subscribe(res => {\r\n      this.rewardSettingsLoading = false;\r\n      if (res.status === 201) {\r\n        if (this.diffFileChange(this.nzFileList, this.nzFileListBak)) {\r\n          this.statisticsLogService.statisticsPacketInfoLog({\r\n            name: '关卡奖励设置本地上传',\r\n            actionCode: STATISTICALRULES.packetInfo['otherSet-levelthrough-action'].modify,\r\n            content: JSON.stringify(params),\r\n          });\r\n        }\r\n        this.nzModalRef.close(true);\r\n      } else {\r\n        if (res.status === 500) {\r\n          this.nzMesService.warning(res.message);\r\n        }\r\n      }\r\n    }, () => {\r\n      this.rewardSettingsLoading = false;\r\n    });\r\n  }\r\n\r\n\r\n  cancel() {\r\n    this.nzModalRef.close(false);\r\n  }\r\n\r\n}\r\n\r\n","<nz-spin [nzSpinning]=\"rewardSettingsLoading\"\r\n         [nzDelay]=\"0\">\r\n  <span style='max-width:100px;margin-right:16px;'>本地上传：</span>\r\n  <nz-upload\r\n    nzMultiple\r\n    [nzBeforeUpload]='beforeUpload'\r\n    [nzShowUploadList]=' { showPreviewIcon: true, showRemoveIcon: false, showDownloadIcon: false }'\r\n    [(nzFileList)]=\"nzFileList\"\r\n    [nzCustomRequest]=\"customRewardRequest\"\r\n  >\r\n    <button nz-button style='margin-bottom: 20px;'>\r\n      <i nz-icon nzType=\"upload\" style='font-size:20px;'></i>上传文件\r\n    </button>\r\n  </nz-upload>\r\n  <button nz-button style='position:absolute;left:220px;top:0;'  (click)='resourceCall()'>\r\n    资源调用\r\n  </button>\r\n</nz-spin>\r\n<div *nzModalFooter>\r\n  <button nz-button (click)=\"cancel()\">取消</button>\r\n  <button nz-button nzType=\"primary\" (click)=\"save()\" [nzLoading]=\"rewardSettingsLoading\" >确定</button>\r\n</div>\r\n","import {Component, EventEmitter, Input, OnDestroy, OnInit} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NzModalRef, NzModalService} from 'ng-zorro-antd/modal';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {spaceValidator} from '@app/shared/validators/atr-validtors';\r\nimport {LessonsItemOption} from '../other-setting.interface';\r\nimport {StatisticsLogService} from '@app/busi-services/statistics-log.service';\r\nimport {STATISTICALRULES} from 'core/base/static-data';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-lesson',\r\n  templateUrl: './edit-lesson.component.html',\r\n  styleUrls: ['./edit-lesson.component.less'],\r\n})\r\nexport class EditLessonComponent implements OnInit {\r\n  @Input() data: LessonsItemOption = {};\r\n  courseForm: FormGroup;\r\n  editLessonLoading = false;\r\n\r\n\r\n  constructor(\r\n    private nzMesService: NzMessageService,\r\n    private nzModalService: NzModalService,\r\n    private nzModalRef: NzModalRef,\r\n    private fb: FormBuilder,\r\n    private courseManageService: CourseManageService,\r\n    private statisticsLogService: StatisticsLogService,\r\n  ) {\r\n    this.courseForm = this.fb.group({\r\n      name: ['', [Validators.required, spaceValidator(), Validators.maxLength(25)]]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.courseForm.patchValue({\r\n      name: this.data.name\r\n    });\r\n\r\n  }\r\n\r\n\r\n  save() {\r\n    for (const i in this.courseForm.controls) {\r\n      if (this.courseForm.controls.hasOwnProperty(i)) {\r\n        this.courseForm.controls[i].markAsDirty();\r\n        this.courseForm.controls[i].updateValueAndValidity();\r\n      }\r\n    }\r\n    if (this.courseForm.invalid) {\r\n      return;\r\n    }\r\n    this.editLessonLoading = true;\r\n    const {\r\n      id, courseId, coursePacketId, seq\r\n    }\r\n      = this.data;\r\n    const params = {\r\n      id,\r\n      name: this.courseForm.value.name,\r\n      courseId,\r\n      coursePacketId,\r\n      seq\r\n    };\r\n    this.courseManageService.saveTable(params).subscribe(data => {\r\n      this.editLessonLoading = false;\r\n      if (data.status === 201) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '编辑课次',\r\n          actionCode: STATISTICALRULES.packetInfo['otherSet-lessons-action'].modify,\r\n          content: JSON.stringify(params),\r\n        });\r\n        this.nzModalRef.close(true);\r\n      }\r\n    }, () => {\r\n      this.editLessonLoading = false;\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.nzModalRef.close(false);\r\n  }\r\n\r\n}\r\n\r\n","<nz-spin [nzSpinning]=\"editLessonLoading\"\r\n         [nzDelay]=\"0\">\r\n<form nz-form [formGroup]=\"courseForm\">\r\n  <nz-form-item>\r\n    <nz-form-label [nzSpan]=\"5\" nzRequired>课次名称</nz-form-label>\r\n    <nz-form-control [nzSpan]=\"18\" nzHasFeedback [nzErrorTip]=\"nameTpl\">\r\n      <input nz-input type=\"text\" formControlName=\"name\" placeholder=\"请输入\" (keyup.enter)=\"save()\"/>\r\n    </nz-form-control>\r\n    <span style=\"margin-left: 10px;margin-top: 5px;display: inline-block;\"\r\n          [style.color]='courseForm.controls.name.hasError(\"maxlength\")?\"red\":\"inherit\"'>\r\n          {{courseForm.value.name.length}}/25</span>\r\n    <ng-template #nameTpl let-control>\r\n      <div *ngIf=\"control.hasError('required')\">课次名称不能为空\r\n      </div>\r\n      <div *ngIf=\"control.hasError('maxlength')\">课次名称不能超过25个字符</div>\r\n    </ng-template>\r\n  </nz-form-item>\r\n</form>\r\n<div *nzModalFooter>\r\n  <button nz-button (click)=\"cancel()\">取消</button>\r\n  <button nz-button nzType=\"primary\" [nzLoading]=\"editLessonLoading\" (click)=\"save()\">确定</button>\r\n</div>\r\n</nz-spin>\r\n","import {Component, OnInit, Input} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {NzModalRef} from 'ng-zorro-antd/modal';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {repeatName, spaceValidator} from 'src/app/shared/validators/atr-validtors';\r\n\r\n@Component({\r\n  selector: 'app-structure-adjustment-section',\r\n  templateUrl: './structure-adjustment-section.component.html',\r\n  styleUrls: ['./structure-adjustment-section.component.less']\r\n})\r\nexport class StructureAdjustmentSectionComponent implements OnInit {\r\n  formGroup: FormGroup;\r\n  loading = false;\r\n  @Input() data: any;\r\n  @Input() formData: any;\r\n  @Input() courseId: string;\r\n  @Input() coursePacketId: string;\r\n  private lock = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private courseMgService: CourseManageService,\r\n    private nzModalRef: NzModalRef) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = this.fb.group({\r\n      name: [this.formData ? this.formData.name : '',\r\n        [Validators.required, Validators.maxLength(60), repeatName(this.data.children), spaceValidator()]]\r\n    });\r\n  }\r\n\r\n  getSeq(arr) {\r\n    let maxSeq = 0;\r\n    arr.forEach((item) => {\r\n      if (item.seq > maxSeq) {\r\n        maxSeq = item.seq;\r\n      }\r\n    });\r\n    maxSeq += 1;\r\n    return maxSeq;\r\n  }\r\n\r\n  save() {\r\n    if (!this.lock) {\r\n      Object.keys(this.formGroup.controls).forEach(key => {\r\n        this.formGroup.controls[key].markAsDirty();\r\n        this.formGroup.controls[key].updateValueAndValidity();\r\n      });\r\n      if (this.formGroup.invalid) {\r\n        return;\r\n      }\r\n      this.lock = true;\r\n      const sectionId = this.formData ? this.formData.id : '';\r\n      const sectionSeq = (this.formData && this.formData.seq) ?\r\n        this.formData.seq : (this.data.children.length ? this.getSeq(this.data.children) : 1);\r\n      const postData = {\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId,\r\n        chapters: [\r\n          {\r\n            id: this.data.id,\r\n            name: this.data.name,\r\n            seq: this.data.seq,\r\n            sections: [\r\n              {\r\n                id: sectionId,\r\n                name: this.formGroup.value.name,\r\n                seq: sectionSeq,\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      this.loading = true;\r\n      this.courseMgService.save_courseChapter(postData).subscribe(res => {\r\n        this.lock = false;\r\n        this.loading = false;\r\n        if (res.status !== 200) {\r\n          return;\r\n        }\r\n        this.nzModalRef.close(res.data);\r\n      }, () => this.lock = false);\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.nzModalRef.close(null);\r\n  }\r\n\r\n}\r\n","<form nz-form [formGroup]=\"formGroup\">\r\n  <nz-form-item>\r\n    <nz-form-label [nzSm]=\"6\" [nzXs]=\"24\" nzRequired>本节名称</nz-form-label>\r\n    <nz-form-control [nzSm]=\"16\" [nzXs]=\"24\" [nzErrorTip]=\"errNameTipsTpl\">\r\n      <input nz-input formControlName=\"name\" placeholder=\"请输入节名称，60字以内\" />\r\n      <ng-template #errNameTipsTpl let-control>\r\n        <ng-container *ngIf=\"control.hasError('required')\">\r\n          请输入节名称\r\n        </ng-container>\r\n        <ng-container *ngIf=\"control.hasError('maxlength')\">\r\n          名称60字以内\r\n        </ng-container>\r\n        <ng-container *ngIf=\"control.hasError('repeatName')\">\r\n          重复名称\r\n        </ng-container>\r\n      </ng-template>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n  <nz-form-item>\r\n    <nz-form-control [nzXs]=\"{ span: 24, offset: 0 }\" [nzSm]=\"{ span: 16, offset: 8 }\">\r\n      <button nz-button nzType=\"primary\" [nzLoading]=\"loading\" (click)=\"save()\">保存</button>\r\n      <button nz-button nzType=\"default\" style=\"margin-left: 20px;\" (click)=\"cancel()\">取消</button>\r\n    </nz-form-control>\r\n  </nz-form-item>\r\n</form>\r\n","<div style=\"margin-bottom: 15px;\" *ngIf=\"emptyChapter.length!==0\">\r\n  <ng-container *ngFor=\"let item of emptyChapter;let i=index;\">\r\n    <nz-alert\r\n      nzType=\"warning\"\r\n      nzMessage=\"{{ item + '没有节,请立即添加!' }}\">\r\n    </nz-alert>\r\n  </ng-container>\r\n</div>\r\n\r\n<nz-spin [nzSpinning]=\"isLoading\" [nzDelay]=\"0\">\r\n  <nz-tree\r\n    #treeVar\r\n    class=\"has-bg-tree\"\r\n    [nzData]=\"nodes\"\r\n    nzAsyncData\r\n    [nzExpandedKeys]=\"expandedKeys\"\r\n    [nzTreeTemplate]=\"nzTreeTemplate\"\r\n    [nzDraggable]=\"isDraggable\"\r\n    [nzBeforeDrop]=\"beforeDrop\"\r\n    (nzExpandChange)=\"nzEvent($event)\"\r\n    (nzOnDragEnd)=\"nzEvent($event)\"\r\n    (nzClick)=\"nzEvent($event)\">\r\n  </nz-tree>\r\n  <br />\r\n  <qkc-profession-label-add\r\n    *ngIf=\"!isStandard\"\r\n    title=\"+新增\"\r\n    [notPermitedShow]=\"isAddModel\"\r\n    [placeholder]=\"'请输入章名称'\"\r\n    (showChange)=\"prefessionLabelShowChange($event)\"\r\n    (addChange)=\"addChapter($event)\">\r\n  </qkc-profession-label-add>\r\n\r\n</nz-spin>\r\n\r\n<ng-template #nzTreeTemplate let-node>\r\n  <span class=\"custom-node\" draggable>\r\n    <span class=\"title\">\r\n      <ng-container\r\n        *ngTemplateOutlet=\"inputTpl; context: { $implicit:node }\">\r\n      </ng-container>\r\n    </span>\r\n\r\n    <span class=\"icon-container\">\r\n      <span class=\"icon-row\"\r\n        *ngIf=\"!node.origin.isEdit && !isStandard\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"iconTpl; context: { $implicit: node }\">\r\n        </ng-container>\r\n      </span>\r\n\r\n      <span class=\"icon-row\"\r\n        *ngIf=\"node.origin.isEdit\">\r\n        <ng-container\r\n          *ngTemplateOutlet=\"editTpl; context: { $implicit:node }\">\r\n        </ng-container>\r\n      </span>\r\n    </span>\r\n  </span>\r\n</ng-template>\r\n\r\n<ng-template #inputTpl let-node>\r\n  <span *ngIf=\"!node.origin.isEdit\">{{ node.title }}</span>\r\n  <input\r\n    *ngIf=\"node.origin.isEdit\"\r\n    nz-input\r\n    nzSize=\"small\"\r\n    class=\"input-edit\"\r\n    placeholder=\"请输入节名称\"\r\n    [(ngModel)]=\"node.origin.editTitle\"\r\n    (keyup.enter)=\"confirmEdit(node)\" />\r\n</ng-template>\r\n\r\n<ng-template #iconTpl let-node>\r\n  <i nz-icon nzType=\"edit\" nzTheme=\"outline\" (click)=\"edit(node)\"></i>\r\n  <i nz-icon nzType=\"minus-circle\" nzTheme=\"outline\" nz-popconfirm\r\n    nzPopconfirmTitle=\"确定删除?\"\r\n    (nzOnConfirm)=\"delete(node)\"\r\n    nzPopconfirmPlacement=\"topLeft\"></i>\r\n  <ng-container *ngIf=\"!node.isLeaf\">\r\n    <i nz-icon nzType=\"plus-circle\" nzTheme=\"outline\" (click)=\"add(node)\"></i>\r\n  </ng-container>\r\n  <i nz-icon nzType=\"drag\" nzTheme=\"outline\"  title=\"拖动调整结构\"></i>\r\n</ng-template>\r\n\r\n<ng-template #editTpl let-node>\r\n  <i nz-icon nzType=\"check\" nzTheme=\"outline\" (click)=\"confirmEdit(node)\"></i>\r\n  <i nz-icon nzType=\"close\" nzTheme=\"outline\" (click)=\"cancelEdit(node)\"></i>\r\n  <i nz-icon nzType=\"drag\" nzTheme=\"outline\" title=\"拖动调整结构\"></i>\r\n</ng-template>\r\n","import { Component, OnInit, Injector, Input, Output, EventEmitter, ViewChild } from '@angular/core';\r\nimport { NzFormatEmitEvent, NzTreeNode, NzTreeNodeOptions, NzFormatBeforeDropEvent } from 'ng-zorro-antd';\r\nimport { NzMessageService } from 'ng-zorro-antd';\r\nimport { of, Observable } from 'rxjs';\r\nimport { NzTreeComponent } from 'ng-zorro-antd';\r\nimport { HttpService } from 'core/services/http.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CourseManageService } from 'src/app/busi-services/course-manage.service';\r\n\r\n@Component({\r\n  selector: 'app-structure-adjust-tree',\r\n  templateUrl: './structure-adjust-tree.component.html',\r\n  styleUrls: ['./structure-adjust-tree.component.less']\r\n})\r\nexport class StructureAdjustTreeComponent implements OnInit {\r\n\r\n  // actived node\r\n  activedNode: NzTreeNode;\r\n\r\n  isLoading = false;\r\n\r\n  nodes = [];\r\n\r\n  @Input() isDraggable = true;\r\n\r\n  // @Output() nodeChange = new EventEmitter<NzTreeNodeOptions>();\r\n  @Output() nodeChange = new EventEmitter<any>();\r\n\r\n  courseId = '';\r\n  coursePacketId = '';\r\n\r\n  isPermittedDrag = false;\r\n\r\n  emptyChapter = [];\r\n\r\n  /**\r\n   * 是在添加，章添加跟节添加，不能同时添加\r\n   */\r\n  isAddModel = false;\r\n\r\n  expandedKeys: string[] = [];\r\n\r\n  isStandard = false;\r\n\r\n  @ViewChild('treeVar') treeCom: NzTreeComponent;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private route: ActivatedRoute,\r\n    private courseMgService: CourseManageService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.courseId = this.route.snapshot.paramMap.get('courseId');\r\n    this.coursePacketId = this.route.snapshot.paramMap.get('id');\r\n    this.isStandard = this.route.snapshot.paramMap.get('status') === '1';\r\n    // this.getCourseChapterTreeNode(this.coursePacketId);\r\n    this.getChapter();\r\n  }\r\n\r\n  get nzMesService() {\r\n    return this.injector.get(NzMessageService);\r\n  }\r\n\r\n  get httpService() {\r\n    return this.injector.get(HttpService);\r\n  }\r\n\r\n\r\n  nzEvent(evt: NzFormatEmitEvent): void {\r\n    if (evt.eventName === 'click') {\r\n      if (this.activedNode && this.activedNode.key !== evt.node.key && this.activedNode.origin.isEdit === true) {\r\n        this.activedNode.title = this.activedNode.origin.cacheTitle;\r\n        this.activedNode.origin.isEdit = false;\r\n      }\r\n      this.activedNode = evt.node;\r\n      // if (this.model === 'click' || this.model === 'custom') {\r\n      //   this.nodeChange.emit(evt.node.origin);\r\n      // }\r\n    } else if (evt.eventName === 'dragend') {\r\n\r\n      if (this.isPermittedDrag) {\r\n        const treeNodes: NzTreeNode[] = this.treeCom.getTreeNodes();\r\n        const treeOpts = this.resort(treeNodes);\r\n        const postData = this.transformPostTreeData(treeOpts);\r\n\r\n        this.courseMgService.save_courseChapter(postData).subscribe(res => {\r\n          // this.nodes = this.transformTreeNodes(res);\r\n          this.renderTree(res);\r\n        },\r\n          error => {\r\n\r\n          });\r\n      }\r\n    } else if (evt.eventName === 'expand') {\r\n      this.expandedKeys = evt.keys;\r\n      const node = evt.node;\r\n      if (node?.getChildren().length === 0 && node?.isExpanded) {\r\n        this.getSection(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  saveNode(node: NzTreeNode) {\r\n    node.origin.name = node.title;\r\n    const postData = this.transformPostTreeData(this.nodes);\r\n    this.courseMgService.save_courseChapter(postData).subscribe(res => {\r\n      this.renderTree(res.data);\r\n    });\r\n  }\r\n\r\n\r\n  confirmEdit(node: NzTreeNode) {\r\n    if (node.origin.editTitle.trim() === '') {\r\n      this.nzMesService.error('数据不能为空');\r\n      return;\r\n    }\r\n    const checkList = node.parentNode ? node.parentNode.children : this.nodes;\r\n    if (this.checkRepeatedName(node.origin.editTitle.trim(), checkList, [node.key])) {\r\n      this.isAddModel = false;\r\n      this.nzMesService.error('重复名称');\r\n      return;\r\n    }\r\n    this.isAddModel = false;\r\n    node.title = node.origin.editTitle.trim();\r\n    this.saveNode(node);\r\n  }\r\n\r\n  cancelEdit(node: NzTreeNode) {\r\n    this.isAddModel = false;\r\n    node.title = node.origin.cacheTitle;\r\n    if (node.key.indexOf('qkc') !== -1) {\r\n      node.remove();\r\n    }\r\n    node.origin.isEdit = false;\r\n  }\r\n\r\n  edit(node: NzTreeNode) {\r\n    node.origin.editTitle = node.title;\r\n    node.origin.isEdit = true;\r\n  }\r\n\r\n  delete(node: NzTreeNode) {\r\n    // if (node.level === 0) {\r\n    //   this.nodes = this.nodes.filter(ele => ele.key !== node.key)\r\n    // } else {\r\n    //   node.remove();\r\n    // }\r\n\r\n    if (node.origin._level === 1) {\r\n      this.delTreeNode(node.origin.id, 'chapter').subscribe(res => {\r\n        this.getCourseChapterTreeNode(this.coursePacketId);\r\n      });\r\n    } else {\r\n      this.delTreeNode(node.origin.id, 'section').subscribe(res => {\r\n        this.getCourseChapterTreeNode(this.coursePacketId);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  add(node: NzTreeNode) {\r\n    if (!this.isPermitAdd()) {\r\n      return;\r\n    }\r\n    this.isAddModel = true;\r\n\r\n    const randomKey = this.createRandomNodeKey();\r\n    const treeOpt: NzTreeNodeOptions = {\r\n      title: '',\r\n      editTitle: '', // 使用这个，因为title是空的话，antd tree默认给一个 --- 值，所以不能用title双向绑定\r\n      key: randomKey,\r\n      isLeaf: true,\r\n      isEdit: true,\r\n      id: '',\r\n      seq: node.children.length + 1,\r\n      name: '',\r\n      _level: node.origin._level + 1\r\n    };\r\n    if (!this.expandedKeys.includes(node.key)) {\r\n      this.expandedKeys = [...this.expandedKeys, node.key];\r\n    }\r\n    node.addChildren([treeOpt]);\r\n  }\r\n\r\n  resort(tree: NzTreeNode[]) {\r\n    const tmpOpts: NzTreeNodeOptions[] = [];\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < tree.length; i++) {\r\n      tmpOpts.push(tree[i].origin);\r\n    }\r\n    const recurTree = (nodes: NzTreeNodeOptions[]) => {\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        nodes[i].seq = i + 1;\r\n        if (nodes[i].children && nodes[i].children.length > 0) {\r\n          recurTree(nodes[i].children);\r\n        }\r\n      }\r\n    };\r\n\r\n    recurTree(tmpOpts);\r\n\r\n    return tmpOpts;\r\n  }\r\n\r\n  addChapter({ value }: { value: string, level: string }) {\r\n    if (this.checkRepeatedName(value, this.nodes, [])) {\r\n      this.isAddModel = false;\r\n      this.nzMesService.error('重复名称');\r\n      return;\r\n    }\r\n    this.isAddModel = false;\r\n    const len = this.nodes.length;\r\n    this.courseMgService.save_courseChapter({\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      chapters: [\r\n        {\r\n          id: '',\r\n          name: value,\r\n          seq: len + 1\r\n        }\r\n      ]\r\n    }).subscribe(res => {\r\n      // res = res[0];\r\n      // const node: NzTreeNodeOptions = {\r\n      //   title: value,\r\n      //   key: res.id,\r\n      //   isEdit: false,\r\n      //   isLeaf: false,\r\n      //   id: res.id,\r\n      //   ...res\r\n      // };\r\n      // console.log(node);\r\n      // this.nodes = [...this.nodes, node];\r\n\r\n      this.getCourseChapterTreeNode(this.coursePacketId);\r\n    });\r\n  }\r\n\r\n  createRandomNodeKey(): string {\r\n    return `qkc${new Date().getTime()}`;\r\n  }\r\n\r\n  beforeDrop = (arg: NzFormatBeforeDropEvent): Observable<boolean> => {\r\n\r\n    const orNode = arg.dragNode.parentNode || arg.node.parentNode;\r\n\r\n    let isOk = false;\r\n    if (orNode === null) {// 顶层\r\n      isOk = arg.pos === 0 ? false : true;\r\n    } else {\r\n      const andNode = arg.dragNode.parentNode && arg.node.parentNode;\r\n      if (andNode === null) {// 顶层与不同的层\r\n        isOk = false;\r\n      } else {\r\n        if (arg.dragNode.parentNode.key === arg.node.parentNode.key) {\r\n          isOk = true;\r\n        } else {\r\n          isOk = false;\r\n        }\r\n      }\r\n    }\r\n    this.isPermittedDrag = isOk;\r\n    return of(isOk);\r\n  }\r\n\r\n\r\n  /**\r\n   * 删除章/pkg/courseChapter/del 参数：id-章id\r\n   * 方视\r\n   * 删除节/pkg/courseSection/del 参数：id-节id\r\n   * 方视\r\n   * 删除节中资源、/pkg/courseSectionResource/del  id-资源记录id\r\n   * 方视\r\n   * 删除节中资源，参数不是资源的id，是这条对应记录的id。不是resourceId\r\n   * @param id id\r\n   * @param type 类型\r\n   */\r\n  delTreeNode(id: string, type: 'chapter' | 'section' | 'secRes' | 'secAllRes'): Observable<any> {\r\n    let url = '';\r\n    switch (type) {\r\n      case 'chapter':\r\n        url = 'pkg/courseChapter/del';\r\n        break;\r\n\r\n      case 'section':\r\n        url = 'pkg/courseSection/del';\r\n        break;\r\n\r\n      case 'secRes':\r\n        url = 'pkg/courseSectionResource/del';\r\n        break;\r\n\r\n      case 'secAllRes':\r\n        url = 'pkg/courseSectionResource/del';\r\n        break;\r\n\r\n      default:\r\n        url = '';\r\n    }\r\n    return new Observable<any>(observe => {\r\n      const options = {\r\n        isCommonHttpHeader: true\r\n      };\r\n      if (url === '') {\r\n        observe.error('empty url');\r\n        return;\r\n      }\r\n      this.httpService.post(url, { id }, options).subscribe(\r\n        result => {\r\n          observe.next(result);\r\n          observe.unsubscribe();\r\n        },\r\n        error => {\r\n          observe.error(error);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n\r\n  getCourseChapterTreeNode(coursePacketId: string): void {\r\n    const options = { isCommonHttpHeader: true };\r\n    this.isLoading = true;\r\n    this.httpService.post('pkg/courseChapter/courseChapterTreeNode', { coursePacketId }, options).subscribe(res => {\r\n      this.isLoading = false;\r\n\r\n      if (res.status === 200) {\r\n        this.renderTree(res.data);\r\n      } else {\r\n        this.nodes = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  getChapter(): void {\r\n    this.isLoading = true;\r\n    this.courseMgService.getList_courseChapter(this.coursePacketId).subscribe(res => {\r\n      this.isLoading = false;\r\n      if (res.status === 200) {\r\n        this.renderTree(res.data);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSection(node: NzTreeNode): void {\r\n    this.courseMgService.getList_courseSection(node.key).subscribe(res => {\r\n      if (res.status === 200) {\r\n        node.addChildren(this.transformSectionTreeNodes(res.data));\r\n      } else {\r\n        node.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  transformSectionTreeNodes(nodes: any[]): NzTreeNodeOptions[] {\r\n    return nodes.map(node => {\r\n      return {\r\n        title: node.name,\r\n        cacheTitle: node.name,\r\n        key: node.id,\r\n        isEdit: false,\r\n        isLeaf: true,\r\n        _level: 2,\r\n        ...node\r\n      };\r\n    });\r\n  }\r\n\r\n  transformTreeNodes(data: any[]): any[] {\r\n\r\n    // 初始化第一层\r\n    data = data.map(ele => {\r\n      ele._level = 1;\r\n      return ele;\r\n    });\r\n\r\n    const emptyChapter = [];\r\n\r\n    const recurTree = (nodes: any[], level: number) => {\r\n\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        nodes[i].title = nodes[i].name;\r\n        nodes[i].cacheTitle = nodes[i].name;\r\n        nodes[i].key = nodes[i].id;\r\n        nodes[i].isEdit = false;\r\n\r\n        if (level !== -1) {\r\n          nodes[i]._level = level + 1;\r\n        }\r\n\r\n        if (nodes[i].children && nodes[i].children.length > 0) {\r\n          nodes[i].isLeaf = false;\r\n          recurTree(nodes[i].children, nodes[i]._level);\r\n        } else {\r\n          if (nodes[i]._level === 1) {\r\n            nodes[i].isLeaf = false;\r\n            // emptyChapter.push(nodes[i].title);\r\n          } else {\r\n            nodes[i].isLeaf = true;\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    recurTree(data, -1);\r\n    this.emptyChapter = emptyChapter;\r\n    return data;\r\n  }\r\n\r\n  transformPostTreeData(data: any[]) {\r\n    const postData: any = {\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId,\r\n      chapters: [\r\n      ]\r\n    };\r\n\r\n    const tmp = [];\r\n    const recurTree = (nodes: any[], parentNode: { [key: string]: any }) => {\r\n      // tslint:disable-next-line:prefer-for-of\r\n      for (let i = 0; i < nodes.length; i++) {\r\n        let node = {};\r\n        if (nodes[i]._level === 2) {\r\n          node = {\r\n            id: nodes[i].id,\r\n            name: nodes[i].name,\r\n            seq: nodes[i].seq\r\n          };\r\n          parentNode.sections.push(node);\r\n        } else {\r\n          node = {\r\n            id: nodes[i].id,\r\n            name: nodes[i].name,\r\n            seq: nodes[i].seq,\r\n            sections: []\r\n          };\r\n        }\r\n\r\n        if (nodes[i].children && nodes[i].children.length > 0) {\r\n          tmp.push(node);\r\n          recurTree(nodes[i].children, node);\r\n        } else {\r\n          if (nodes[i]._level === 1) {\r\n            tmp.push(node);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    recurTree(data, null);\r\n\r\n    postData.chapters = tmp;\r\n\r\n    return postData;\r\n  }\r\n\r\n  prefessionLabelShowChange(show: boolean) {\r\n    this.isAddModel = show;\r\n  }\r\n\r\n  isPermitAdd(): boolean {\r\n    if (this.isAddModel) {\r\n      this.nzMesService.warning('你已经在添加模式了，请处理完在添加！');\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  renderTree(data: any[]) {\r\n    this.nodes = this.transformTreeNodes(data);\r\n    this.expandedKeys = [...this.expandedKeys];\r\n  }\r\n\r\n  checkStructure(): boolean {\r\n    if (this.nodes.length === 0) {\r\n      return false;\r\n    }\r\n    for (const section of this.nodes) {\r\n      if (section.children && section.children.length === 0) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkRepeatedName(name: string, nodes: NzTreeNode[], excludeIds: string []) {\r\n    for (const node of nodes) {\r\n      if (!excludeIds.includes(node.key) && node.title === name) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n   }\r\n\r\n}\r\n","<div class='header'>\r\n  课包内容研发统计表\r\n</div>\r\n<div class='content'>\r\n  <div class='content-title'>\r\n    学习设定\r\n  </div>\r\n  <nz-table #basicTable [nzData]=\"listOfData\">\r\n    <thead>\r\n    <tr>\r\n      <th>章名称</th>\r\n      <th>节名称</th>\r\n      <th *ngIf='teachType!==\"22\"'>讲义</th>\r\n      <th *ngIf='teachType===\"22\"'>录播</th>\r\n      <th *ngIf='teachType!==\"22\"'>任务</th>\r\n      <th>资料</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody>\r\n    <tr *ngFor=\"let data of basicTable.data\">\r\n      <td>{{ data.courseChapterName }}</td>\r\n      <td>{{ data.courseSectionName }}</td>\r\n      <td *ngIf='teachType!==\"22\"'>{{ data.lectureNum }}</td>\r\n      <td *ngIf='teachType===\"22\"'>{{ data.videoNum }}</td>\r\n      <td *ngIf='teachType!==\"22\"'>{{ data.taskNum }}</td>\r\n      <td>{{ data.resourseNum }}</td>\r\n    </tr>\r\n    </tbody>\r\n  </nz-table>\r\n</div>\r\n<div class='content'>\r\n  <div class='content-title'>\r\n    其他设置\r\n  </div>\r\n  <nz-descriptions>\r\n    <nz-descriptions-item nzTitle=\"总课次\">{{lessonCount}}</nz-descriptions-item>\r\n    <nz-descriptions-item nzTitle=\"免费题库\">{{quebankNum}}个题库</nz-descriptions-item>\r\n    <nz-descriptions-item nzTitle=\"教学示范\">{{teachDemoNum}}个视频</nz-descriptions-item>\r\n  </nz-descriptions>\r\n</div>\r\n<div class='content'>\r\n  <div class='content-title'>\r\n    智适应\r\n  </div>\r\n  <nz-descriptions>\r\n    <nz-descriptions-item nzTitle=\"指导讲师\">{{authorNum}}位</nz-descriptions-item>\r\n    <nz-descriptions-item nzTitle=\"章节绑定\">共{{sectionNum}}个小节 、{{knowledgeNum}}个知识点</nz-descriptions-item>\r\n    <!--    <nz-descriptions-item nzTitle=\"冲刺考试\">-->\r\n    <!--      共2套试卷-->\r\n    <!--    </nz-descriptions-item>-->\r\n    <!--    <nz-descriptions-item nzTitle=\"押题考试\">共5套试卷</nz-descriptions-item>-->\r\n  </nz-descriptions>\r\n</div>\r\n\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\n\r\n@Component({\r\n  selector: 'app-complete-course',\r\n  templateUrl: './complete-course.component.html',\r\n  styleUrls: ['./complete-course.component.less']\r\n})\r\nexport class CompleteCourseComponent implements OnInit {\r\n  listOfData = [];\r\n  lessonCount: any = 0;\r\n  quebankNum: any = 0;\r\n  knowledgeNum: any = 0;\r\n  authorNum: any = 0;\r\n  sectionNum: any = 0;\r\n  teachDemoNum: any = 0;\r\n  teachType;\r\n  preview;\r\n  coursePacketId;\r\n\r\n  constructor(\r\n    private courseManageService: CourseManageService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initParams();\r\n    this.getDetails();\r\n  }\r\n\r\n  getDetails() {\r\n    this.courseManageService.getDetails(this.coursePacketId).subscribe(res => {\r\n      if (res.status === 200) {\r\n        const {studySet, lessonCount, quebankNum, knowledgeNum, authorNum, sectionNum, teachDemoNum} = res.data;\r\n        this.listOfData = studySet ? studySet : [];\r\n        this.lessonCount = lessonCount ? lessonCount : 0;\r\n        this.quebankNum = quebankNum ? quebankNum : 0;\r\n        this.knowledgeNum = knowledgeNum ? knowledgeNum : 0;\r\n        this.authorNum = authorNum ? authorNum : 0;\r\n        this.sectionNum = sectionNum ? sectionNum : 0;\r\n        this.teachDemoNum = teachDemoNum ? teachDemoNum : 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  private initParams() {\r\n    const {teachType, preview, id} = SessionStorageUtil.getPacketInfo();\r\n    this.teachType = teachType;\r\n    this.preview = preview;\r\n    this.coursePacketId = id;\r\n  }\r\n}\r\n","import {AfterViewChecked, Component} from '@angular/core';\r\nimport {timer} from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-flex-table',\r\n  template: ``\r\n})\r\nexport class FlexTableComponent implements AfterViewChecked {\r\n  dom: any;\r\n  height;\r\n  lock = false;\r\n  limitHeight = 60;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    if (!this.dom) {\r\n      if (!this.lock) {// 性能锁\r\n        this.lock = true;\r\n        const dom = document.getElementById('tableScroll'); // detached状态可能为空\r\n        if (dom) {\r\n            timer(0).subscribe(() => {\r\n              this.dom = document.getElementById('tableScroll'); // 异步渲染从渲染树重新获取\r\n              if (this.dom) {\r\n                this.height = this.dom.clientHeight - this.limitHeight; // 动态获取计算后的高度\r\n              }\r\n              this.lock = false;\r\n            });\r\n        } else {\r\n          this.lock = false;\r\n        }\r\n      }\r\n    } else {\r\n      const dom = document.getElementById('tableScroll');\r\n      if (dom && (dom.clientHeight - this.limitHeight) !== this.height) {\r\n        if (!this.lock) {\r\n          this.lock = true;\r\n          if (dom) {\r\n            timer(0).subscribe(() => {\r\n              this.dom = document.getElementById('tableScroll');\r\n              if (this.dom) {\r\n                this.height = this.dom.clientHeight - this.limitHeight;\r\n              }\r\n              this.lock = false;\r\n            });\r\n          } else {\r\n            this.lock = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Component, Inject, LOCALE_ID} from '@angular/core';\r\nimport {CourseListParams} from 'core/base/common';\r\nimport {formatDate} from '@angular/common';\r\nimport {FlexTableComponent} from '../flex-table/flex-table.component';\r\nimport {PAGE_CONSTANT} from 'core/base/static-data';\r\n\r\n@Component({\r\n  selector: 'app-course-data',\r\n  template: ``\r\n})\r\nexport class CourseDataComponent extends FlexTableComponent {\r\n  pageIndex = PAGE_CONSTANT.page;\r\n  pageSize = PAGE_CONSTANT.limit;\r\n  searchWord = '';\r\n  selectedValue = '';\r\n  dateRange = [];\r\n  data = [];\r\n  total = 0;\r\n  isLoading = false;\r\n  _PAGE_ID_;\r\n  courseMgService;\r\n  message;\r\n  route;\r\n  locale;\r\n\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getDataList() {\r\n    this.isLoading = true;\r\n    const type = this.route.routeConfig.path;\r\n    const param: CourseListParams = {\r\n      page: this.pageIndex,\r\n      limit: this.pageSize,\r\n      searchKey: this.searchWord.trim(),\r\n      auditStatus: this.selectedValue || '',\r\n      filterKey: 'MANAGER',\r\n\r\n    };\r\n    if (type === 'course-list') {\r\n      param.startTime = '';\r\n      param.endTime = '';\r\n      if (this.dateRange.length) {\r\n        param.startTime = formatDate(this.dateRange[0], 'yyyy-MM-dd', this.locale);\r\n        param.endTime = formatDate(this.dateRange[1], 'yyyy-MM-dd', this.locale);\r\n      }\r\n    } else {\r\n      param.startBillDate = '';\r\n      param.endBillDate = '';\r\n      if (this.dateRange.length) {\r\n        param.startBillDate = formatDate(this.dateRange[0], 'yyyy-MM-dd', this.locale);\r\n        param.endBillDate = formatDate(this.dateRange[1], 'yyyy-MM-dd', this.locale);\r\n      }\r\n      if (type === 'i-initiated') {\r\n        param.queryFilterType = 'I_STARTED';\r\n      } else if (type === 'approve-all') {\r\n        param.queryFilterType = 'ALL_APPROVED';\r\n      }\r\n    }\r\n\r\n    this.courseMgService.getCourseListNew(param).subscribe(res => {\r\n      this.isLoading = false;\r\n      if (res.status !== 200) {\r\n        this.message.error(res.message);\r\n        return;\r\n      }\r\n      this.data = res.data || [];\r\n      this.total = res.page ? res.page.totalResult : 0;\r\n    }, err => {\r\n      this.isLoading = false;\r\n      this.message.error(JSON.stringify(err));\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import {Component, Inject, LOCALE_ID, OnDestroy, OnInit} from '@angular/core';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {CourseDataComponent} from '@app/routes/course-manage/components/course-data/course-data.component';\r\nimport {of, Subject} from 'rxjs';\r\nimport {debounceTime, distinctUntilChanged, startWith} from 'rxjs/operators';\r\nimport {formatDate} from '@angular/common';\r\nimport {PAGE_CONSTANT} from 'core/base/static-data';\r\n\r\n@Component({\r\n  selector: 'app-search-table',\r\n  template: ``\r\n})\r\nexport class SearchTableComponent extends CourseDataComponent implements OnInit, OnDestroy {\r\n  searchWordVal = '';\r\n  dateRangeVal = [];\r\n  selectedVal = '';\r\n  subject: Subject<object> = new Subject<object>();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscribeChange();\r\n    this.initData();\r\n  }\r\n\r\n\r\n  ngOnAttach() {\r\n    this.collectParam();\r\n    this.sybcParam();\r\n    this.initData();\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.removeData();\r\n    this.subject.unsubscribe();\r\n  }\r\n\r\n\r\n  initData() {\r\n    this.searchData();\r\n  }\r\n\r\n\r\n  searchData(reset: boolean | string = false) {\r\n    if (reset === 'button') {\r\n      this.pageIndex = 1;\r\n      this.sybcParam();\r\n    } else if (reset === 'collect') {\r\n      this.collectParam();\r\n      this.sybcParam();\r\n    } else if (reset) {\r\n      this.resetData();\r\n    }\r\n    this.getDataList();\r\n  }\r\n\r\n  getDate(createTime) {\r\n    const now = new Date();\r\n    const startTime = new Date(formatDate(now, 'yyyy-MM-dd 00:00:00', this.locale)).getTime();\r\n    const endTime = new Date(formatDate(now, 'yyyy-MM-dd 23:59:59', this.locale)).getTime();\r\n    if (createTime) {\r\n      if (startTime < createTime && createTime < endTime) {\r\n        return formatDate(createTime, 'HH:mm', this.locale);\r\n      } else {\r\n        return formatDate(createTime, 'yyyy-MM-dd', this.locale);\r\n      }\r\n    } else {\r\n      return '--';\r\n    }\r\n  }\r\n\r\n\r\n  resetData() {\r\n    this.pageIndex = 1;\r\n    this.resetInit();\r\n    this.removeData();\r\n    this.getDataList();\r\n  }\r\n\r\n  resetInit() {\r\n    this.searchWord = '';\r\n    this.dateRange = [];\r\n    this.selectedValue = '';\r\n    this.searchWordVal = '';\r\n    this.dateRangeVal = [];\r\n    this.selectedVal = '';\r\n  }\r\n\r\n\r\n  collectParam() {\r\n    const {searchWordVal, dateRangeVal, selectedVal} = SessionStorageUtil.getSearch(this._PAGE_ID_);\r\n    this.searchWordVal = searchWordVal || '';\r\n    this.dateRangeVal = dateRangeVal || [];\r\n    this.selectedVal = selectedVal || '';\r\n  }\r\n\r\n  sybcParam() {\r\n    this.searchWord = this.searchWordVal;\r\n    this.dateRange = this.dateRangeVal;\r\n    this.selectedValue = this.selectedVal;\r\n  }\r\n\r\n  storingData() {\r\n    const {selectedVal, dateRangeVal, searchWordVal} = this;\r\n    this.passData({selectedVal, dateRangeVal, searchWordVal});\r\n  }\r\n\r\n  passData(value) {\r\n    this.subject.next(value);\r\n  }\r\n\r\n  subscribeChange() {\r\n    // distinctUntilChanged()\r\n    this.subject.pipe(debounceTime(200)).subscribe((value) => {\r\n      SessionStorageUtil.putSearch(this._PAGE_ID_, value);\r\n    });\r\n  }\r\n\r\n  removeData() {\r\n    SessionStorageUtil.clearSearch(this._PAGE_ID_);\r\n  }\r\n\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {SearchTableComponent} from '@app/routes/course-manage/components/search-table/search-table.component';\r\nimport {map} from 'rxjs/operators';\r\nimport {Subscription} from 'rxjs';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\n\r\n@Component({\r\n  selector: 'app-course-data',\r\n  template: ``\r\n})\r\n\r\nexport class ResolverDataComponent extends SearchTableComponent implements OnDestroy {\r\n  pageIndex;\r\n  data$: Subscription;\r\n\r\n\r\n  constructor(public route: ActivatedRoute) {\r\n    super();\r\n  }\r\n\r\n  /*\r\n * @Override\r\n * */\r\n  initData() {\r\n    this.data$ = this.route.data.pipe(map(res => res.courseListData)).subscribe((ret) => {\r\n      const res = ret[0];\r\n      this.data = res.data || [];\r\n      this.total = res.page ? res.page.totalResult : 0;\r\n    });\r\n  }\r\n\r\n  ngOnDetach() {\r\n    SessionStorageUtil.putPageInfo(this._PAGE_ID_, JSON.stringify({\r\n      page: this.pageIndex,\r\n      limit: this.pageSize\r\n    }));\r\n    this.data$.unsubscribe();\r\n  }\r\n\r\n  /*\r\n  * @Overide\r\n  * */\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n    SessionStorageUtil.removePageInfo(this._PAGE_ID_);\r\n  }\r\n\r\n}\r\n","import {Component, OnInit, Input, Output, EventEmitter, ViewChild} from '@angular/core';\r\nimport {NzTreeComponent, NzFormatEmitEvent, NzTreeNode, NzTreeNodeOptions} from 'ng-zorro-antd/tree';\r\nimport {CourseManageService} from 'src/app/busi-services/course-manage.service';\r\nimport {timer} from \"rxjs\";\r\n\r\nexport type CourseStructureTreeType = 'chapter' | 'section' | 'course-time-division';\r\n\r\nexport interface NodeChangeEvent {\r\n  type: CourseStructureTreeType;\r\n  data: any;\r\n\r\n  [key: string]: any;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-course-structure-tree',\r\n  templateUrl: './course-structure-tree.component.html',\r\n  styleUrls: ['./course-structure-tree.component.less']\r\n})\r\nexport class CourseStructureTreeComponent implements OnInit {\r\n  nodes: NzTreeNodeOptions[] = [];\r\n  expandedKeys = [];\r\n  selectedKeys = [];\r\n  @Input() coursePacketId: string;\r\n  @Input() defaultSection: any;\r\n  @Input() defaultExpandedKeys = [];\r\n  @Input() chapterSelectable = true;\r\n  @Input() type: 'display' | 'operate' = 'operate'; // display 纯展示  operate 可操作节点\r\n  @Output() nodeChange = new EventEmitter<NodeChangeEvent>();\r\n  @ViewChild('treeVar') treeCom: NzTreeComponent;\r\n\r\n  constructor(\r\n    private courseMgService: CourseManageService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getChapter();\r\n  }\r\n\r\n  nzEvent(evt: NzFormatEmitEvent): void {\r\n    if (evt.eventName === 'click') {\r\n      const node = evt.node;\r\n      const type = node.level === 0 ? 'chapter' : 'section';\r\n      this.sendNodeChange(type, node.origin);\r\n    } else if (evt.eventName === 'expand') {\r\n      const node = evt.node;\r\n      if (node?.getChildren().length === 0 && node?.isExpanded) {\r\n        this.getSection(node);\r\n      }\r\n    }\r\n  }\r\n\r\n  getChapter(): void {\r\n    this.courseMgService.getList_courseChapter(this.coursePacketId).subscribe(res => {\r\n      if (res.status === 200) {\r\n        this.nodes = this.transformTreeNodes(res.data, false, 0);\r\n        if (this.nodes.length > 0) {\r\n          if (this.defaultExpandedKeys && this.defaultExpandedKeys.length) {\r\n            setTimeout(() => {\r\n              this.expandedKeys = this.defaultExpandedKeys;\r\n              const treeNode = this.treeCom.getTreeNodeByKey(this.defaultExpandedKeys[0]);\r\n              this.getSection(treeNode);\r\n            }, 400);\r\n          } else {\r\n            this.expandedKeys = [this.nodes[0].id];\r\n            setTimeout(() => {\r\n              const treeNode = this.treeCom.getTreeNodeByKey(this.nodes[0].id);\r\n              this.getSection(treeNode);\r\n            }, 400);\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  getSection(node: NzTreeNode): void {\r\n    if (node) {\r\n      node.isLoading = true;\r\n      this.courseMgService.getList_courseSection(node.key).subscribe(res => {\r\n        if (res.status === 200) {\r\n          const childrenNodes = this.transformTreeNodes(res.data, true, node.origin.index);\r\n          node.addChildren(childrenNodes);\r\n          if (this.defaultSection) {\r\n            this.selectedKeys = [this.defaultSection.key];\r\n            this.sendNodeChange('section',  this.defaultSection);\r\n          } else {\r\n            if (childrenNodes.length > 0) {\r\n              this.selectedKeys = [childrenNodes[0].key];\r\n              this.sendNodeChange('section', childrenNodes[0]);\r\n            }\r\n          }\r\n        } else {\r\n          node.isLoading = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  transformTreeNodes(nodes: any[], isLeaf: boolean, chapterIdx: number): NzTreeNodeOptions[] {\r\n    return nodes.map((node, index) => {\r\n      return {\r\n        title: !isLeaf ? `第${index + 1}章   ${node.name}` : `${chapterIdx + 1}.${index + 1}节 ${node.name}`,\r\n        key: node.id,\r\n        selectable: !isLeaf ? this.chapterSelectable : true,\r\n        index,\r\n        isLeaf,\r\n        ...node\r\n      };\r\n    });\r\n  }\r\n\r\n  sendNodeChange(type: CourseStructureTreeType, data: any) {\r\n    if (type === 'chapter' && !this.chapterSelectable) {\r\n      return;\r\n    }\r\n    this.nodeChange.emit({type, data});\r\n  }\r\n\r\n}\r\n","<nz-tree\r\n#treeVar\r\nnzBlockNode\r\nnzAsyncData\r\n[nzData]=\"nodes\"\r\n[nzExpandedKeys]=\"expandedKeys\"\r\n[nzSelectedKeys]=\"selectedKeys\"\r\n(nzClick)=\"nzEvent($event)\"\r\n[nzTreeTemplate]=\"type=='display'?nzTreeTemplate:null\"\r\n(nzExpandChange)=\"nzEvent($event)\"\r\n[nzShowIcon]=\"type=='display'\"\r\n[nzExpandedIcon]=\"multiExpandedIconTpl\"\r\n[nzShowLine]=\"type=='display'\">\r\n</nz-tree>\r\n\r\n<ng-template #nzTreeTemplate let-node>\r\n    <div class=\"node-row\">\r\n        <span>\r\n            {{node.origin.title}}\r\n        </span>\r\n        <span style=\"font-size:12px;color:#999;\"  *ngIf=\"!node.isLeaf\">\r\n            共{{node.origin.sectionCount||0}}个小节\r\n        </span>\r\n    </div>\r\n</ng-template>\r\n\r\n<ng-template #multiExpandedIconTpl let-node let-origin=\"origin\">\r\n    <i *ngIf=\"!origin.isLeaf\" nz-icon [nzType]=\"node.isExpanded ? 'caret-down' : 'caret-right'\" class=\"ant-tree-switcher-line-icon\"></i>\r\n    <i *ngIf=\"origin.isLeaf&&type=='display'\" class=\"circle\"></i>\r\n  </ng-template>","import {ConfirmableDescription, ConfirmableFlatDescription, Json, LoadingControl} from '../base/common';\r\nimport {NzModalRef} from 'ng-zorro-antd';\r\nimport {ToolsUtil} from '../utils/tools.util';\r\n\r\n// 属性装饰器\r\nexport function takeAnInteger() {\r\n  return (target: object, key: string | symbol) => {\r\n    let val = target[key];\r\n    const getter = () => {\r\n      return val;\r\n    };\r\n    const setter = value => {\r\n      val = value.tofix(0);\r\n    };\r\n    Object.defineProperty(target, key, {\r\n      get: getter,\r\n      set: setter,\r\n      enumerable: true,\r\n      configurable: true\r\n    });\r\n  };\r\n}\r\n\r\nexport declare interface GetSetCallOption<T> {\r\n  get?: (propertyValue: T) => T;\r\n  set?: (newValue: T, preValue: T) => void;\r\n  initSet?: (newValue: T, preValue: T) => void;\r\n  initValue?: T; // 此处设置初始值不会调用set\r\n}\r\n\r\n// 属性装饰器\r\n/*\r\n集中私有属性添加，分化&简化\r\n */\r\nexport function getSetChange<T>(getSetCall: GetSetCallOption<T>) {\r\n  return (target: object, key: string): void => {\r\n    let propertyValue = getSetCall.initValue;\r\n    const label = new Array(16).fill(0).reduce(total => total += Math.floor(Math.random() * 16).toString(16));\r\n    Object.defineProperty(target, key, {\r\n      get() {\r\n        if (this[label]) {\r\n          return getSetCall.get ? getSetCall.get.call(this, propertyValue) : propertyValue;\r\n        } else {\r\n          return getSetCall.get ? getSetCall.get.call(this, getSetCall.initValue) : getSetCall.initValue;\r\n        }\r\n      },\r\n      set(newValue) {\r\n        if (this[label]) {\r\n          getSetCall.set?.call(this, newValue, propertyValue);\r\n        } else {\r\n          this[label] = true;\r\n          if (getSetCall.initSet) {\r\n            getSetCall.initSet.call(this, newValue, propertyValue);\r\n          } else {\r\n            getSetCall.set?.call(this, newValue, propertyValue);\r\n          }\r\n        }\r\n        propertyValue = newValue;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// 构造器装饰器\r\nexport function extendPrototype(greeting: string) {\r\n  // tslint:disable-next-line:ban-types only-arrow-functions\r\n  return function(target: Function) {\r\n    // tslint:disable-next-line:only-arrow-functions\r\n    target.prototype.greet = function(): void {\r\n      console.log(greeting);\r\n    };\r\n  };\r\n}\r\n\r\n// 方法装饰器\r\nexport function ConfirmableDesc(params: ConfirmableDescription) {\r\n  return (\r\n    target: object,\r\n    key: string | symbol,\r\n    descriptor: PropertyDescriptor\r\n  ) => {\r\n    const original = descriptor.value;\r\n    descriptor.value = function(...args: any[]) {\r\n      const {\r\n        title, content, type, replaceXxxField,\r\n        conditionField, conditionResult, conditionTitleReplace, conditionContentReplace, condition\r\n      } = params;\r\n      const conditionIf = typeof condition !== 'undefined';\r\n      // tslint:disable-next-line:max-line-length\r\n      const resultCondition = conditionIf ? condition() : (conditionField && conditionResult && (args[0][conditionField] === conditionResult));\r\n      const resultContent = resultCondition ? conditionContentReplace : content;\r\n      this.modalService[type]({\r\n        nzTitle: resultCondition ? conditionTitleReplace || title : title,\r\n        nzContent: replaceXxxField ? resultContent.replace('xxx', args[0][replaceXxxField]) : resultContent,\r\n        nzMaskClosable: false,\r\n        nzWrapClassName: 'vertical-center-modal',\r\n        nzCancelText: '取消',\r\n        nzOkText: '确定',\r\n        nzOnOk: (e) => {\r\n          const result = original.apply(this, args);\r\n          return result;\r\n        },\r\n        nzOnCancel() {\r\n          return null;\r\n        }\r\n      });\r\n    };\r\n    return descriptor;\r\n  };\r\n}\r\n\r\n// 方法装饰器\r\nexport function ConfirmableFlat(params: ConfirmableFlatDescription) {\r\n  return (\r\n    target: object,\r\n    key: string | symbol,\r\n    descriptor: PropertyDescriptor\r\n  ) => {\r\n    const {title, content, type, nzBodyStyle, nzWrapClassName, nzComponentParams, nzOkText, nzCancelText, nzOnCancel} = params;\r\n    const original = descriptor.value;\r\n    descriptor.value = function(...args: any[]) {\r\n      const loadingControl: Partial<LoadingControl> = {};\r\n      const modal: NzModalRef = this.modalService[typeof type === 'function' ? type.call(this, args) : (type || 'info')]({\r\n        nzTitle: typeof title === 'function' ? title.call(this, args) : title,\r\n        nzContent: typeof content === 'function' ? content.call(this, args) : content,\r\n        nzMaskClosable: false,\r\n        nzWrapClassName,\r\n        nzComponentParams,\r\n        nzBodyStyle,\r\n        nzOkText: nzOkText || '确定',\r\n        nzCancelText: nzCancelText || '取消',\r\n        nzOnCancel: () => {\r\n          if (nzOnCancel) {\r\n            return nzOnCancel.apply(this, Array.prototype.concat.call(args, loadingControl, modal));\r\n          }\r\n        },\r\n        nzOnOk: () => {\r\n          return original.apply(this, Array.prototype.concat.call(args, loadingControl, modal));\r\n        },\r\n      });\r\n      ToolsUtil.watchTool(loadingControl, 'loading', false, (val) => {\r\n        modal.updateConfig({nzOkLoading: val});\r\n      });\r\n    };\r\n    return descriptor;\r\n  };\r\n}\r\n\r\n// 方法装饰器\r\n// tslint:disable-next-line:ban-types\r\nexport function LogOutput(tarage: Function, key: string, descriptor: any) {\r\n  const originalMethod = descriptor.value;\r\n  const newMethod = function(...args: any[]): any {\r\n    const result: any = originalMethod.apply(this, args);\r\n    if (!this.loggedOutput) {\r\n      this.loggedOutput = new Array<any>();\r\n    }\r\n    this.loggedOutput.push({\r\n      method: key,\r\n      parameters: args,\r\n      output: result,\r\n      timestamp: new Date()\r\n    });\r\n    return result;\r\n  };\r\n  descriptor.value = newMethod;\r\n}\r\n\r\n// 参数装饰器\r\n// tslint:disable-next-line:ban-types\r\nexport function Log(target: Function, key: string, parameterIndex: number) {\r\n  const functionLogged = key || target.prototype.constructor.name;\r\n  console.log(`The parameter in position ${parameterIndex} at ${functionLogged} has\r\n    been decorated`);\r\n}\r\n\r\n\r\n// 类装饰器\r\n// @Component、@NgModule、@Pipe、@Injectable\r\n// 属性装饰器\r\n// @Input、@Output、@ContentChild、@ContentChildren、@ViewChild、@ViewChildren\r\n// 方法装饰器\r\n// @HostListener\r\n// 参数装饰器\r\n// @Inject、@Optional、@Self、@SkipSelf、@Host\r\n\r\n\r\n/**\r\n * Component decorator and metadata.\r\n */\r\n// export const Component: ComponentDecorator = <ComponentDecorator>makeDecorator(\r\n//   'Component', {\r\n//     selector: undefined, // 用于定义组件在HTML代码中匹配的标签\r\n//     inputs: undefined, // 组件的输入属性\r\n//     outputs: undefined, // 组件的输出属性\r\n//     host: undefined, // 绑定宿主的属性、事件等\r\n//     exportAs: undefined, // 导出指令，使得可以在模板中调用\r\n//     moduleId: undefined, // 包含该组件模块的id，它被用于解析模板和样式的相对路径\r\n//     providers: undefined, // 设置组件及其子组件可以用的服务\r\n//     viewProviders: undefined, // 设置组件及其子组件(不含ContentChildren)可以用的服务\r\n//     changeDetection: ChangeDetectionStrategy.Default, // 指定组件使用的变化检测策略\r\n//     queries: undefined, // 设置组件的查询条件\r\n//     templateUrl: undefined, // 为组件指定一个外部模板的URL地址\r\n//     template: undefined, // 为组件指定一个内联的模板\r\n//     styleUrls: undefined, // 为组件指定一系列用于该组件的样式表文件\r\n//     styles: undefined, // 为组件指定内联样式\r\n//     animations: undefined, // 设置组件相关动画\r\n//     encapsulation: undefined, // 设置组件视图包装选项\r\n//     interpolation: undefined, // 设置默认的插值运算符，默认是\"{{\"和\"}}\"\r\n//     entryComponents: undefined // 设置需要被提前编译的组件\r\n//   },\r\n//   Directive);\r\n// 模块注入器和组件注入器，Angular 还提供了第三种注入器，即多级元素注入器\r\n// Angular 会按照三个阶段来解析依赖，起始阶段就是使用多级元素注入器，然后是多级组件注入器，最后是多级模块注入器。\r\n","<div class=\"container\">\r\n  <div class='item'>\r\n    <div class='item-left'>\r\n      <span style='color:red;margin-right:10px;' *ngIf='examTimeRequire&&intellectualAdaptation'>*</span>国家考试日期：\r\n    </div>\r\n    <nz-date-picker [(ngModel)]=\"examTime\"\r\n                    (nzOnOpenChange)='timeOpen($event,\"examTime\")'\r\n                    (ngModelChange)=\"timeChange($event,'examTime')\"\r\n                    style='margin-left:20px;width:200px' [disabled]='preview===\"1\"'></nz-date-picker>\r\n  </div>\r\n  <div class='item'>\r\n    <div class='item-left'>\r\n      <span style='color:red;margin-right:10px;'>*</span>智适应：\r\n    </div>\r\n    <nz-switch [(ngModel)]=\"intellectualAdaptation\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\"\r\n               style='margin-left:20px;' [nzDisabled]='preview===\"1\"||isStandard'></nz-switch>\r\n\r\n<!--    <button nz-button nzType=\"primary\" (click)='export()' style='float:right'>知识点详情导出</button>-->\r\n  </div>\r\n  <ng-container *ngIf='intellectualAdaptation'>\r\n    <div class='item' *ngIf='teachType===\"22\"'>\r\n      <div class='item-left'>\r\n        <span style='color:red;margin-right:10px;'>*</span>指导讲师：\r\n      </div>\r\n      <ng-container *ngIf='teacherData.length'>\r\n        <div class='instructor-teach'\r\n             [class.active]='clickFlag[i]'\r\n             [ngStyle]='{cursor: preview===\"0\"?\"\":\"not-allowed\"}'\r\n             (click)='getflag(i,item)'\r\n             *ngFor='let item of teacherData;let i= index;'>\r\n          <div class='title'>\r\n            {{item.teacherName}}\r\n          </div>\r\n          <div class='sub-title'>\r\n            缺少{{item.lackVideoNum}}个主视频\r\n          </div>\r\n          <div class='icon-teacher'>\r\n            <i nz-icon nzType=\"check\" nzTheme=\"outline\"></i>\r\n          </div>\r\n        </div>\r\n      </ng-container>\r\n      <span *ngIf='!teacherData.length' style='margin-left: 10px;'>暂无数据</span>\r\n    </div>\r\n\r\n\r\n    <div class='item'>\r\n      <div class='item-left'>\r\n        <span style='color:red;margin-right:10px;'>*</span>章节绑定：\r\n      </div>\r\n      <button nz-button nzType=\"primary\" style='margin-left:20px;' (click)='bind()' [disabled]='preview===\"1\"'>绑定\r\n      </button>\r\n      <nz-spin [nzSpinning]=\"untieLoading\" [nzDelay]=\"0\">\r\n        <nz-table #basicTable [nzData]=\"listOfData\" style='margin:20px 0 0 130px' [nzPageSize]='5'>\r\n          <thead>\r\n          <tr>\r\n            <th>课包结构</th>\r\n            <th>知识图谱</th>\r\n            <th>操作</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr *ngFor=\"let data of basicTable.data\">\r\n            <td>{{ data.sectionName }}</td>\r\n            <td nz-tooltip [nzTooltipTitle]=\"data.knowledgeUnits\">{{ getBingData(data.knowledgeUnits) }}</td>\r\n            <td>\r\n              <a (click)=\"modify(data)\" style='margin-right:5px;'>修改</a>\r\n              <a (click)=\"untie(data)\" style='color:red;'>解绑</a>\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </nz-table>\r\n      </nz-spin>\r\n      <nz-divider></nz-divider>\r\n\r\n      <ng-container *ngIf='teachType===\"22\"'>\r\n        <div class='item-left'>\r\n          <span style='color:red;margin-right:10px;'>*</span>学习计划：<i nz-icon nzType=\"question-circle\" nzTheme=\"outline\"\r\n                                                                     nz-tooltip nzTooltipTitle=\"学习周期不能大于课包中小节总数\"\r\n                                                                     class='question-circle'\r\n                                                                     [nzTooltipOverlayStyle]='{\"max-width\": \"255px\"}'></i>\r\n        </div>\r\n        <nz-table style='margin:20px 0 0 130px' [nzFrontPagination]='false' [nzData]=\"dataSet\">\r\n          <thead>\r\n          <tr>\r\n            <th>适用人群</th>\r\n            <th>学习周期(共{{totalSectionNum}}节）</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          <tr>\r\n            <td>\r\n              适合初学\r\n            </td>\r\n            <td>\r\n              <label nz-checkbox [(ngModel)]=\"applicableZeroBasis\"\r\n                     [disabled]='preview===\"1\"'\r\n                     (ngModelChange)='applicableChange($event,\"juniorWeekNum\",\"applicableZeroBasisWeek\")'\r\n                     style='margin-right:20px;'></label>计划1\r\n              <nz-input-number [disabled]=\"!applicableZeroBasis||preview==='1'\" [(ngModel)]=\"applicableZeroBasisWeek\"\r\n                               [nzMin]=\"1\"\r\n                               (nzFocus)='applicableFocus(\"applicableZeroBasisWeek\")'\r\n                               nzPlaceHolder='请输入周期'\r\n                               (nzBlur)='applicableWeekChange($event,\"juniorWeekNum\",\"applicableZeroBasisWeek\")'\r\n                               [nzStep]=\"1\" style='margin:0 10px;min-width:120px'></nz-input-number>\r\n              周\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              适合有基础\r\n            </td>\r\n            <td>\r\n              <label nz-checkbox [(ngModel)]=\"applicableHasAFoundation\"\r\n                     [disabled]='preview===\"1\"'\r\n                     (ngModelChange)='applicableChange($event,\"middleWeekNum\",\"applicableHasAFoundationWeek\")'\r\n                     style='margin-right:20px;'></label>计划2\r\n              <nz-input-number [disabled]=\"!applicableHasAFoundation||preview==='1'\"\r\n                               [(ngModel)]=\"applicableHasAFoundationWeek\"\r\n                               [nzMin]=\"1\" [nzStep]=\"1\" style='margin:0 10px;min-width:120px'\r\n                               nzPlaceHolder='请输入周期'\r\n                               (nzFocus)='applicableFocus(\"applicableHasAFoundationWeek\")'\r\n                               (nzBlur)='applicableWeekChange($event,\"middleWeekNum\",\"applicableHasAFoundationWeek\")'\r\n              ></nz-input-number>\r\n              周\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              适合速成\r\n            </td>\r\n            <td>\r\n              <label nz-checkbox [(ngModel)]=\"applicableExperts\"\r\n                     [disabled]='preview===\"1\"'\r\n                     (ngModelChange)='applicableChange($event,\"seniorWeekNum\",\"applicableExpertsWeek\")'\r\n                     style='margin-right:20px;'></label>计划3\r\n              <nz-input-number [disabled]=\"!applicableExperts||preview==='1'\" [(ngModel)]=\"applicableExpertsWeek\"\r\n                               [nzMin]=\"1\"\r\n                               [nzStep]=\"1\" style='margin:0 10px;min-width:120px'\r\n                               nzPlaceHolder='请输入周期'\r\n                               (nzFocus)='applicableFocus(\"applicableExpertsWeek\")'\r\n                               (nzBlur)='applicableWeekChange($event,\"seniorWeekNum\",\"applicableExpertsWeek\")'\r\n              ></nz-input-number>\r\n              周\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </nz-table>\r\n        <nz-divider></nz-divider>\r\n      </ng-container>\r\n      <!--      <div>-->\r\n      <!--        <div class='item-left'>-->\r\n      <!--          <span style='color:red;margin-right:10px;'>*</span>精讲阶段：-->\r\n      <!--        </div>-->\r\n      <!--        <nz-switch [(ngModel)]=\"isDailyOn\" nzCheckedChildren=\"开\"-->\r\n      <!--                   (ngModelChange)=\"isSwitchOnChange('isDailyOn')\"-->\r\n      <!--                   nzUnCheckedChildren=\"关\"-->\r\n      <!--                   style='margin-left:20px;' [nzDisabled]='preview===\"1\"||isStandard'></nz-switch>-->\r\n      <!--      </div>-->\r\n      <!--      <nz-divider></nz-divider>-->\r\n      <div>\r\n        <div class='item-left'>\r\n          <span style='color:red;margin-right:10px;'>*</span>冲刺阶段：\r\n        </div>\r\n        <nz-switch [nzDisabled]='preview===\"1\"||isStandard' [(ngModel)]=\"isSprintOn\" nzCheckedChildren=\"开\"\r\n                   nzUnCheckedChildren=\"关\"\r\n                   (ngModelChange)=\"isSwitchOnChange('isSprintOn')\"\r\n                   style='margin-left:20px;'></nz-switch>\r\n      </div>\r\n      <div *ngIf='isSprintOn' style='margin-top:20px'>\r\n        <div class='item-left'>\r\n          <span style='color:red;margin-right:10px;'>*</span>冲刺开始日期：\r\n        </div>\r\n        <nz-date-picker [(ngModel)]=\"sprintTime\"\r\n                        (nzOnOpenChange)='timeOpen($event,\"sprintTime\")'\r\n                        (ngModelChange)=\"timeChange($event,'sprintTime')\"\r\n                        style='margin-left:20px;width:200px' [disabled]='preview===\"1\"'></nz-date-picker>\r\n      </div>\r\n      <!--      <div class='item'>-->\r\n      <!--        <div class='item-left'>-->\r\n      <!--          <span style='color:red;margin-right:10px;'>*</span>冲刺考试：-->\r\n      <!--        </div>-->\r\n      <!--        <div class='list-container'>-->\r\n      <!--          <div class='list'>-->\r\n      <!--            <div style='float:left'>-->\r\n      <!--              <i nz-icon nzType=\"file-text\" nzTheme=\"outline\"></i>-->\r\n      <!--              <span style='margin-left:20px;'>试卷名称</span>-->\r\n      <!--            </div>-->\r\n      <!--            <div style='float:right'>-->\r\n      <!--              <div class='operat'>-->\r\n      <!--                <i nz-icon nzType=\"eye\" nzTheme=\"outline\" style='cursor:pointer;'></i>-->\r\n      <!--                <span class='icon-del'>预览</span>-->\r\n      <!--              </div>-->\r\n      <!--              <div class='operat' *ngIf='preview===\"0\"'>-->\r\n      <!--                <i nz-icon nzType=\"edit\" nzTheme=\"outline\" style='cursor:pointer;'></i>-->\r\n      <!--                <span class='icon-del'>编辑</span>-->\r\n      <!--              </div>-->\r\n      <!--              <div class='operat' *ngIf='preview===\"0\"'>-->\r\n      <!--                <i nz-icon nzType=\"delete\" nzTheme=\"outline\" style='cursor:pointer;'></i>-->\r\n      <!--                <span class='icon-del'>删除</span>-->\r\n      <!--              </div>-->\r\n      <!--            </div>-->\r\n      <!--          </div>-->\r\n      <!--        </div>-->\r\n\r\n      <!--      </div>-->\r\n      <!--      <button nz-button style='margin-left:100px' (click)='addVolume()' *ngIf='preview===\"0\"'>新增组卷</button>-->\r\n      <!--      <button nz-button style='margin-left:20px' *ngIf='preview===\"0\"'>试卷调用</button>-->\r\n      <nz-divider></nz-divider>\r\n      <div>\r\n        <div class='item-left'>\r\n          <span style='color:red;margin-right:10px;'>*</span>密押阶段：\r\n        </div>\r\n        <nz-switch [(ngModel)]=\"isFinalOn\" nzCheckedChildren=\"开\" nzUnCheckedChildren=\"关\"\r\n                   (ngModelChange)=\"isSwitchOnChange('isFinalOn')\"\r\n                   style='margin-left:20px;' [nzDisabled]='preview===\"1\"||isStandard'></nz-switch>\r\n      </div>\r\n\r\n\r\n      <div *ngIf='isFinalOn' style='margin-top:20px'>\r\n        <div class='item-left'>\r\n          <span style='color:red;margin-right:10px;'>*</span>密押开始日期：\r\n        </div>\r\n        <nz-date-picker [(ngModel)]=\"finalTime\"\r\n                        (nzOnOpenChange)='timeOpen($event,\"finalTime\")'\r\n                        (ngModelChange)=\"timeChange($event,'finalTime')\"\r\n                        style='margin-left:20px;width:200px' [disabled]='preview===\"1\"'></nz-date-picker>\r\n      </div>\r\n\r\n      <!--      <div class='item'>-->\r\n      <!--        <div class='item-left'>-->\r\n      <!--          <span style='color:red;margin-right:10px;'>*</span>押题考试：-->\r\n      <!--        </div>-->\r\n      <!--        <div class='list-container'>-->\r\n      <!--          <div class='list'>-->\r\n      <!--            <div style='float:left'>-->\r\n      <!--              <i nz-icon nzType=\"file-text\" nzTheme=\"outline\"></i>-->\r\n      <!--              <span style='margin-left:20px;'>试卷名称</span>-->\r\n      <!--            </div>-->\r\n      <!--            <div style='float:right'>-->\r\n      <!--              <div class='operat'>-->\r\n      <!--                <i nz-icon nzType=\"eye\" nzTheme=\"outline\" style='cursor:pointer;'></i>-->\r\n      <!--                <span class='icon-del'>预览</span>-->\r\n      <!--              </div>-->\r\n      <!--              <div class='operat'>-->\r\n      <!--                <i nz-icon nzType=\"edit\" nzTheme=\"outline\" style='cursor:pointer;' *ngIf='preview===\"0\"'></i>-->\r\n      <!--                <span class='icon-del'>编辑</span>-->\r\n      <!--              </div>-->\r\n      <!--              <div class='operat'>-->\r\n      <!--                <i nz-icon nzType=\"delete\" nzTheme=\"outline\" style='cursor:pointer;' *ngIf='preview===\"0\"'></i>-->\r\n      <!--                <span class='icon-del'>删除</span>-->\r\n      <!--              </div>-->\r\n      <!--            </div>-->\r\n      <!--          </div>-->\r\n      <!--        </div>-->\r\n      <!--      </div>-->\r\n      <!--      <button nz-button style='margin-left:100px' (click)='addVolume()' *ngIf='preview===\"0\"'>新增组卷</button>-->\r\n      <!--      <button nz-button style='margin-left:20px' *ngIf='preview===\"0\"'>试卷调用</button>-->\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n\r\n<!--<nz-modal [(nzVisible)]=\"isVisible\" [nzMaskClosable]=\"false\" nzTitle=\"考试设置\" (nzOnCancel)=\"isVisible=false\">-->\r\n<!--  <form nz-form [formGroup]=\"examSettingForm\">-->\r\n<!--    <nz-form-item>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>考试时长</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"不能为空\">-->\r\n<!--        <nz-input-number [nzMin]=\"1\" [nzStep]=\"1\"-->\r\n<!--                         formControlName=\"examLength\" style='margin-right:10px'></nz-input-number>-->\r\n<!--        分钟-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n\r\n<!--    <nz-form-item>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>是否机考</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"不能为空\">-->\r\n<!--        <nz-radio-group formControlName='isComputer'>-->\r\n<!--          <label nz-radio nzValue=\"1\">是</label>-->\r\n<!--          <label nz-radio nzValue=\"0\">否</label>-->\r\n<!--        </nz-radio-group>-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n\r\n\r\n<!--    <nz-form-item *ngIf='examSettingForm.value.isComputer===\"1\"'>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>机考类型</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"不能为空\">-->\r\n<!--        <nz-select formControlName=\"computerType\">-->\r\n<!--          <nz-option nzValue=\"1\" nzLabel=\"初级\"></nz-option>-->\r\n<!--          <nz-option nzValue=\"2\" nzLabel=\"中级\"></nz-option>-->\r\n<!--          <nz-option nzValue=\"3\" nzLabel=\"税务师\"></nz-option>-->\r\n<!--        </nz-select>-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n\r\n<!--    <nz-form-item>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>有效时间</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"不能为空\">-->\r\n<!--        <nz-date-picker (ngModelChange)=\"onChange($event)\" formControlName=\"deadTime\"></nz-date-picker>-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n\r\n<!--    <nz-form-item>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>答题次数</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"不能为空\">-->\r\n<!--        <nz-radio-group formControlName='answerTimes' [(ngModel)]='examSettingForm.value.answerTimes'>-->\r\n<!--          <label nz-radio [nzValue]=\"0\">无限制</label>-->\r\n<!--          <label nz-radio [nzValue]=\"1\">-->\r\n<!--            <nz-input-number [(ngModel)]=\"value\" [nzMin]=\"1\" [nzMax]=\"100\" [nzStep]=\"1\"-->\r\n<!--                             [ngModelOptions]=\"{standalone: true}\"></nz-input-number>-->\r\n<!--          </label>-->\r\n<!--        </nz-radio-group>-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n\r\n\r\n<!--    <nz-form-item>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>出成绩</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"不能为空\">-->\r\n<!--        <nz-radio-group formControlName='resultWay'>-->\r\n<!--          <label nz-radio nzValue=\"1\">交卷即出</label>-->\r\n<!--        </nz-radio-group>-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n\r\n\r\n<!--  </form>-->\r\n<!--  <div *nzModalFooter>-->\r\n<!--    <button nz-button (click)=\"isVisible = false\">取消</button>-->\r\n<!--    <button nz-button nzType=\"primary\" (click)=\"saveExamination()\">确定</button>-->\r\n<!--  </div>-->\r\n<!--</nz-modal>-->\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"chapterBindingVisible\" [nzMaskClosable]=\"false\" nzTitle=\"章节绑定\"\r\n          (nzOnCancel)=\"chapterBindingVisible=false;\"\r\n          [nzFooter]='null'\r\n          nzClassName='self-modal'\r\n          [nzBodyStyle]='{padding:0,\"overflow\": \"auto\"}' [nzWidth]='800'>\r\n  <nz-spin [nzSpinning]=\"bindLoading\" [nzDelay]=\"0\">\r\n    <div class='tree-container'>\r\n      <div class='tree-left'>\r\n        <span class='tree-title'>课包结构</span>\r\n        <div class='struct-container'>\r\n          <app-course-structure-tree\r\n            style='padding-top: 40px;'\r\n            type='operate'\r\n            *ngIf='lessonPackageStructureVisible'\r\n            [chapterSelectable]=\"false\"\r\n            [coursePacketId]=\"coursePacketId\"\r\n            [defaultSection]='defaultSection'\r\n            [defaultExpandedKeys]='defaultChapter'\r\n            (nodeChange)=\"nodeChange($event)\">\r\n          </app-course-structure-tree>\r\n        </div>\r\n      </div>\r\n      <div class='tree-right'>\r\n        <span class='tree-title'>知识图谱结构</span>\r\n        <nz-spin [nzSpinning]=\"knowledgeGraphLoading\" [nzDelay]=\"0\" style='padding: 52px 0 0 20px;'>\r\n          <app-simple-knowledgegraph-tree\r\n            *ngIf=\"knowledgeGraphStructureVisible\"\r\n            model=\"check\"\r\n            [isExpandAll]='false'\r\n            [professionId]=\"knowledgeSubjectId\"\r\n            [defaultCheckedKeys]=\"defaultTreeKey\"\r\n            (nodeChange)=\"nodeChangeKnowledge($event)\"\r\n            [all]='true'>\r\n          </app-simple-knowledgegraph-tree>\r\n        </nz-spin>\r\n      </div>\r\n    </div>\r\n    <div\r\n      class='bind-button'>\r\n      <button nz-button (click)=\"bindKnowledgePoints()\" nzType='primary'>绑定</button>\r\n    </div>\r\n  </nz-spin>\r\n</nz-modal>\r\n\r\n\r\n<!--<ng-template #addExam>-->\r\n<!--  <form nz-form [formGroup]=\"addExamFrom\">-->\r\n<!--    <nz-form-item>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>任务名称</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"任务名称不能为空\">-->\r\n<!--        <input nz-input type=\"text\" formControlName=\"missionName\" placeholder=\"请输入任务名称\"/>-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n<!--    <nz-form-item>-->\r\n<!--      <nz-form-label [nzSpan]=\"5\" nzRequired>组卷方式</nz-form-label>-->\r\n<!--      <nz-form-control [nzSpan]=\"18\" nzHasFeedback nzErrorTip=\"组卷方式不能为空\">-->\r\n<!--        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择组卷方式\" formControlName=\"formingMethod\">-->\r\n<!--          <nz-option nzLabel=\"选题/录题组卷\" nzValue=\"1\"></nz-option>-->\r\n<!--          <nz-option nzLabel=\"题型难度随机组卷\" nzValue=\"2\"></nz-option>-->\r\n<!--          <nz-option nzLabel=\"知识点难度抽题组卷\" nzValue=\"3\"></nz-option>-->\r\n<!--        </nz-select>-->\r\n<!--      </nz-form-control>-->\r\n<!--    </nz-form-item>-->\r\n<!--  </form>-->\r\n<!--</ng-template>-->\r\n\r\n\r\n<!--<nz-modal [(nzVisible)]=\"examListPreview\" (nzOnCancel)=\"examListPreview=false\" nzTitle='选择试卷'-->\r\n<!--          nzWidth='1000'>-->\r\n<!--  <div class='header'>-->\r\n<!--    <div class='header-container'>-->\r\n<!--      <div class='header-item'>-->\r\n<!--        <label style='min-width:90px;line-height:32px'>组卷方式: </label>-->\r\n<!--        <nz-select nzShowSearch nzAllowClear nzPlaceHolder=\"请选择组卷方式\" [(ngModel)]=\"selectedValue\"-->\r\n<!--                   style='margin-right: 20px;width:calc(100% - 100px);flex:1'>-->\r\n<!--          <nz-option nzValue=\"1\" nzLabel=\"选题组卷/录题组卷\"></nz-option>-->\r\n<!--          <nz-option nzValue=\"2\" nzLabel=\"题型难度随机组卷\"></nz-option>-->\r\n<!--          <nz-option nzValue=\"3\" nzLabel=\"知识点难度抽题组卷\"></nz-option>-->\r\n<!--        </nz-select>-->\r\n<!--      </div>-->\r\n<!--      <button nz-button nzType=\"primary\" (click)=\"search()\">查询</button>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--  <nz-table #basicTable [nzData]=\"listOfData\">-->\r\n<!--    <thead>-->\r\n<!--    <tr>-->\r\n<!--      <th>Name</th>-->\r\n<!--      <th>Age</th>-->\r\n<!--      <th>Address</th>-->\r\n<!--      <th>Action</th>-->\r\n<!--    </tr>-->\r\n<!--    </thead>-->\r\n<!--    <tbody>-->\r\n<!--    <tr *ngFor=\"let data of basicTable.data\">-->\r\n<!--      <td>{{ data.name }}</td>-->\r\n<!--      <td>{{ data.age }}</td>-->\r\n<!--      <td>{{ data.address }}</td>-->\r\n<!--      <td>-->\r\n<!--        <a>Action 一 {{ data.name }}</a>-->\r\n<!--        <nz-divider nzType=\"vertical\"></nz-divider>-->\r\n<!--        <a>Delete</a>-->\r\n<!--      </td>-->\r\n<!--    </tr>-->\r\n<!--    </tbody>-->\r\n<!--  </nz-table>-->\r\n\r\n<!--</nz-modal>-->\r\n","import {Component, Inject, Input, LOCALE_ID, OnInit, TemplateRef, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {NzMessageService, NzModalService, NzTreeComponent, NzTreeNodeOptions} from 'ng-zorro-antd';\r\nimport {CourseManageService} from '@app/busi-services/course-manage.service';\r\nimport {NodeChangeEvent} from '../course-structure-tree/course-structure-tree.component';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {MenuService} from 'core/services/menu.service';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {formatDate} from '@angular/common';\r\nimport {timer} from 'rxjs';\r\nimport {ConfirmableFlat, getSetChange} from 'core/decorators';\r\nimport {HttpHeaders, HttpResponse} from '@angular/common/http';\r\nimport {LoadingControl} from 'core/base/common';\r\nimport {STATISTICALRULES} from 'core/base/static-data';\r\nimport {StatisticsLogService} from '@app/busi-services/statistics-log.service';\r\n\r\n@Component({\r\n  selector: 'app-intellectual-adaptation',\r\n  templateUrl: './intellectual-adaptation.component.html',\r\n  styleUrls: ['./intellectual-adaptation.component.less']\r\n})\r\nexport class IntellectualAdaptationComponent implements OnInit {\r\n  date;\r\n  nodes: NzTreeNodeOptions[] = [];\r\n  teacherData = [];\r\n  listOfData = [];\r\n  knowledgeSubjectId = '';\r\n  examSettingForm: FormGroup;\r\n  curNode: NodeChangeEvent;\r\n  defaultTreeKey = [];\r\n  knowledgePointIds = [];\r\n  selectId: any[];\r\n  clickFlag: any = {};\r\n  isVisible = false;\r\n  value = '';\r\n  chapterBindingVisible = false;\r\n  now = new Date();\r\n  isDailyOn = false;\r\n  isSprintOn = false;\r\n  isFinalOn = false;\r\n  courseService;\r\n  defaultTeacherId = [];\r\n  addExamFrom: any;\r\n  selectedValue: any;\r\n  isStandard = false;\r\n  dataSet = [\r\n    {}\r\n  ];\r\n  applicableZeroBasis = false;\r\n  applicableExperts = false;\r\n  applicableHasAFoundation = false;\r\n  examTimePre;\r\n  finalTimePre;\r\n  sprintTimePre;\r\n  examTime; // 国家考试\r\n  finalTime; // 秘压\r\n  sprintTime; // 冲刺\r\n  applicableHasAFoundationWeekPre: any; // 有基础\r\n  applicableExpertsWeekPre: any; // 专家\r\n  applicableZeroBasisWeekPre: any; // 零基础\r\n  applicableHasAFoundationWeek: any;\r\n  applicableExpertsWeek: any;\r\n  applicableZeroBasisWeek: any;\r\n  teachType;\r\n  preview;\r\n  code;\r\n  coursePacketId;\r\n  courseId;\r\n  professionId;\r\n  @getSetChange<boolean>({\r\n    initSet(val) {\r\n      // if (val) {\r\n      this.initIntellectualAdaptationData();\r\n      // }\r\n    },\r\n    set(val) {\r\n      const flag = val ? '1' : '0';\r\n      this.courseMgService.isSmartUpdate(this.coursePacketId, flag).subscribe(res => {\r\n        if (res.status === 201) {\r\n          if (val) {\r\n            this.initIntellectualAdaptationData();\r\n          }\r\n          SessionStorageUtil.putPacketInfoItem('isSmart', flag);\r\n        }\r\n      });\r\n    }\r\n  })\r\n  intellectualAdaptation: boolean;\r\n  bindList = [];\r\n  bindLoading = false; // 章节绑定loading\r\n  knowledgeGraphLoading = false; // 知识图谱loading\r\n  untieLoading = false; // 解绑loading\r\n  totalSectionNum = 0; // 左右节总数\r\n  knowledgeGraphStructureVisible = false;  // 知识图谱树\r\n  lessonPackageStructureVisible = true; // 课程章节树\r\n  defaultSection: object; // 默认选中节\r\n  defaultChapter = []; // 默认点选章\r\n  chapterBindingEdit: boolean;\r\n  examTimeRequire = false;\r\n  @Input() adaptive = {\r\n    middleWeekNum: false,\r\n    juniorWeekNum: false,\r\n    seniorWeekNum: false,\r\n    listOfData: [],\r\n    examTime: null,\r\n    finalTime: null,\r\n    sprintTime: null,\r\n    isSprintOn: false,\r\n    isFinalOn: false,\r\n    examTimeRequire: false\r\n  }; // 用来通知父级当前组件状态\r\n\r\n\r\n  @ViewChild('nzTreeComponent', {static: false}) nzTreeComponent!: NzTreeComponent;\r\n  @ViewChild('addExam') addExam: TemplateRef<any>;\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private courseMgService: CourseManageService,\r\n              private modalService: NzModalService,\r\n              private nzMesService: NzMessageService,\r\n              private route: ActivatedRoute,\r\n              private menuService: MenuService,\r\n              private statisticsLogService: StatisticsLogService,\r\n              @Inject(LOCALE_ID) public locale: string\r\n  ) {\r\n    // this.initFrom();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getParams();\r\n  }\r\n\r\n  initIntellectualAdaptationData() {\r\n    this.getLessonPackage();\r\n    this.getChapterBindList();\r\n  }\r\n\r\n  initFrom() {\r\n    this.addExamFrom = this.fb.group({\r\n      missionName: ['', [Validators.required]],\r\n      formingMethod: [1, [Validators.required]],\r\n    });\r\n    this.examSettingForm = this.fb.group({\r\n      id: [this.courseId],\r\n      examLength: [0, Validators.required],\r\n      isComputer: ['1', Validators.required],\r\n      computerType: ['1'],\r\n      answerTimes: [0, Validators.required],\r\n      deadTime: [new Date(), Validators.required],\r\n      resultWay: ['1', Validators.required],\r\n    });\r\n  }\r\n\r\n// 回显操作\r\n  getLessonPackage() {\r\n    this.courseMgService.getLessonPackage(this.coursePacketId, this.courseId).subscribe(res => {\r\n      if (res.status === 200) {\r\n        const {\r\n          teacherDtoList, knowledgeSubjectId, examTime, sprintTime, finalTime,\r\n          isDailyOn, isSprintOn, isFinalOn, defaultTeacherId, juniorWeekNum, middleWeekNum, seniorWeekNum, totalSectionNum\r\n        } = res.data;\r\n        this.teacherData = teacherDtoList;\r\n        this.defaultTeacherId = defaultTeacherId ? defaultTeacherId.split(',') : [];\r\n        this.knowledgeSubjectId = knowledgeSubjectId;\r\n        this.isDailyOn = isDailyOn === '1' ? true : false;\r\n        this.isSprintOn = this.adaptive.isSprintOn = isSprintOn === '1' ? true : false;\r\n        this.isFinalOn = this.adaptive.isFinalOn = isFinalOn === '1' ? true : false;\r\n        this.totalSectionNum = totalSectionNum ? totalSectionNum : 0;\r\n        if ((this.isSprintOn || this.isFinalOn) && this.intellectualAdaptation) {\r\n          this.examTimeRequire = true;\r\n          this.adaptive.examTimeRequire = true;\r\n        } else {\r\n          this.examTimeRequire = false;\r\n          this.adaptive.examTimeRequire = false;\r\n        }\r\n        // 回显考试日期\r\n        ['examTime', 'sprintTime', 'finalTime'].forEach((item => {\r\n          if (res.data[item]) {\r\n            this[item] = this[item + 'Pre'] = this.adaptive[item] = new Date(res.data[item]);\r\n          } else {\r\n            this[item] = this[item + 'Pre'] = this.adaptive[item] = null;\r\n          }\r\n        }));\r\n        // 回显录播讲师\r\n        if (teacherDtoList.length) {\r\n          teacherDtoList.forEach((ee, ii) => {\r\n            if (this.defaultTeacherId.indexOf(ee.teacherId) > -1) {\r\n              this.clickFlag[ii] = true;\r\n            } else {\r\n              this.clickFlag[ii] = false;\r\n            }\r\n          });\r\n        }\r\n        // 回显录播计划\r\n        if (juniorWeekNum) {\r\n          this.applicableZeroBasisWeekPre = this.applicableZeroBasisWeek = juniorWeekNum;\r\n          this.applicableZeroBasis = true;\r\n          this.adaptive.juniorWeekNum = true;\r\n        } else {\r\n          this.adaptive.juniorWeekNum = false;\r\n        }\r\n        if (middleWeekNum) {\r\n          this.applicableHasAFoundationWeekPre = this.applicableHasAFoundationWeek = middleWeekNum;\r\n          this.applicableHasAFoundation = true;\r\n          this.adaptive.middleWeekNum = true;\r\n        } else {\r\n          this.adaptive.middleWeekNum = false;\r\n        }\r\n        if (seniorWeekNum) {\r\n          this.applicableExpertsWeekPre = this.applicableExpertsWeek = seniorWeekNum;\r\n          this.applicableExperts = true;\r\n          this.adaptive.seniorWeekNum = true;\r\n        } else {\r\n          this.adaptive.seniorWeekNum = false;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n// 保存操作\r\n  setLessonPackage(params) {\r\n    // if (this.checkData() || this.checkPlan()) {\r\n    //   return true;\r\n    // }\r\n    // const {\r\n    //   coursePacketId, defaultTeacherId, examTime, sprintTime, finalTime, isDailyOn,\r\n    //   isSprintOn, isFinalOn, applicableHasAFoundationWeek, applicableExpertsWeek, applicableZeroBasisWeek\r\n    // } = this;\r\n    // const params = {\r\n    //   id: coursePacketId,\r\n    //   defaultTeacherId: defaultTeacherId.join(','),\r\n    //   examTime: formatDate(examTime, 'yyyy-MM-dd', this.locale),\r\n    //   sprintTime: formatDate(sprintTime, 'yyyy-MM-dd', this.locale),\r\n    //   finalTime: formatDate(finalTime, 'yyyy-MM-dd', this.locale),\r\n    //   isDailyOn: isDailyOn ? '1' : '0',\r\n    //   isSprintOn: isSprintOn ? '1' : '0',\r\n    //   isFinalOn: isFinalOn ? '1' : '0',\r\n    //   middleWeekNum: applicableHasAFoundationWeek ? applicableHasAFoundationWeek : 0,\r\n    //   seniorWeekNum: applicableExpertsWeek ? applicableExpertsWeek : 0,\r\n    //   juniorWeekNum: applicableZeroBasisWeek ? applicableZeroBasisWeek : 0,\r\n    // };\r\n    return new Promise((resolve) => {\r\n      this.courseMgService.setLessonPackage(params).subscribe(res => {\r\n        if (res.status === 201) {\r\n          if ((this.isSprintOn || this.isFinalOn) && this.intellectualAdaptation) {\r\n            this.examTimeRequire = true;\r\n            this.adaptive.examTimeRequire = true;\r\n          } else {\r\n            this.examTimeRequire = false;\r\n            this.adaptive.examTimeRequire = false;\r\n          }\r\n          const paramsKey = Object.keys(params);\r\n          const arr = ['middleWeekNum', 'seniorWeekNum', 'juniorWeekNum', 'isSprintOn', 'isFinalOn']\r\n            .filter(item => paramsKey.indexOf(item) > -1);\r\n          // 保存向父级传输数据\r\n          arr.forEach((value) => {\r\n            if (Number(params[value])) {\r\n              this.adaptive[value] = true;\r\n            } else {\r\n              this.adaptive[value] = false;\r\n            }\r\n          });\r\n          resolve(true);\r\n        } else {\r\n          resolve(false);\r\n        }\r\n      }, err => {\r\n        resolve(false);\r\n      });\r\n    });\r\n  }\r\n\r\n// 点击指导老师\r\n  getflag(i: number, item) {\r\n    if (this.preview === '1') {\r\n      return;\r\n    }\r\n    Object.keys(this.clickFlag).forEach((e, ii) => {\r\n      this.clickFlag[ii] = false;\r\n    });\r\n    this.clickFlag[i] = true;\r\n    this.defaultTeacherId = [];\r\n    this.defaultTeacherId.push(item.teacherId);\r\n    this.setLessonPackage({\r\n      id: this.coursePacketId,\r\n      defaultTeacherId: this.defaultTeacherId.join(','),\r\n    });\r\n  }\r\n\r\n// 获取章节绑定列表\r\n  getChapterBindList() {\r\n    const params = {\r\n      courseId: this.courseId,\r\n      coursePacketId: this.coursePacketId\r\n    };\r\n    this.courseMgService.getChapterBindList(params).subscribe(res => {\r\n      if (res.status === 200) {\r\n        if (res.data.length > 0) {\r\n          this.listOfData = res.data.map((e, i) => {\r\n            return {\r\n              sectionName: e.chapterSeq + '.' + e.sectionSeq + ' ' + e.sectionName,\r\n              knowledgeUnits: e.knowledgeUnits,\r\n              sectionId: e.sectionId,\r\n              chapterId: e.chapterId\r\n            };\r\n          });\r\n          this.adaptive.listOfData = JSON.parse(JSON.stringify(this.listOfData));\r\n        } else {\r\n          this.listOfData = [];\r\n          this.adaptive.listOfData = [];\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n// 点击章节绑定\r\n  bindKnowledgePoints() {\r\n    this.bindLoading = true;\r\n    this.courseMgService.bindKnowledgePointsBatch(this.bindList).subscribe(res => {\r\n      if (res.status === 201) {\r\n        const field = this.chapterBindingEdit ? 'modify' : 'addCode';\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '章节绑定' + (this.chapterBindingEdit ? '修改' : '新增'),\r\n          actionCode: STATISTICALRULES.packetInfo['intellectual-chapterbind-action'][field],\r\n          content: JSON.stringify(this.bindList),\r\n        });\r\n        this.getChapterBindList();\r\n      }\r\n      this.bindLoading = false;\r\n    }, err => {\r\n      this.bindLoading = false;\r\n    });\r\n  }\r\n\r\n  bind() {\r\n    this.bindList = [];\r\n    this.chapterBindingVisible = true;\r\n    this.chapterBindingEdit = false;\r\n    this.knowledgeGraphStructureVisible = false;\r\n    this.lessonPackageStructureVisible = false;\r\n    timer(0).subscribe(() => {\r\n      this.lessonPackageStructureVisible = true;\r\n    });\r\n  }\r\n\r\n\r\n  // 章节点击\r\n  nodeChange(node: NodeChangeEvent) {\r\n    this.curNode = node;\r\n    const {id, key} = node.data;\r\n    const idR = id ? id : (key ? key : '');\r\n    let idx;\r\n    if (this.bindList.every((e, i) => {\r\n      if (e.courseSectionId === idR) {\r\n        idx = i;\r\n        return;\r\n      } else {\r\n        return true;\r\n      }\r\n    })) {\r\n      // 没有缓存\r\n      this.knowledgeGraphLoading = true;\r\n      const params = {\r\n        courseSectionId: idR,\r\n        courseId: this.courseId,\r\n        coursePacketId: this.coursePacketId\r\n      };\r\n      this.courseMgService.getKnowledgePoints(params).subscribe(res => {\r\n        this.knowledgeGraphLoading = false;\r\n        if (res.status === 200) {\r\n          this.defaultTreeKey = res.data.map(e => e.knowledgeUnitId);\r\n          this.knowledgeGraphStructureVisible = true;\r\n          this.selectId = this.defaultTreeKey;\r\n          this.bindList.push({\r\n            courseSectionId: idR,\r\n            courseId: this.courseId,\r\n            coursePacketId: this.coursePacketId,\r\n            knowledgeUnitIdList: this.defaultTreeKey\r\n          });\r\n        }\r\n      }, () => {\r\n        this.knowledgeGraphLoading = false;\r\n      });\r\n    } else {\r\n      // 从缓存中取\r\n      this.defaultTreeKey = this.bindList.filter((ee, ii) => ii === idx)[0].knowledgeUnitIdList;\r\n      this.selectId = this.defaultTreeKey;\r\n      this.knowledgeGraphStructureVisible = true;\r\n    }\r\n  }\r\n\r\n// 知识点点击\r\n  nodeChangeKnowledge(nodeOpt: any) {\r\n    // 收集点选\r\n    if (nodeOpt.length) {\r\n      this.selectId = [];\r\n      nodeOpt.forEach(e => {\r\n        if (e.origin.kType === '2') {\r\n          if (e.origin.children && e.origin.children.length) {\r\n            e.origin.children.forEach(eeee => {\r\n              this.selectId.push(eeee.id);\r\n            });\r\n          }\r\n        } else if (e.origin.kType === '3') {\r\n          this.selectId.push(e.origin.id);\r\n        } else {\r\n          if (e.origin.children && e.origin.children.length) {\r\n            e.origin.children.forEach(ee => {\r\n              if (ee.children && ee.children.length) {\r\n                ee.children.forEach((eee) => {\r\n                  this.selectId.push(eee.id);\r\n                });\r\n              }\r\n            });\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      this.selectId = [];\r\n    }\r\n    // 存到缓存\r\n    this.bindList.every((eee, iii) => {\r\n      if (eee.courseSectionId === this.curNode.data.id || eee.courseSectionId === this.curNode.data.key) {\r\n        this.bindList[iii].knowledgeUnitIdList = this.selectId;\r\n        return;\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  applicableChange(e: boolean, key: string, label: string) {\r\n    if (!e) {\r\n      const map = {\r\n        seniorWeekNum: 'applicableExperts',\r\n        middleWeekNum: 'applicableHasAFoundation',\r\n        juniorWeekNum: 'applicableZeroBasis'\r\n      };\r\n      const {applicableZeroBasisWeek, applicableExpertsWeek, applicableHasAFoundationWeek} = this;\r\n      if ((\r\n        key === 'juniorWeekNum' && !(applicableHasAFoundationWeek || applicableExpertsWeek)\r\n      ) || (\r\n        key === 'middleWeekNum' && !(applicableZeroBasisWeek || applicableExpertsWeek)\r\n      ) || (\r\n        key === 'seniorWeekNum' && !(applicableHasAFoundationWeek || applicableZeroBasisWeek)\r\n      )) {\r\n        this.nzMesService.warning('学习计划为必填项,请保留至少一个计划');\r\n        timer(0).subscribe(() => {\r\n          this[map[key]] = true;\r\n        });\r\n        return;\r\n      }\r\n      this[label] = '';\r\n      this.setLessonPackage({\r\n        id: this.coursePacketId,\r\n        [key]: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  private getParams() {\r\n    const {courseId, id, professionId, status, code, teachType, isSmart, preview, isUsed} = SessionStorageUtil.getPacketInfo();\r\n    this.courseId = courseId;\r\n    this.coursePacketId = id;\r\n    this.professionId = professionId;\r\n    this.isStandard = isUsed > 0;\r\n    this.code = code;\r\n    this.teachType = teachType;\r\n    this.intellectualAdaptation = isSmart === '1';\r\n    this.preview = preview;\r\n  }\r\n\r\n\r\n  private checkPlan() {\r\n    if (this.applicableZeroBasis) {\r\n      if (!this.applicableZeroBasisWeek) {\r\n        this.nzMesService.warning('学习计划勾选了适用零基础必须填写具体值');\r\n        return true;\r\n      }\r\n    }\r\n    if (this.applicableHasAFoundation) {\r\n      if (!this.applicableHasAFoundationWeek) {\r\n        this.nzMesService.warning('学习计划勾选了适用有基础必须填写具体值');\r\n        return true;\r\n      }\r\n    }\r\n    if (this.applicableExperts) {\r\n      if (!this.applicableExpertsWeek) {\r\n        this.nzMesService.warning('学习计划勾选了使用专家必须填写具体值');\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n// 根据需求检查日期\r\n  private checkData(key) {\r\n    const {isSprintOn, isFinalOn, examTime, sprintTime, finalTime} = this;\r\n    if (isSprintOn) {\r\n      if (examTime && sprintTime) {\r\n        if (examTime.getTime() <= sprintTime.getTime()) {\r\n          this.nzMesService.warning(key === 'examTime' ? '国家考试日期应大于冲刺开始日期' : '冲刺开始日期应小于国家考试日期');\r\n          return true;\r\n        }\r\n      }\r\n      if (isFinalOn && finalTime && sprintTime) {\r\n        if (finalTime.getTime() <= sprintTime.getTime()) {\r\n          this.nzMesService.warning(key === 'sprintTime' ? '冲刺开始日期应小于密押开始日期' : '密押开始日期应大于冲刺开始日期');\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n    if (isFinalOn && examTime && finalTime) {\r\n      if (examTime.getTime() <= finalTime.getTime()) {\r\n        this.nzMesService.warning(key === 'examTime' ? '国家考试日期应大于密押开始日期' : '密押开始日期应小于国家考试日期');\r\n        return true;\r\n      }\r\n    }\r\n  }\r\n\r\n  timeChange(date: any, key: string) {\r\n    if (this[key + 'Pre']) { // 非第一次\r\n      if (date && date.getTime() !== this[key + 'Pre'].getTime()) { // 对比上次时间不同才保存\r\n        this.checkAndSave(date, key, this[key + 'Pre']);\r\n      } else {\r\n        if (!date) {\r\n          if (key === 'examTime' && !this.examTimeRequire) {\r\n            this.checkAndSave(date, key, null);\r\n          } else {\r\n            if (!this.intellectualAdaptation) {\r\n              this.checkAndSave(date, key, null);\r\n            } else {\r\n              this.nzMesService.warning(key === 'examTime' ? '开启了冲刺阶段或者密押阶段，国家考试时间是必填项，请不要清除掉！'\r\n                : this.isStandard ? '课包启用后不可清空' : '如果需要清空日期请关闭该阶段即可');  // 开关打开下不能清空日期\r\n              timer(0).subscribe(() => {\r\n                this[key] = this[key + 'Pre'];\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else { // 第一次\r\n      if (date) {\r\n        this.checkAndSave(date, key, null);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkAndSave(date: any, key: string, setValue) {\r\n    if (this.checkData(key) || this.checkPlan()) { // 保证了空值跳过校验\r\n      timer(0).subscribe(() => {\r\n        this[key] = setValue; // 如果校验失败回显缓存的值\r\n      });\r\n      return;\r\n    }\r\n    this.setLessonPackage({\r\n      id: this.coursePacketId,\r\n      [key]: formatDate(date, 'yyyy-MM-dd', this.locale)\r\n    }).then((flag) => {\r\n      if (!flag) {\r\n        timer(0).subscribe(() => {\r\n          this[key] = setValue;\r\n        });\r\n      } else {\r\n        this[key + 'Pre'] = this.adaptive[key] = this[key];\r\n      }\r\n    });\r\n  }\r\n\r\n  isSwitchOnChange(key: string) {\r\n    const param = {\r\n      id: this.coursePacketId,\r\n      [key]: this[key] ? '1' : '0'\r\n    };\r\n    if (key === 'isSprintOn' && !this[key]) {\r\n      this.sprintTime = this.sprintTimePre = null;\r\n      param.sprintTime = formatDate(null, 'yyyy-MM-dd', this.locale);\r\n    } else if (key === 'isFinalOn' && !this[key]) {\r\n      this.finalTime = this.finalTimePre = null;\r\n      param.finalTime = formatDate(null, 'yyyy-MM-dd', this.locale);\r\n    }\r\n    this.setLessonPackage(param);\r\n  }\r\n\r\n  applicableWeekChange(data: any, key: string, label: string) {\r\n    //   middleWeekNum: applicableHasAFoundationWeek ? applicableHasAFoundationWeek : 0,\r\n    //   seniorWeekNum: applicableExpertsWeek ? applicableExpertsWeek : 0,\r\n    //   juniorWeekNum: applicableZeroBasisWeek ? applicableZeroBasisWeek : 0,\r\n    if (this[label + 'Pre']) {\r\n      if (this[label] && this[label] > 0) {\r\n        if (this[label] !== this[label + 'Pre']) {\r\n          this.setLessonPackage({\r\n            id: this.coursePacketId,\r\n            [key]: this[label]\r\n          });\r\n        }\r\n      } else {\r\n        timer(0).subscribe(() => {\r\n          this[label] = this[label + 'Pre'];\r\n        });\r\n      }\r\n    } else {\r\n      if (this[label] && this[label] > 0) {\r\n        this.setLessonPackage({\r\n          id: this.coursePacketId,\r\n          [key]: this[label]\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n// 缓存上次时间用以校验是否请求保存\r\n  timeOpen(flag: boolean, key: string) {\r\n    if (flag) {\r\n      this[key + 'Pre'] = this[key];\r\n    }\r\n  }\r\n\r\n  applicableFocus(key: string) {\r\n    this[key + 'Pre'] = this[key];\r\n  }\r\n\r\n  // 解绑\r\n  @ConfirmableFlat({\r\n      title: '解绑',\r\n      content: (args) => ('确定对“' + args[0].sectionName + '小节名称”与知识图谱进行解绑吗？'),\r\n      type: 'warning'\r\n    }\r\n  )\r\n  untie(data: any, loadingControl?: LoadingControl) {\r\n    this.untieLoading = loadingControl.loading = true;\r\n    this.courseMgService.unbindKnowledgePoints(data.sectionId).subscribe((res) => {\r\n      this.untieLoading = loadingControl.loading = false;\r\n      if (res.status === 200) {\r\n        this.statisticsLogService.statisticsPacketInfoLog({\r\n          name: '章节绑定解绑',\r\n          actionCode: STATISTICALRULES.packetInfo['intellectual-chapterbind-action'].delCode,\r\n          content: JSON.stringify({sectionId: data.sectionId}),\r\n        });\r\n        this.bindList.every((item, itemIndex) => {\r\n          if (item.id === data.sectionId) {\r\n            this.bindList.splice(itemIndex, 1);\r\n          } else {\r\n            return true;\r\n          }\r\n        });\r\n        this.getChapterBindList();\r\n      }\r\n    }, () => {\r\n      this.untieLoading = loadingControl.loading = false;\r\n    });\r\n  }\r\n\r\n  // 修改\r\n  modify(data: any) {\r\n    this.chapterBindingEdit = true;\r\n    this.knowledgeGraphStructureVisible = false;\r\n    this.lessonPackageStructureVisible = false;\r\n    this.chapterBindingVisible = true;\r\n    this.bindList = [];\r\n    setTimeout(() => {\r\n      this.defaultSection = {key: data.sectionId}; // 定位节\r\n      this.defaultChapter = [data.chapterId.split(',')[0]]; // 定位章\r\n      this.lessonPackageStructureVisible = true;\r\n    });\r\n  }\r\n\r\n  getBingData(knowledgeUnits: any) {\r\n    const knoArr = knowledgeUnits.split(',');\r\n    if (knoArr.length > 5) {\r\n      knoArr.length = 5;\r\n      return knoArr.join(',') + ',...';\r\n    } else {\r\n      return knowledgeUnits;\r\n    }\r\n  }\r\n\r\n  export() {\r\n    this.courseMgService.exportExcelKno(this.coursePacketId).subscribe((resp: HttpResponse<Blob>) => {\r\n        const headers: HttpHeaders = resp.headers;\r\n        // (window as any).aa=headers.get('content-disposition').split('=')[1];\r\n        // console.log(headers.get('content-disposition').split('=')[1]);\r\n        const link = document.createElement('a');\r\n        // 支持HTML5下载属性的浏览器\r\n        const url = URL.createObjectURL(resp.body);\r\n        link.setAttribute('href', url);\r\n        link.setAttribute('download', '课包知识点题目难度导出.xls');\r\n        link.style.visibility = 'hidden';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      },\r\n      error => this.nzMesService.error(error));\r\n  }\r\n}\r\n"]}