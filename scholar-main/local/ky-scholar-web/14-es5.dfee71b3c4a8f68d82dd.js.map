{"version":3,"sources":["webpack:///layout/exercise-bank/exercises-lib/exercises-header/exercises-header.component.ts","webpack:///layout/exercise-bank/exercises-lib/exercises-header/exercises-header.component.html","webpack:///layout/exercise-bank/exercises-lib/smart-question/smart-question.component.html","webpack:///layout/exercise-bank/exercises-lib/smart-question/smart-question.component.ts","webpack:///layout/exercise-bank/exercise-bank.component.html","webpack:///layout/exercise-bank/exercises-lib/view-answer/view-answer.component.html","webpack:///layout/exercise-bank/exercises-lib/view-answer/view-answer.component.ts","webpack:///layout/exercise-bank/exercise-bank.component.ts","webpack:///layout/exercise-bank/exercise-bank-routing.module.ts","webpack:///layout/exercise-bank/exercise-bank.module.ts"],"names":["ExerciseseaderComponent","router","title","getPacketInfoItem","path","getBackUrl","this","navigateByUrl","goback","showModalEmit","SmartQuestionComponent","message","notification","tikuService","maxScreen","data","idx","current","knowledgePointsParam","currenType","markQuestion","smartQuestion","paramExpand","isPreviewpolyway","submitted","flag","answer","answers","enumKey","loginSignInfo","getUser","updateRecord","isLast","notificat$","lookAnswer","subscribe","res","initInfo","changes","unsubscribe","knowledgesQuestion","forEach","key","questionOptions","length","addOption","window","atob","l","split","error","getDetailsOfKnowledgePoints","push","answerOption","answerContent","index","param8","status","name","questionsInfo","knowledgePointCode","typeId","questionId","id","userAnswer","userAnswers","initAnswer","score","isCorrect","getScore","every","question","j","getAnswers","putAnswers","answersJson","uid","paperUuid","redo","emit","params","JSON","stringify","postAjax","environment","paperApi","result","parse","code","e","type","Number","ee","arr","isSelect","currentItem","join","item","isSuccess","sort","ii","isError","warning","collectAnswers","recordTheProblemz","paperSubmit","oneStopAnswerSubmission","mediumQuestion","difficultQuestion","easyQuestion","i","ViewAnswerComponent","ExerciseBankComponent","ExerciseBankRoutingModule","ExerciseBankModule","routes","component","route","sanitizer","isVisible","currentIndex","orgCode","getOrgCode","isLoading","tips","courseCode","konwledges","experiences","userId","thirdId","prefix","ow365","substr","fraction","questions","knowledgePointsParamString","initParams","recordingType","getMarkQuestionRecording","putAnswersInfo","echoData","courseData","getSelectedCourse","exercise","getExerciseKey","uuid","paperId","tpaperId","getQuestionInit","removeQuestionInit","getUuId","groups","paper","snapshot","queryParams","updateUuid","sectionId","passUuid","then","startToDoTheProblem","info","history","back","paperDataCache","getPaperTotal","paperData","param1","param2","param3","param4","param5","param6","param7","param9","param10","url","videoAnalysis","bypassSecurityTrustResourceUrl","timerEnd$","timer","forkJoin","getRecord","getPaperInfo","ret","Array","isArray","convertData","errorMessage","err","setExerciseKey","timer$","firstItem","Promise","resolve","knowledgePoints","map","experienceValue","replyToTestPaperInformation","getStage","coursePacketId","stage","phase","getPacketInfo","curProgress","courseId","professionId","lessonCount","isSmart","teachType","auditStatus","preview","createrId","pcode","knowledgeSubjectId","fn","codeUid","getProdIdSync","proId","taskType","studentId","getUserId","canDoTheNextQuestion","ifLastQuestion","gotoViewAnswer","success","r","toFixed","Object","keys","update","Observable","observer","setParams","isOutLine","String","markQuestiontype","next","observerNext","complete","console","log","param","getAjax","record","result1","examRecords","recordIds","recordLength","paperItem","paperItemIndex","itemP","correctAnswer","userasw","innerIndex","userAns","errorAnswer","userAnswerItem","answerX","innerIndexX","indexOf","recordLastId","getLastId","itemi","itemx","fill","xx","total","recordId","obj","itemI","inner","currentType","a","b","lastArr","filter","children","successModal","knowledgeList","correctKnowledges","errorKnowledges","StringI","passRecord","getAnswersInfo","queryParamMap","get","getKnowledgePointData","isOutline","isPass","resT","currentStage","nextTarget","isLastTarget","nextStage","isLastStage","trainAgainReal","getKnowledgePointsDetail","putQuestionInit","pointCodes","element","CODE","EXPERIENCEVALUE","getIndexType","smartQuestionIndex","smartQuestionType","knowledges","successCodes","errorCodes","from","Set","keyLevel","keyArr","trainAgain","continueStudying","forChild"],"mappings":"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","file":"x","sourcesContent":["import {Component, OnInit, Input, OnChanges, SimpleChange, Output, EventEmitter} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {SessionStorageUtil} from 'core/utils/sessionstorage.util';\r\nimport {LocalStorageUtil} from '../../../../core/utils/localstorage.util';\r\n\r\n\r\n@Component({\r\n  selector: 'app-exercises-header',\r\n  templateUrl: './exercises-header.component.html',\r\n  styleUrls: ['./exercises-header.component.less']\r\n})\r\nexport class ExerciseseaderComponent implements OnInit {\r\n\r\n  title = SessionStorageUtil.getPacketInfoItem('name');\r\n\r\n  constructor(\r\n    private router: Router,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goback() {\r\n\r\n    const path = LocalStorageUtil.getBackUrl();\r\n    if (path) {\r\n      this.router.navigateByUrl(path);\r\n    } else {\r\n      this.router.navigateByUrl('p/structure?flat=new');\r\n    }\r\n  }\r\n}\r\n","<div class='hq-header'  >\r\n  <div class='bread-crumbs' >\r\n      <span class='nav' (click)='goback()'>\r\n        <i nz-icon nzType=\"left\" nzTheme=\"outline\" style='cursor: pointer'></i>\r\n      </span>\r\n      <span class='course-name'>\r\n        {{title}}\r\n      </span>\r\n    <!--    --->\r\n    <!--    <span>-->\r\n    <!--        章节标题-->\r\n    <!--      </span>-->\r\n  </div>\r\n</div>\r\n","<div [ngClass]='{\"main-exercise\":true,\"max-screen\":maxScreen,\"min-screen\":!maxScreen}'>\r\n  <div class='question-stem'>\r\n    <div class='title'>\r\n      <nz-tag [nzColor]=\"getColor()\" class='tag-title'>{{smartQuestion[idx][currenType].showTypeName}}</nz-tag>\r\n      题目：<span>{{current}}/{{smartQuestion.length + '~' + (smartQuestion.length * 2)}}</span>\r\n    </div>\r\n    <div class='subject' [innerHTML]='smartQuestion[idx][currenType].title | safeHtml'>\r\n    </div>\r\n    <div class='resolve' *ngIf='submitted.flag'>\r\n      <div class='title'>\r\n        解析：\r\n      </div>\r\n      <div class='tags'>\r\n        <!--        *ngFor=\"let item of knowledgePoints;let j=index;\"-->\r\n        <nz-tag [nzColor]=\"getKnoColor()\" class='tag-knowledge' >{{name}}</nz-tag>\r\n      </div>\r\n      <div class='desc' [innerHTML]='smartQuestion[idx][currenType].textAnalysis | safeHtml'>\r\n      </div>\r\n      <button nz-button nzType=\"primary\" (click)=\"showModal()\" *ngIf='videoAnalysis'\r\n              style='margin-top: 20px;backgroundColor: #1db88e' >\r\n        查看讲解视频\r\n      </button>\r\n    </div>\r\n  </div>\r\n  <div class='answer'>\r\n    <div class='title'>选项</div>\r\n    <ng-container *ngFor='let itemx of smartQuestion[idx][currenType].questionOptions;let inx=index;'>\r\n      <div [ngClass]='{\"options-item\":true,error:ifError(itemx),success:ifSuccess(itemx)}' *ngIf='ifSelect(itemx)'\r\n           style='color: #1db88e;border: 1px solid #1db88e'\r\n           (click)='clickItem(itemx,inx)'>\r\n        <ng-container *ngTemplateOutlet='option;context:{itemx:itemx,inx:inx}'>\r\n        </ng-container>\r\n      </div>\r\n      <div [ngClass]='{\"options-item\":true,error:ifError(itemx),success:ifSuccess(itemx)}'\r\n           *ngIf='!ifSelect(itemx)'\r\n           (click)='clickItem(itemx,inx)'>\r\n        <ng-container *ngTemplateOutlet='option;context:{itemx:itemx,inx:inx}'>\r\n        </ng-container>\r\n      </div>\r\n    </ng-container>\r\n    <ng-template #option let-itemx=\"itemx\" let-inx='inx'>\r\n      {{itemx.answerOption}}：\r\n      <div [innerHTML]='itemx.answerContent | safeHtml' class='option-item-span'></div>\r\n    </ng-template>\r\n    <div class='tips'>\r\n      <span class='error' *ngIf='answerCorrect(idx)'>\r\n        回答错误 ,\r\n      </span>\r\n      <span class='success' *ngIf='answerError(idx)' style='color: #1db88e'>\r\n        回答正确 ,\r\n      </span>\r\n      <ng-container *ngIf='smartQuestion[idx][currenType].isCorrect!==undefined'>\r\n         <span class='info'>\r\n        &nbsp;正确答案：\r\n      </span>\r\n        <span class='answer'  style='color: #1db88e'>\r\n      {{answer[currenType]}}\r\n      </span>\r\n      </ng-container>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--保利威预览-->\r\n<nz-modal [(nzVisible)]=\"isPreviewpolyway\" (nzOnCancel)=\"showModalEmit.emit(false)\" [nzFooter]='null' [nzTitle]='null'\r\n          nzWidth='1000px' [nzBodyStyle]='{padding:0,height:\"600px\"}' *ngIf='isPreviewpolyway'>\r\n  <iframe\r\n    allowfullscreen='true'\r\n    [src]=\"videoAnalysis\"\r\n    style=\"width: 100%;border: none;height: 100%\">\r\n  </iframe>\r\n</nz-modal>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChange,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  SimpleChanges\r\n} from '@angular/core';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NotifyService} from 'core/services/notify.service';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {LocalStorageUtil} from 'core/utils/localstorage.util';\r\nimport {Subscription} from 'rxjs';\r\nimport {TikuService} from '@app/busi-services/tiku.service';\r\nimport {letterMapping} from 'core/base/static-data';\r\nimport {environment} from 'src/environments/environment';\r\n\r\n\r\n@Component({\r\n  selector: 'app-smart-question',\r\n  templateUrl: './smart-question.component.html',\r\n  styleUrls: ['./smart-question.component.less']\r\n})\r\nexport class SmartQuestionComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() maxScreen = true;\r\n  @Input() data = [];\r\n  @Input() idx = 0; // 当前知识点索引\r\n  @Input() current = 1; // 当前题目数\r\n  @Input() knowledgePointsParam = {};\r\n  @Input() currenType = 'mediumQuestion';\r\n  @Input() markQuestion = []; // 已做过的题目\r\n  @Input() smartQuestion = [];\r\n  @Input() paramExpand = {};\r\n  @Input() paperId: any;\r\n  @Input() paperUuid: any;\r\n  @Input() videoAnalysis: any;\r\n  @Input() isPreviewpolyway = false;\r\n  @Input() submitted = {\r\n    flag: false\r\n  };\r\n  answer = {}; // 本个知识点答案\r\n  name: any; // 当前题目知识点\r\n  answers: any = {}; // 用户做题答案合计\r\n  enumKey = ['mediumQuestion', 'easyQuestion', 'difficultQuestion'];\r\n  private loginSignInfo = LocalStorageUtil.getUser();\r\n  private notificat$: Subscription;\r\n  private userAnswers: string; // 用户本道题填写答案\r\n  @Output() updateRecord: EventEmitter<null> = new EventEmitter<null>();\r\n  @Output() showModalEmit = new EventEmitter<any>();\r\n  @Output() isLast = new EventEmitter();\r\n\r\n\r\n  constructor(private message: NzMessageService,\r\n              private notification: NotifyService,\r\n              private tikuService: TikuService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.notificat$ = this.notification.lookAnswer.subscribe(res => {\r\n      this.lookAnswer(res);\r\n    });\r\n    this.initInfo();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    // if (changes.idx !== undefined && !changes.firstChange) {\r\n    //   debugger\r\n    //   this.initInfo()\r\n    // }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.notificat$.unsubscribe();\r\n  }\r\n\r\n  initInfo() {\r\n    const knowledgesQuestion = this.smartQuestion[this.idx];\r\n    this.enumKey.forEach((key) => {\r\n      if (knowledgesQuestion[key]) {\r\n        if (knowledgesQuestion[key].questionOptions) {\r\n          if (!knowledgesQuestion[key].questionOptions.length) {\r\n            this.addOption(key);\r\n          }\r\n        } else {\r\n          this.smartQuestion[this.idx][key].questionOptions = [];\r\n          this.addOption(key);\r\n        }\r\n        this.answer[key] = window.atob(knowledgesQuestion[key].answer);\r\n        if (typeof letterMapping[this.answer[key].split(',')[0]] !== 'number') {\r\n          this.message.error('试卷信息出错，选项中找不到答案');\r\n        }\r\n      }\r\n    });\r\n    this.getDetailsOfKnowledgePoints();\r\n  }\r\n\r\n  addOption(key) {\r\n    this.smartQuestion[this.idx][key].questionOptions.push({\r\n      answerOption: 'A',\r\n      answerContent: '正确',\r\n    });\r\n    this.smartQuestion[this.idx][key].questionOptions.push({\r\n      answerOption: 'B',\r\n      answerContent: '错误',\r\n    });\r\n  }\r\n\r\n  getDetailsOfKnowledgePoints(index?, currenType?) {\r\n    this.tikuService.getDetailsOfKnowledgePoints(this.smartQuestion[index || this.idx][currenType || this.currenType].param8).subscribe(res => {\r\n      if (res.status === 200) {\r\n        if (res.data && res.data.name) {\r\n          this.name = res.data.name;\r\n        } else {\r\n          this.name = '知识点';\r\n        }\r\n        this.knowledgePointsParam[this.smartQuestion[this.idx][this.currenType].param8] = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  paperSubmit() {\r\n    const {currenType, idx, smartQuestion, markQuestion} = this;\r\n    const questionsInfo = smartQuestion[idx][currenType];\r\n    const knowledgePointCode = smartQuestion[idx].knowledgePointCode;\r\n    const typeId = questionsInfo.typeId;\r\n    const questionId = questionsInfo.id;\r\n    const userAnswer = this.userAnswers;\r\n    const initAnswer = atob(questionsInfo.answer);\r\n    let score = 0;\r\n    if (questionsInfo.isCorrect === '2') {\r\n      score = this.getScore(typeId);\r\n    }\r\n    // 收集做题题目\r\n    if (markQuestion.length) {\r\n      if (markQuestion.every((question, j) => {\r\n        if (question.knowledgePointCode === knowledgePointCode) {\r\n          this.markQuestion[j][currenType] = questionsInfo;\r\n        } else {\r\n          return true;\r\n        }\r\n      })) {\r\n        this.markQuestion.push({\r\n          [currenType]: questionsInfo,\r\n          knowledgePointCode\r\n        });\r\n      }\r\n    } else {\r\n      this.markQuestion.push({\r\n        [currenType]: questionsInfo,\r\n        knowledgePointCode\r\n      });\r\n    }\r\n    this.answers = LocalStorageUtil.getAnswers();\r\n    this.answers[questionId] = {\r\n      typeId,\r\n      userAnswer,\r\n      initAnswer,\r\n      score,\r\n      isCorrect: questionsInfo.isCorrect\r\n    };\r\n    LocalStorageUtil.putAnswers(this.answers);\r\n\r\n    const answersJson: any = {\r\n      uid: '888888',\r\n      paperUuid: this.paperUuid,\r\n      redo: 2,\r\n      answers: this.answers,\r\n      ...this.paramExpand\r\n    };\r\n    this.isLast.emit((flag) => {\r\n      if (flag) {\r\n        answersJson.redo = 0;\r\n      }\r\n      const params = {\r\n        uid: '888888',\r\n        paperUuid: this.paperUuid,\r\n        answersJson: JSON.stringify(answersJson),\r\n      };\r\n      ToolsUtil.postAjax(`${environment.paperApi}api/submitPaper`, params).subscribe((res) => {\r\n        try {\r\n          const result = JSON.parse(res);\r\n          if (result.code === 200) {\r\n            if (flag) {\r\n              this.updateRecord.emit();\r\n            } else {\r\n              this.submitted.flag = true;\r\n            }\r\n          } else {\r\n            this.message.error(result.message);\r\n          }\r\n        } catch (e) {\r\n          this.message.error(res || e);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  private getScore(type) {\r\n    switch (Number(type)) {\r\n      case 1:\r\n        return 1;\r\n      case 2:\r\n        return 2;\r\n      case 7:\r\n        return 2;\r\n      case 5:\r\n        return 1;\r\n      default:\r\n        return 1;\r\n    }\r\n  }\r\n\r\n  private getUserAnswer(ee: any) {\r\n    const arr = [];\r\n    this.smartQuestion[ee].questionOptions.forEach(e => {\r\n      if (e.isSelect) {\r\n        arr.push(e.answerOption);\r\n      }\r\n    });\r\n    return arr;\r\n  }\r\n\r\n\r\n// 记录做题情况到option\r\n  recordTheProblemz(currentItem, answer) {\r\n    const {currenType} = this;\r\n    // 用户答案\r\n    this.userAnswers = answer[currenType].join(',');\r\n    // 回显正确答案\r\n    if (this.answer[currenType].length > 2) {\r\n      this.answer[currenType].split(',').forEach((item) => {\r\n        currentItem[currenType].questionOptions[letterMapping[item]].isSuccess = true;\r\n      });\r\n    } else {\r\n      currentItem[currenType].questionOptions[letterMapping[this.answer[currenType]]].isSuccess = true;\r\n    }\r\n    // 记录做题情况\r\n    if (this.answer[currenType].split(',').sort().join(',') === this.userAnswers) {\r\n      currentItem[currenType].isCorrect = '2'; // 正确\r\n    } else {\r\n      currentItem[currenType].isCorrect = '0'; // 错误\r\n      currentItem[currenType].questionOptions.forEach((e, ii) => {\r\n        if (e.isSelect && (!e.isSuccess)) {\r\n          currentItem[currenType].questionOptions[ii].isError = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n// 收集答案到answer\r\n  collectAnswers(currentItem, answer) {\r\n    currentItem[this.currenType].questionOptions.forEach(e => {\r\n      if (e.isSelect) {\r\n        answer[this.currenType].push(e.answerOption);\r\n      }\r\n    });\r\n    if (!answer[this.currenType].length) {\r\n      this.message.warning('请先选择你的预期答案');\r\n      return true;\r\n    }\r\n    if (currentItem[this.currenType].typeId === '2' && answer[this.currenType].length < 2) {\r\n      this.message.warning('该题是多选题,请至少选择两个选项');\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // 提交答案一条龙\r\n  oneStopAnswerSubmission(currentItem, answer) {\r\n    if (!this.collectAnswers(currentItem, answer)) {\r\n      this.recordTheProblemz(currentItem, answer);\r\n      this.paperSubmit();\r\n    }\r\n  }\r\n\r\n  lookAnswer(idx) {\r\n    const answer = {\r\n      mediumQuestion: [],\r\n      difficultQuestion: [],\r\n      easyQuestion: []\r\n    };\r\n    const currentItem = this.smartQuestion[this.idx];\r\n    this.oneStopAnswerSubmission(currentItem, answer);\r\n  }\r\n\r\n  // 记录答案\r\n  clickItem(item, idx) {\r\n    const currentItem = this.smartQuestion[this.idx];\r\n    const {questionOptions, typeId} = currentItem[this.currenType];\r\n    if (typeId === '3' || typeId === '1') { // 单选，判断\r\n      questionOptions.forEach((res, i) => {\r\n        currentItem[this.currenType].questionOptions[i].isSelect = false;\r\n      });\r\n      item.isSelect = true;\r\n    } else if (typeId === '2' || typeId === '7') { // 多选，双选\r\n      if (item.isSelect) {\r\n        item.isSelect = false;\r\n      } else {\r\n        item.isSelect = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  ifSelect(item) {\r\n    return item.isSelect;\r\n  }\r\n\r\n  ifSuccess(item) {\r\n    return item.isSuccess;\r\n  }\r\n\r\n  ifError(item: any) {\r\n    return item.isError;\r\n  }\r\n\r\n\r\n  answerCorrect(idx) {\r\n    return Number(this.smartQuestion[idx][this.currenType].isCorrect) === 0;\r\n  }\r\n\r\n  answerError(idx) {\r\n    return Number(this.smartQuestion[idx][this.currenType].isCorrect) === 2;\r\n  }\r\n\r\n  showModal() {\r\n    this.showModalEmit.emit(true);\r\n  }\r\n\r\n  getColor() {\r\n    return '#00AB84';\r\n  }\r\n\r\n  getKnoColor() {\r\n    return '#e1f2ed';\r\n  }\r\n}\r\n","<app-exercises-header></app-exercises-header>\r\n<nz-spin class=\"spin\" [nzSpinning]=\"isLoading\" nzSimple nzSize='large'\r\n         [nzTip]=\"getTips()\" style='text-align: center;transform: translateY(300px);'>\r\n</nz-spin>\r\n<div class='container'>\r\n  <ng-container *ngFor='let item of smartQuestion;let i=index'>\r\n    <ng-container *ngFor='let itemType of item | keyvalue'>\r\n      <ng-container *ngIf='itemType.key===currenType && currentIndex===(i)'>\r\n        <app-smart-question\r\n          (isLast)='getLastStatus($event)'\r\n          [idx]='i'\r\n          [currenType]='currenType'\r\n          [current]='getCurrentNumber()'\r\n          *ngIf='smartQuestion.length'\r\n          [submitted]='submitted'\r\n          [smartQuestion]='smartQuestion'\r\n          [paramExpand]='paramExpand'\r\n          [paperId]='paperId'\r\n          [paperUuid]='paperUuid'\r\n          [knowledgePointsParam]='knowledgePointsParam'\r\n          [isPreviewpolyway]='isPreviewpolyway'\r\n          [videoAnalysis]='videoAnalysis'\r\n          [markQuestion]='markQuestion'\r\n          (showModalEmit)='showModalEmit($event)'\r\n          (updateRecord)='updateRecordChild()'\r\n        ></app-smart-question>\r\n      </ng-container>\r\n    </ng-container>\r\n  </ng-container>\r\n  <div class='button-cover' *ngIf='smartQuestion.length>0'>\r\n    <div class='right'>\r\n      <div class='button-container'>\r\n        <button nz-button nzType=\"primary\" nzShape=\"round\" class='button-answer'\r\n                (click)='nextStep()'\r\n                *ngIf='submitted.flag'>{{ifLastQuestion() ? '查看成绩' : '下一题'}}\r\n        </button>\r\n        <button nz-button nzType=\"primary\" nzShape=\"round\" class='button-answer'\r\n                (click)='submitAnswer()' *ngIf='!submitted.flag'>提交答案\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<app-exercises-header></app-exercises-header>\r\n<nz-spin [nzSpinning]=\"passRecord\" [nzDelay]=\"0\" nzTip=\"查询闯关记录中...\" style='width:100%;height: calc(100% - 120px);'>\r\n  <div class='container-com'>\r\n    <div class='container'>\r\n      <div class='header clearfix'>\r\n        <div class='banner' >\r\n          <div class='title'>恭喜完成训练</div>\r\n          <div class='score'>\r\n            你的得分 <span class='num'>{{fraction}}</span> 分\r\n          </div>\r\n          <button nz-button nzShape=\"round\" class='train-again' (click)='trainAgain()'><span class='text'>再次训练</span>\r\n          </button>\r\n          <div class='modify'>\r\n          </div>\r\n        </div>\r\n        <div class='answers'>\r\n          <div class='title'>\r\n            答题情况\r\n          </div>\r\n          <div class='question-list'>\r\n      <span *ngFor='let item of questions;let i=index;'\r\n            [ngClass]=\"{'color-red':ifRed(i)}\" style='backgroundColor: #1db88e' (click)=\"showModal(i + 1)\" >\r\n        {{i + 1}}\r\n      </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class='knowledge-points'>\r\n        <div class='knowledge-points-left'>\r\n          <div class='list-item'>\r\n            <div class='list-label header-label'>\r\n              薄弱知识点\r\n            </div>\r\n            <div class='list-label list-input header-label'>\r\n              难度\r\n            </div>\r\n          </div>\r\n          <div *ngIf='errorKnowledges.length' style='height:calc(100% - 67px);overflow:auto;'>\r\n            <div class='list-item hover-item' *ngFor=\"let item of errorKnowledges;let i=index;\"\r\n                 (click)='gotoKnowledgePoints(item)'>\r\n              <div class='list-label' [title]='item.name || item.pointName'>\r\n                {{item.name || item.pointName}}\r\n              </div>\r\n              <div class='list-label list-input'>\r\n                <i nz-icon nzType=\"star\" nzTheme=\"fill\" class='star yellow'\r\n                   *ngFor='let itemx of getLevel(item.keyLevel)'></i>\r\n                <i nz-icon nzType=\"star\" nzTheme=\"fill\" class='star'\r\n                   *ngFor='let itemxx of getOtherLevel(item.keyLevel)'></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class='list-item hover-item' *ngIf='!errorKnowledges.length'>\r\n            <div class='list-label'>\r\n              无\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class='knowledge-points-right'>\r\n          <div class='list-item'>\r\n            <div class='list-label header-label'>\r\n              正确知识点\r\n            </div>\r\n            <div class='list-label list-input header-label'>\r\n              难度\r\n            </div>\r\n          </div>\r\n          <div style='height:calc(100% - 67px);overflow:auto;' *ngIf='correctKnowledges.length'>\r\n            <div class='list-item hover-item' *ngFor=\"let item of correctKnowledges;let i=index;\"\r\n                 (click)='gotoKnowledgePoints(item)'>\r\n              <div class='list-label' [title]='item.name || item.pointName'>\r\n                {{item.name || item.pointName}}\r\n              </div>\r\n              <div class='list-label list-input'>\r\n                <i nz-icon nzType=\"star\" nzTheme=\"fill\" class='star yellow'\r\n                   *ngFor='let itemx of getLevel(item.keyLevel)'></i>\r\n                <i nz-icon nzType=\"star\" nzTheme=\"fill\" class='star'\r\n                   *ngFor='let itemxx of getOtherLevel(item.keyLevel)'></i>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class='list-item hover-item' *ngIf='!correctKnowledges.length'>\r\n            <div class='list-label'>\r\n              无\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nz-spin>\r\n\r\n\r\n<nz-modal\r\n  nzWidth='600'\r\n  [(nzVisible)]=\"isVisible\" nzTitle=\"做题记录\" [nzFooter]='null'\r\n  [nzBodyStyle]='{maxHeight: \"600px\",overflow: \"auto\"}' (nzOnCancel)='isVisible=false'\r\n  [nzClosable]='true'>\r\n  <app-smart-question\r\n    [smartQuestion]='smartQuestion'\r\n    [current]='getCurrentNumber()'\r\n    [idx]='currentIndex'\r\n    [currenType]='currenType'\r\n    [maxScreen]='false'\r\n    *ngIf='isVisible'\r\n    [submitted]='{flag:true}'\r\n    [videoAnalysis]='videoAnalysis'\r\n    [isPreviewpolyway]='isPreviewpolyway'\r\n    (showModalEmit)='showModalEmit($event)'\r\n  ></app-smart-question>\r\n</nz-modal>\r\n\r\n\r\n<nz-modal [(nzVisible)]=\"successModal\"\r\n          [nzTitle]=\"null\"\r\n          [nzFooter]='null'\r\n          (nzOnCancel)='successModal=false'\r\n          [nzBodyStyle]='{height: \"398px\",overflow: \"auto\",padding:0,width:\"520px\"}'>\r\n  <div class='header-modal' ImgSet ImgCode='succes'>\r\n    <div class='head-modal'>恭喜你</div>\r\n    <div class='title-modal'>{{getTitle()}}</div>\r\n    <div class='float-pane'>\r\n      <ng-container>\r\n        <div class='pane-title'>\r\n          {{getDetail()}}\r\n        </div>\r\n        <div class='tips'>\r\n          {{(isLastStage && StringI(isLastStage) === '1') ? '已解锁全部' : '已解锁'}}\r\n        </div>\r\n      </ng-container>\r\n      <div class='continue-study'>\r\n        <button nz-button nzType=\"primary\" nzShape=\"round\" class='button-modal'\r\n                (click)='continueStudying()'>\r\n          继续学习\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nz-modal>\r\n\r\n\r\n\r\n\r\n\r\n","import {Component, OnInit, Input, OnChanges, SimpleChange, Output, EventEmitter} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {LocalStorageUtil} from 'core/utils/localstorage.util';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {environment} from 'src/environments/environment';\r\nimport {TikuService} from '@app/busi-services/tiku.service';\r\n\r\n@Component({\r\n  selector: 'app-view-answer',\r\n  templateUrl: './view-answer.component.html',\r\n  styleUrls: ['./view-answer.component.less']\r\n})\r\nexport class ViewAnswerComponent implements OnInit {\r\n  fraction: string;\r\n  successModal = false;\r\n  questions = [];\r\n  smartQuestion = [];\r\n  isVisible = false;\r\n  currentIndex = 0;\r\n  currenType = 'mediumQuestion';\r\n  exercise = JSON.parse(LocalStorageUtil.getExerciseKey());\r\n  knowledgeList = this.exercise.data;\r\n  correctKnowledges = [];\r\n  errorKnowledges = [];\r\n  knowledgePointsParam = '';\r\n  recordingType;\r\n  StringI = String;\r\n  isPass;\r\n  currentStage; // 当前阶段\r\n  nextTarget; // 下一目标\r\n  nextStage; // 下一阶段\r\n  isLastStage; // 最后阶段\r\n  isLastTarget; // 是否最后目标\r\n  videoAnalysis;\r\n  passRecord = false;\r\n  isPreviewpolyway = false;\r\n  enumKey = ['mediumQuestion', 'easyQuestion', 'difficultQuestion'];\r\n  private prefix = environment.ow365.substr(0, environment.ow365.length - 5) + 'polywayId=';\r\n\r\n\r\n  constructor(private router: Router,\r\n              private route: ActivatedRoute,\r\n              private tikuService: TikuService,\r\n              private message: NzMessageService,\r\n              private sanitizer: DomSanitizer\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.smartQuestion = LocalStorageUtil.getAnswersInfo(); // 试卷信息\r\n    this.fraction = this.route.snapshot.queryParamMap.get('fraction'); //  闯关分数\r\n    this.questions = Array(Number(this.route.snapshot.queryParamMap.get('questions'))).fill(0); // 题目数量\r\n    this.knowledgePointsParam = this.route.snapshot.queryParamMap.get('knowledgePointsParam'); // 试卷知识点\r\n    this.recordingType = LocalStorageUtil.getMarkQuestionRecording(); // 做题入口类型，1目标闯关,2阶段测验,3大纲做题\r\n    this.getKnowledgePointData();\r\n    const {recordingType} = this;\r\n    // 录播大纲，目标或阶段\r\n    if (recordingType.id && LocalStorageUtil.getSelectedCourse().teachType === '22') {\r\n      let type;\r\n      let key;\r\n      const isOutline = String(recordingType.markQuestiontype) === '3';\r\n      if (String(recordingType.markQuestiontype) === '1') {\r\n        type = 'goalBreakthrough';\r\n        key = 'studyTimeSectionId';\r\n      } else if (String(recordingType.markQuestiontype) === '2') {\r\n        type = 'stageTest';\r\n        key = 'stageId';\r\n      } else if (isOutline) {\r\n        type = 'goalBreakthrough';\r\n        key = 'studyTimeSectionId';\r\n      }\r\n      if (type) {\r\n        this.passRecord = true;\r\n        this.tikuService[type]({\r\n          [key]: recordingType.id,\r\n          passScore: Number(this.fraction)\r\n        }).subscribe((res) => {\r\n          if (res.status === 200) {\r\n            if (Number(res.data.isPass) === 0 && this.fraction && Number(this.fraction) >= 75) {\r\n              this.tikuService[type]({\r\n                [key]: recordingType.id,\r\n                isPass: '1',\r\n                passScore: Number(this.fraction)\r\n              }).subscribe((resT) => {\r\n                this.passRecord = false;\r\n                if (resT.status === 200) {\r\n                  this.currentStage = resT.data.currentStage;\r\n                  this.isPass = resT.data.isPass;\r\n                  if (String(this.recordingType.markQuestiontype) !== '2') { // 目标闯关\r\n                    this.nextTarget = resT.data.nextTarget;\r\n                    this.isLastTarget = resT.data.isLastTarget;\r\n                  } else {\r\n                    this.nextStage = resT.data.nextStage;\r\n                    this.isLastStage = resT.data.isLastStage;\r\n                  }\r\n                  this.successModal = true;\r\n                } else {\r\n                  this.message.error(resT.message);\r\n                }\r\n              }, err => {\r\n                this.passRecord = false;\r\n                this.message.error('更新闯关信息失败');\r\n              });\r\n            } else {\r\n              this.passRecord = false;\r\n            }\r\n          } else {\r\n            this.message.error(res.message);\r\n          }\r\n        }, () => {\r\n          this.passRecord = false;\r\n          this.message.error('获取闯关信息失败');\r\n        });\r\n      }\r\n    }\r\n    // // 录播做题通过了要记录分数更新闯关状态和分数并弹框\r\n    // if (Number(this.fraction) >= 75 // 通过了\r\n    //   && LocalStorageUtil.getSelectedCourse().teachType === '22' // 录播\r\n    //   && this.recordingType\r\n    //   && this.recordingType.markQuestiontype\r\n    //   && String(this.recordingType.markQuestiontype) !== '3' // 说明为目标，阶段闯关, 而针对训练,大纲不需要弹框\r\n    //   && ((this.statge < this.statgeTotal) // 阶段测试用\r\n    //     ||\r\n    //     (this.statge === this.statgeTotal && this.target <= this.targetTotal && (this.target !== 0 && this.targetTotal !== 0))) // 目标闯关用\r\n    // ) {\r\n    //   if (update && Number(update) === 1) {\r\n    //     if (this.target === this.targetTotal && String(this.recordingType.markQuestiontype) === '1') { // 目标闯关提示阶段测试解锁\r\n    //       this.target = -1;\r\n    //       this.statge -= 1;\r\n    //     } else if (String(this.recordingType.markQuestiontype) === '2') { // 阶段测试提示下一阶段解锁\r\n    //       this.target = 0;\r\n    //     } else {\r\n    //       if (this.target) {  // 目标闯关提示下一目标解锁\r\n    //         this.statge -= 1;\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n\r\n// 再次训练\r\n  trainAgain() {\r\n    // 目标,大纲循环做题需要更新uuid,因为他们有继续闯关，大纲做题通关目标也解锁\r\n    const {recordingType} = this;\r\n    if (recordingType && recordingType.markQuestiontype &&\r\n      (String(recordingType.markQuestiontype) !== '4' || String(recordingType.markQuestiontype) !== '2')) {\r\n      this.trainAgainReal(true);\r\n    } else {\r\n      this.trainAgainReal(false);\r\n    }\r\n  }\r\n\r\n\r\n  trainAgainReal(update) {\r\n    this.getKnowledgePointsDetail().then(flag => {\r\n      if (flag) {\r\n        LocalStorageUtil.setExerciseKey(this.exercise.courseCode, this.exercise.data, '', '');\r\n        LocalStorageUtil.putQuestionInit('0');\r\n        if (update) {\r\n          this.router.navigateByUrl('/exercise-bank?update=1');\r\n        } else {\r\n          this.router.navigateByUrl('/exercise-bank');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n// 更新知识点经验值\r\n  getKnowledgePointsDetail() {\r\n    return new Promise((resolve) => {\r\n      const {recordingType} = this;\r\n      if (!(recordingType && String(recordingType.markQuestiontype) === '4')) { // 只有自由闯关不需要,大纲和目标联动难度\r\n        const info = JSON.parse(LocalStorageUtil.getExerciseKey());\r\n        const knowledgePoints = info.data;\r\n        const pointCodes = info.data.map(e => e.code).join(',');\r\n        this.tikuService.getKnowledgePointsDetail(pointCodes).subscribe(res => {\r\n          if (res.status === 200) {\r\n            if (res.data && res.data.length) {\r\n              res.data.forEach((item) => {\r\n                knowledgePoints.forEach((element, i) => {\r\n                  if (item.CODE === element.code) {\r\n                    knowledgePoints[i].experienceValue = item.EXPERIENCEVALUE;\r\n                  }\r\n                });\r\n              });\r\n              info.data = knowledgePoints;\r\n              this.exercise = info;\r\n              LocalStorageUtil.setExerciseKey(info.courseCode, info.data, info.paperUuid, info.tpaperId);\r\n              resolve(true);\r\n            }else {\r\n              resolve(true);\r\n            }\r\n          } else {\r\n            this.message.error(res.message);\r\n            resolve(false);\r\n\r\n          }\r\n        }, err => {\r\n          this.message.error('更新知识点经验值失败');\r\n          resolve(false);\r\n        });\r\n      } else {\r\n        resolve(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  showModal(i: number) {\r\n    const info = this.getIndexType(i);\r\n    this.currentIndex = info.smartQuestionIndex;\r\n    this.currenType = info.smartQuestionType;\r\n    const url = this.smartQuestion[this.currentIndex][this.currenType].videoAnalysis;\r\n    this.videoAnalysis = url ?\r\n      this.sanitizer.bypassSecurityTrustResourceUrl(this.prefix + url) : '';\r\n    this.isVisible = true;\r\n  }\r\n\r\n\r\n  private getKnowledgePointData() {\r\n    const knowledges = this.knowledgePointsParam.split(',');\r\n    const knowledgeList = this.knowledgeList.filter(e => {\r\n      return knowledges.indexOf(e.code) > -1;\r\n    });\r\n\r\n    let successCodes = [];\r\n    let errorCodes = [];\r\n    this.smartQuestion.forEach(question => {\r\n      this.enumKey.forEach((key) => {\r\n        if (question[key]) {\r\n          if (Number(question[key].isCorrect) === 0) {\r\n            errorCodes.push(question[key].param8);\r\n          } else {\r\n            successCodes.push(question[key].param8);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    errorCodes = Array.from(new Set(errorCodes));\r\n    successCodes = Array.from(new Set(successCodes));\r\n    errorCodes.forEach(e => {\r\n      knowledgeList.every(ee => {\r\n        if (ee.code === e) {\r\n          this.errorKnowledges.push(ee);\r\n        } else {\r\n          return true;\r\n        }\r\n      });\r\n    });\r\n    this.errorKnowledges.sort((a: any, b: any) => {\r\n      return (b.keyLevel - a.keyLevel) as number;\r\n    });\r\n    successCodes.forEach(e => {\r\n      if (errorCodes.indexOf(e) < 0) {\r\n        knowledgeList.every(ee => {\r\n          if (ee.code === e) {\r\n            this.correctKnowledges.push(ee);\r\n          } else {\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n    });\r\n    this.correctKnowledges.sort((a: any, b: any) => {\r\n      return (b.keyLevel - a.keyLevel) as number;\r\n    });\r\n  }\r\n\r\n  getLevel(keyLevel: any) {\r\n    if (Number(keyLevel) === 0) {\r\n      return [];\r\n    }\r\n    return Array(Number(keyLevel)).fill(0);\r\n  }\r\n\r\n  getOtherLevel(keyLevel: any) {\r\n    if (Number(keyLevel) >= 3) {\r\n      return [];\r\n    }\r\n    return Array(Number(3 - keyLevel)).fill(0);\r\n  }\r\n\r\n  continueStudying() {\r\n    this.router.navigateByUrl(`/p/structure?flat=new`);\r\n  }\r\n\r\n  gotoKnowledgePoints(item: any) {\r\n    this.router.navigateByUrl(`/chapter-study/1/${item.code}`);\r\n  }\r\n\r\n  ifRed(i: any) {\r\n    const info = this.getIndexType(i + 1);\r\n    return Number(this.smartQuestion[info.smartQuestionIndex][info.smartQuestionType].isCorrect) === 0;\r\n  }\r\n\r\n// 获取第几个知识点某个类型\r\n  getIndexType(i) {\r\n    let smartQuestionType = 'mediumQuestion';\r\n    let smartQuestionIndex = 0;\r\n    let index = 0;\r\n    this.smartQuestion.every((item, j) => {\r\n      const keyArr = Object.keys(item);\r\n      index += (keyArr.length - 1);\r\n      if (index >= i) {\r\n        smartQuestionIndex = j;\r\n        if (keyArr.length > 2 && (i - index + keyArr.length - 1) > 1) {\r\n          smartQuestionType = keyArr.filter(e => (e !== 'mediumQuestion' && e !== 'knowledgePointCode'))[0];\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n    });\r\n    return {\r\n      smartQuestionType,\r\n      smartQuestionIndex\r\n    };\r\n  }\r\n\r\n  getTitle() {\r\n    const {isLastStage} = this;\r\n    return (isLastStage && String(isLastStage) === '1') ? '恭喜你'\r\n      : '恭喜你，解锁' + ((isLastStage && String(isLastStage) !== '1') ? '新阶段' : '新目标');\r\n  }\r\n\r\n  getDetail() {\r\n    const {isLastTarget, isLastStage, recordingType, nextStage, currentStage, nextTarget} = this;\r\n    return (isLastStage && String(isLastStage) === '1') ? '已通过所有目标和阶段闯关' :\r\n      (recordingType && String(recordingType.markQuestiontype) === '2') ?\r\n        ('阶段' + nextStage + '- 目标1') : (isLastTarget && String(isLastTarget) === '1')\r\n        ? ('阶段' + currentStage + '测试')\r\n        : ('阶段' + currentStage + '- 目标' + nextTarget);\r\n  }\r\n\r\n  // 获取当前题目索引\r\n  getCurrentNumber() {\r\n    const {smartQuestion, currentIndex, currenType} = this;\r\n    let current = 0;\r\n    smartQuestion.every((item, j) => {\r\n      if (currentIndex >= j) {\r\n        if (item.easyQuestion || item.difficultQuestion) { // 一个知识点多道题\r\n          if (currentIndex === j) { // 最后一个知识点\r\n            if (currenType === 'mediumQuestion') {\r\n              current += 1;\r\n            } else {\r\n              current += 2;\r\n            }\r\n          } else {  // 除了最后的前面知识点\r\n            if ((String(item.mediumQuestion.isCorrect) === '0' && !item.easyQuestion)\r\n              ||\r\n              (String(item.mediumQuestion.isCorrect) === '2' && !item.difficultQuestion)) {\r\n              current += 1;\r\n            } else {\r\n              current += 2;\r\n            }\r\n            return true;\r\n          }\r\n        } else { // 一个知识点一道题\r\n          current += 1;\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    return current;\r\n  }\r\n\r\n// 获取所有题目数 todo:如果是有两道题的情况那么无法确定总共会做多少题目\r\n  getTotalQuestionNumber() {\r\n    let total = this.smartQuestion.length;\r\n    this.smartQuestion.forEach(question => {\r\n      if (Object.keys(question).length > 2) { // 如果一个知识点有多道题\r\n        // if (!((String(item.mediumQuestion.isCorrect) === '0' && !item.easyQuestion)\r\n        //    ||\r\n        //    (String(item.mediumQuestion.isCorrect) === '2' && !item.difficultQuestion))) {\r\n        total += 1;\r\n        // }\r\n      }\r\n    });\r\n    return total;\r\n  }\r\n\r\n\r\n  showModalEmit(flag: boolean) {\r\n    this.isPreviewpolyway = flag;\r\n  }\r\n}\r\n","import {Component, OnInit, Input, OnChanges, SimpleChange, Output, EventEmitter} from '@angular/core';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {ToolsUtil} from 'core/utils/tools.util';\r\nimport {NzMessageService} from 'ng-zorro-antd/message';\r\nimport {NotifyService} from 'core/services/notify.service';\r\nimport {LocalStorageUtil} from 'core/utils/localstorage.util';\r\nimport {forkJoin, Observable, of, Subscriber, timer} from 'rxjs';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {environment} from '../../src/environments/environment';\r\nimport {TikuService} from '@app/busi-services/tiku.service';\r\nimport {SessionStorageUtil} from '../../core/utils/sessionstorage.util';\r\n\r\n@Component({\r\n  selector: 'app-exercise-bank',\r\n  templateUrl: './exercise-bank.component.html',\r\n  styleUrls: ['./exercise-bank.component.less']\r\n})\r\nexport class ExerciseBankComponent implements OnInit {\r\n  isVisible = false;\r\n  paperData;\r\n  smartQuestion = [];\r\n  currentIndex = 0;\r\n  stringify = JSON.stringify;\r\n  orgCode = ToolsUtil.getOrgCode();\r\n  submitted = {\r\n    flag: false\r\n  };\r\n  paramExpand: any;\r\n  paperId: any;\r\n  paperUuid = '';\r\n  isLoading = false;\r\n  tips = '';\r\n  knowledgePointsParam: any = {};\r\n  isPreviewpolyway = false;\r\n  videoAnalysis;\r\n  currenType = 'mediumQuestion';\r\n  enumKey = ['mediumQuestion', 'easyQuestion', 'difficultQuestion'];\r\n  markQuestion = []; // 已做过的题目\r\n  private courseCode = '';\r\n  private konwledges = '';\r\n  private experiences = '';\r\n  private userId = LocalStorageUtil.getUser().thirdId;\r\n  private loginSignInfo = LocalStorageUtil.getUser();\r\n  private prefix = environment.ow365.substr(0, environment.ow365.length - 5) + 'polywayId=';\r\n  private fraction = '0';\r\n  private questions = 0;\r\n  private knowledgePointsParamString = '';\r\n  private courseData;\r\n  private phase;\r\n  private recordingType; // 阶段，目标，和大纲\r\n  private title;\r\n  private curProgress;\r\n  private status;\r\n  private courseId;\r\n  private professionId;\r\n  private coursePacketId;\r\n  private lessonCount;\r\n  private isSmart;\r\n  private code;\r\n  private teachType;\r\n  private auditStatus;\r\n  private preview;\r\n  private createrId;\r\n  private pcode;\r\n  private knowledgeSubjectId;\r\n\r\n  constructor(private router: Router,\r\n              private route: ActivatedRoute,\r\n              private tikuService: TikuService,\r\n              private message: NzMessageService,\r\n              private notification: NotifyService,\r\n              private sanitizer: DomSanitizer\r\n  ) {\r\n    this.initParams();\r\n    this.recordingType = LocalStorageUtil.getMarkQuestionRecording();\r\n    LocalStorageUtil.putAnswers({});\r\n    LocalStorageUtil.putAnswersInfo([]);\r\n    this.echoData();\r\n  }\r\n\r\n  echoData() {\r\n\r\n    this.courseData = LocalStorageUtil.getSelectedCourse();\r\n    const exercise = JSON.parse(LocalStorageUtil.getExerciseKey());\r\n    const uuid = exercise.paperUuid;\r\n    const paperId = exercise.tpaperId;\r\n    if (uuid) {\r\n      this.paperUuid = uuid;\r\n    }\r\n    if (paperId) {\r\n      this.paperId = paperId;\r\n    }\r\n    this.isLoading = true;\r\n    if (LocalStorageUtil.getQuestionInit() === '0') {  // 智能抽题\r\n      LocalStorageUtil.removeQuestionInit();\r\n      this.initInfo(exercise);\r\n      this.getUuId((data) => {\r\n        const result = data.data;\r\n        if (!result.groups.length) {\r\n          this.message.info('暂无可以训练的最新题目了');\r\n          history.back();\r\n        } else {\r\n          this.paperUuid = result.paper.uuid;\r\n          this.paperId = result.paper.id;\r\n          exercise.paperUuid = this.paperUuid;\r\n          exercise.tpaperId = this.paperId;\r\n          const {update} = this.route.snapshot.queryParams;\r\n          // 说明是再次训练，只有需要继续闯关的才需要更新uuid,即目标闯关和大纲做题需要\r\n          if (update === '1') {\r\n            this.updateUuid({\r\n              sectionId: this.recordingType.sectionId,\r\n              passUuid: this.paperUuid\r\n            }).then((flag) => {\r\n              if (flag) {\r\n                // 再次开始做题\r\n                this.startToDoTheProblem(exercise, result);\r\n              }\r\n            });\r\n          } else {\r\n            this.startToDoTheProblem(exercise, result);\r\n          }\r\n        }\r\n      });\r\n    } else if (LocalStorageUtil.getQuestionInit() === '1') { // 直接做题\r\n      this.isLoading = false;\r\n      LocalStorageUtil.removeQuestionInit();\r\n      // this.getPaperInfo(this.paperUuid).subscribe(res => {\r\n      const paperDataCache = LocalStorageUtil.getPaperTotal();\r\n      const paperData = paperDataCache.groups;\r\n      const {param1, param2, param3, param4, param5, param6, param7, param8, param9, param10} = paperDataCache.paper;\r\n      this.paramExpand = {param1, param2, param3, param4, param5, param6, param7, param8, param9, param10};\r\n      // 还原答案\r\n      LocalStorageUtil.putAnswers({});\r\n      this.smartQuestion = paperData;\r\n      const url = this.smartQuestion[this.currentIndex][this.currenType].videoAnalysis;\r\n      this.videoAnalysis = url ?\r\n        this.sanitizer.bypassSecurityTrustResourceUrl(this.prefix + url) : '';\r\n      // })\r\n    } else { // 回显做题记录\r\n      const timerEnd$ = timer(600).subscribe(() => {\r\n        timerEnd$.unsubscribe();\r\n        forkJoin([this.getRecord({\r\n          uid: '888888',\r\n          paperUuid: this.paperUuid,\r\n        }), this.getPaperInfo(this.paperUuid)]).subscribe((ret) => {\r\n          this.isLoading = false;\r\n          if (Array.isArray(ret) && ret.length > 0) {\r\n            this.convertData(ret);\r\n          } else {\r\n            this.errorMessage('获取信息失败，请稍后再试');\r\n          }\r\n        }, err => {\r\n          this.isLoading = false;\r\n          this.errorMessage(JSON.stringify(err));\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  // 开始做题\r\n  startToDoTheProblem(exercise, result) {\r\n    LocalStorageUtil.setExerciseKey(exercise.courseCode, exercise.data, this.paperUuid, this.paperId);\r\n    const timer$ = timer(600).subscribe(() => {\r\n      timer$.unsubscribe();\r\n      this.paperData = result;\r\n      const {groups, paper} = this.paperData;\r\n      const {param1, param2, param3, param4, param5, param6, param7, param8, param9, param10} = paper;\r\n      this.smartQuestion = groups;\r\n      const firstItem = this.smartQuestion[0].mediumQuestion;\r\n      this.videoAnalysis = firstItem.videoAnalysis ?\r\n        this.sanitizer.bypassSecurityTrustResourceUrl(this.prefix + firstItem.videoAnalysis) : '';\r\n      // const {param1, param2, param3, param4, param5, param6, param7, param8, param9, param10} = firstItem;\r\n      this.paramExpand = {param1, param2, param3, param4, param5, param6, param7, param8, param9, param10};\r\n    });\r\n  }\r\n\r\n  updateUuid(params) {\r\n    return new Promise((resolve) => {\r\n      this.tikuService.updateUuid(params).subscribe((res) => {\r\n        if (res.status === 200) {\r\n          resolve(true);\r\n        } else {\r\n          this.message.error(res.message);\r\n          resolve(false);\r\n        }\r\n      }, err => {\r\n        this.message.error('更新试卷信息失败');\r\n        resolve(false);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  errorMessage(res) {\r\n    this.message.error(res);\r\n    const timer$ = timer(2000).subscribe(() => {\r\n      timer$.unsubscribe();\r\n      history.back();\r\n    });\r\n  }\r\n\r\n  initInfo(exercise) {\r\n    this.courseCode = exercise.courseCode;\r\n    const knowledgePoints = exercise.data;\r\n    if (knowledgePoints && knowledgePoints.length) {\r\n      this.konwledges = knowledgePoints.map(e => {\r\n        return e.code;\r\n      }).join(',');\r\n      this.experiences = knowledgePoints.map(e => {\r\n        return e.experienceValue;\r\n      }).join(',');\r\n    }\r\n  }\r\n\r\n  getPaperInfo(uuid) {\r\n    return this.tikuService.replyToTestPaperInformation(uuid);\r\n    // return of(paperData);\r\n  }\r\n\r\n  getStage() {\r\n    return new Promise((resolve) => {\r\n      this.tikuService.getStage(this.coursePacketId).subscribe((res) => {\r\n        if (res.status === 200) {\r\n          if (res.data.stage === '精讲阶段') {\r\n            this.phase = 2;\r\n          }\r\n          if (res.data.stage === '密押阶段') {\r\n            this.phase = 4;\r\n          }\r\n          if (res.data.stage === '冲刺阶段') {\r\n            this.phase = 3;\r\n          }\r\n        }\r\n        resolve(true);\r\n      }, error => {\r\n        resolve(true);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  initParams() {\r\n    const {\r\n      name, curProgress, status, courseId, professionId, id, lessonCount, isSmart, code,\r\n      teachType, auditStatus, preview, createrId, pcode, knowledgeSubjectId\r\n    }\r\n      = SessionStorageUtil.getPacketInfo();\r\n    this.title = name; // 课包名称\r\n    this.curProgress = Number(curProgress);\r\n    this.status = status; // 课包状态\r\n    this.courseId = courseId; // 课程id\r\n    this.professionId = professionId; //  学科id\r\n    this.coursePacketId = id; //  课包\r\n    this.lessonCount = Number(lessonCount); // 课次\r\n    this.isSmart = isSmart; // 智适应\r\n    this.code = code; // 课程编码\r\n    this.teachType = teachType; // 授课方式: 线下面授(11)、线下双师(12)、线上直播(21)、线上录播(22)\r\n    this.auditStatus = auditStatus; // 审核流程状态\r\n    this.preview = preview;\r\n    this.createrId = createrId;\r\n    this.pcode = pcode;\r\n    this.knowledgeSubjectId = knowledgeSubjectId;\r\n  }\r\n\r\n  async getUuId(fn) {\r\n    const codeUid = await ToolsUtil.getProdIdSync();\r\n    this.getStage().then(() => {\r\n      const params: any = {\r\n        konwledges: this.konwledges,\r\n        experiences: this.experiences,\r\n        userId: this.userId,\r\n        courseCode: this.courseCode,\r\n        proId: codeUid,\r\n        taskType: 6,\r\n        studentId: LocalStorageUtil.getUserId(),\r\n        coursePacketId: this.coursePacketId\r\n      };\r\n      if (this.phase) {\r\n        params.phase = this.phase;\r\n      }\r\n      this.tikuService.getPaperInfo(params).subscribe(result => {\r\n        this.isLoading = false;\r\n        if (result.status === 200) {\r\n          if (result.data) {\r\n            fn(result);\r\n          } else {\r\n            this.errorMessage('暂无智适应题目');\r\n          }\r\n        } else {\r\n          this.errorMessage('暂无智适应题目');\r\n        }\r\n      }, () => {\r\n        this.isLoading = false;\r\n      });\r\n    });\r\n    // fn(paperData);\r\n  }\r\n\r\n  nextStep() {\r\n    this.submitted.flag = false;\r\n    const currentItem = this.smartQuestion[this.currentIndex];\r\n    const {currenType} = this;\r\n    if (currenType === 'mediumQuestion' &&\r\n      ((Number(currentItem.mediumQuestion.isCorrect) === 0 && currentItem.easyQuestion)\r\n        ||\r\n        (Number(currentItem.mediumQuestion.isCorrect) === 2 && currentItem.difficultQuestion)\r\n      )\r\n    ) { // 需要做知识点内的题\r\n      // 根据答题情况自动出题\r\n      if (Number(currentItem.mediumQuestion.isCorrect) === 0) {\r\n        this.currenType = 'easyQuestion';\r\n      } else {\r\n        this.currenType = 'difficultQuestion';\r\n      }\r\n      const url = this.smartQuestion[this.currentIndex][this.currenType].videoAnalysis;\r\n      this.videoAnalysis = url ?\r\n        this.sanitizer.bypassSecurityTrustResourceUrl(this.prefix + url) : '';\r\n    } else {\r\n      this.canDoTheNextQuestion(); // 可以做下一题\r\n    }\r\n  }\r\n\r\n\r\n  // 可以做下一题\r\n  canDoTheNextQuestion() {\r\n    if (this.ifLastQuestion()) {\r\n      this.gotoViewAnswer();\r\n    } else {\r\n      this.currentIndex++;\r\n      this.currenType = 'mediumQuestion';\r\n      this.videoAnalysis =\r\n        this.smartQuestion[this.currentIndex].videoAnalysis ? this.sanitizer.bypassSecurityTrustResourceUrl(this.prefix + this.smartQuestion[this.currentIndex].videoAnalysis) : '';\r\n    }\r\n  }\r\n\r\n  gotoViewAnswer() {\r\n    this.updateRecord().subscribe(() => {\r\n      const {fraction, questions, knowledgePointsParamString} = this;\r\n      const url = `/exercise-bank/view-answer?fraction=${fraction}&questions=${questions}\r\n      &knowledgePointsParam=${knowledgePointsParamString}`;\r\n      this.router.navigateByUrl(url);\r\n    });\r\n  }\r\n\r\n  updateRecordChild() {\r\n    this.updateRecord(true).subscribe(res => {\r\n      if (res) {\r\n        this.submitted.flag = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  setParams() {\r\n    const error = [];\r\n    const success = [];\r\n    this.markQuestion.forEach(e => {\r\n      this.enumKey.forEach(r => {\r\n        if (e[r]) {\r\n          if (Number(e[r].isCorrect) === 0) {\r\n            error.push(e[r]);\r\n          } else if (Number(e[r].isCorrect) === 2) {\r\n            success.push(e[r]);\r\n          }\r\n        }\r\n      });\r\n    });\r\n    this.fraction = (100 * (success.length / (error.length + success.length))).toFixed(0);\r\n    this.questions = success.length + error.length;\r\n    this.knowledgePointsParamString = Object.keys(this.knowledgePointsParam).join(',');\r\n    LocalStorageUtil.putAnswersInfo(this.markQuestion);\r\n  }\r\n\r\n  updateRecord(update?) {\r\n    return new Observable((observer: Subscriber<any>) => {\r\n      if (update) {\r\n        this.setParams();\r\n        const {recordingType} = this;\r\n        // 录播大纲，目标或阶段\r\n        if (recordingType.id && LocalStorageUtil.getSelectedCourse().teachType === '22') {\r\n          let type;\r\n          let key;\r\n          const isOutLine = String(this.recordingType.markQuestiontype) === '3';\r\n          if (String(this.recordingType.markQuestiontype) === '1') { // 目标测试\r\n            type = 'updateTheTargetScore';\r\n            key = 'studyTimeSectionId';\r\n          } else if (String(this.recordingType.markQuestiontype) === '2') { // 阶段测试\r\n            type = 'updateTheStageScore';\r\n            key = 'stageId';\r\n          } else if (isOutLine) { // 大纲视图\r\n            type = 'updateTheTargetScore';\r\n            key = 'studyTimeSectionId';\r\n          }\r\n          if (type) {\r\n            this.tikuService[type]({\r\n              [key]: recordingType.id,\r\n              score: Number(this.fraction)\r\n            }).subscribe((res) => {\r\n              if (res.status === 200) {\r\n                observer.next(true);\r\n              } else {\r\n                this.message.error(res.message);\r\n                observer.next(false);\r\n              }\r\n              this.observerNext(observer, null, false);\r\n            }, err => {\r\n              this.observerNext(observer, false);\r\n            });\r\n          } else {\r\n            this.observerNext(observer, true);\r\n          }\r\n        } else {\r\n          this.observerNext(observer, true);\r\n        }\r\n      } else {\r\n        this.observerNext(observer, true);\r\n      }\r\n    });\r\n  }\r\n\r\n  observerNext(observer, flag, next = true) {\r\n    if (next) {\r\n      observer.next(flag);\r\n    }\r\n    observer.complete();\r\n    observer.unsubscribe();\r\n  }\r\n\r\n  preStep() {\r\n    this.currentIndex--;\r\n  }\r\n\r\n  changeStep(i) {\r\n    this.currentIndex = i;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  showModal(): void {\r\n    this.isVisible = true;\r\n  }\r\n\r\n  handleOk(): void {\r\n    console.log('Button ok clicked!');\r\n    this.isVisible = false;\r\n  }\r\n\r\n  handleCancel(): void {\r\n    console.log('Button cancel clicked!');\r\n    this.isVisible = false;\r\n  }\r\n\r\n\r\n  submitAnswer() {\r\n    this.notification.lookAnswer.emit(this.currentIndex);\r\n  }\r\n\r\n\r\n  private getRecord(param) {\r\n    return ToolsUtil.getAjax(`${environment.paperApi}api/getExamedRecord`, param);\r\n  }\r\n\r\n  private convertData(data) {\r\n    try {\r\n      let record;\r\n      const result1 = JSON.parse(data[0]);\r\n      if (result1.code === 200) {\r\n        record = result1.data.examRecords.answers;\r\n      }\r\n\r\n      const paperDataCache = data[1].data;\r\n      const paperData = paperDataCache.groups;\r\n      const {param1, param2, param3, param4, param5, param6, param7, param8, param9, param10} = paperDataCache.paper;\r\n      this.paramExpand = {param1, param2, param3, param4, param5, param6, param7, param8, param9, param10};\r\n\r\n      const {markQuestion} = this;\r\n      const recordIds = Object.keys(record);\r\n      const recordLength = recordIds.length;\r\n\r\n      // 还原答案\r\n      LocalStorageUtil.putAnswers(record);\r\n      recordIds.forEach((item) => { // 做题答案\r\n        paperData.every((paperItem, paperItemIndex) => {  // 试卷题目\r\n          return this.enumKey.every((itemP) => {\r\n            if (paperItem[itemP]) {\r\n              if (paperItem[itemP].id === item) { // 找到对应题目\r\n                // 收集做过题目\r\n                if (markQuestion.length) {\r\n                  if (markQuestion.every((question, j) => {\r\n                    if (question.knowledgePointCode === paperItem.knowledgePointCode) {\r\n                      this.markQuestion[j][itemP] = paperItem[itemP];\r\n                    } else {\r\n                      return true;\r\n                    }\r\n                  })) {\r\n                    this.markQuestion.push({\r\n                      [itemP]: paperItem[itemP],\r\n                      knowledgePointCode: paperItem.knowledgePointCode\r\n                    });\r\n                  }\r\n                } else {\r\n                  this.markQuestion.push({\r\n                    [itemP]: paperItem[itemP],\r\n                    knowledgePointCode: paperItem.knowledgePointCode\r\n                  });\r\n                }\r\n                // 根据做题答案回显每道题回填isCorrect\r\n                paperData[paperItemIndex][itemP].isCorrect = record[item].isCorrect;\r\n                // 根据正确答案回填isSuccess\r\n                const correctAnswer = atob(paperItem[itemP].answer).split(',');\r\n                correctAnswer.forEach((userasw) => {\r\n                  paperData[paperItemIndex][itemP].questionOptions.every(((answer, innerIndex) => {\r\n                    if (userasw === answer.answerOption) {\r\n                      paperData[paperItemIndex][itemP].questionOptions[innerIndex].isSuccess = true;\r\n                    } else {\r\n                      return true;\r\n                    }\r\n                  }));\r\n                });\r\n                // 获取用户答案\r\n                const userAns = record[item].userAnswer.split(',');\r\n                // 获取用户答错的\r\n                const errorAnswer = [];\r\n                userAns.forEach((userAnswerItem) => {\r\n                  paperData[paperItemIndex][itemP].questionOptions.forEach(((answerX, innerIndexX) => {\r\n                    if (userAnswerItem === answerX.answerOption) {\r\n                      paperData[paperItemIndex][itemP].questionOptions[innerIndexX].isSelect = true;\r\n                    }\r\n                  }));\r\n                  if (correctAnswer.indexOf(userAnswerItem) < 0) {\r\n                    errorAnswer.push(userAnswerItem);\r\n                  }\r\n                });\r\n                // 根据用户答错的回填isError\r\n                errorAnswer.forEach((userasw) => {\r\n                  paperData[paperItemIndex][itemP].questionOptions.every(((answer, innerIndex) => {\r\n                    if (userasw === answer.answerOption) {\r\n                      paperData[paperItemIndex][itemP].questionOptions[innerIndex].isError = true;\r\n                    } else {\r\n                      return true;\r\n                    }\r\n                  }));\r\n                });\r\n              } else {\r\n                return true;\r\n              }\r\n            } else {\r\n              return true;\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n      this.smartQuestion = paperData;\r\n      if (recordLength) {\r\n        const recordLastId = this.getLastId(recordIds);\r\n        // 找到下一个currentIndex/currenType\r\n        this.smartQuestion.every((item, itemi) => {\r\n          return this.enumKey.every(itemx => {\r\n            if (item[itemx]) {\r\n              if (item[itemx].id === recordLastId) {\r\n                if (\r\n                  (itemx !== 'mediumQuestion')\r\n                  ||\r\n                  ((Number(item[itemx].isCorrect) === 0 && !item.easyQuestion)\r\n                    ||\r\n                    (Number(item[itemx].isCorrect) === 2 && !item.difficultQuestion))\r\n                ) { // 下一个知识点\r\n                  this.currentIndex = itemi + 1;\r\n                  this.currenType = 'mediumQuestion';\r\n                } else { // 当前知识点下一道题\r\n                  this.currentIndex = itemi;\r\n                  if (Number(item[itemx].isCorrect) === 2) {\r\n                    this.currenType = 'difficultQuestion';\r\n                  } else {\r\n                    this.currenType = 'easyQuestion';\r\n                  }\r\n                }\r\n              } else {\r\n                return true;\r\n              }\r\n            } else {\r\n              return true;\r\n            }\r\n          });\r\n        });\r\n        // 收集做过题目知识点\r\n        new Array(this.currentIndex).fill(0).forEach((xx) => {\r\n          this.knowledgePointsParam[this.smartQuestion[xx].knowledgePointCode] = true;\r\n        });\r\n      }\r\n      const {currentIndex, smartQuestion, currenType} = this;\r\n      if ((currentIndex > smartQuestion.length - 1)\r\n        ||\r\n        (currentIndex === (smartQuestion.length - 1) && (!smartQuestion[currentIndex][currenType]))) {\r\n        this.setParams();\r\n        this.gotoViewAnswer();\r\n      } else {\r\n        const url = this.smartQuestion[this.currentIndex][this.currenType].videoAnalysis;\r\n        this.videoAnalysis = url ?\r\n          this.sanitizer.bypassSecurityTrustResourceUrl(this.prefix + url) : '';\r\n      }\r\n    } catch (e) {\r\n      this.errorMessage('获取试卷信息出错，请稍后再试');\r\n    }\r\n  }\r\n\r\n  getTips() {\r\n    if (!this.tips) {\r\n      if (!this.paperUuid) {\r\n        this.tips = '正在获取信息中...';\r\n      } else {\r\n        this.tips = '正在获取信息中...';\r\n      }\r\n    }\r\n    return this.tips;\r\n  }\r\n\r\n  showModalEmit(flag: boolean) {\r\n    this.isPreviewpolyway = flag;\r\n  }\r\n\r\n\r\n  // 获取当前题目索引\r\n  getCurrentNumber() {\r\n    const {smartQuestion, currentIndex, currenType} = this;\r\n    let current = 0;\r\n    smartQuestion.every((item, j) => {\r\n      if (currentIndex >= j) {\r\n        if (item.easyQuestion || item.difficultQuestion) { // 一个知识点多道题\r\n          if (currentIndex === j) { // 最后一个知识点\r\n            if (currenType === 'mediumQuestion') {\r\n              current += 1;\r\n            } else {\r\n              current += 2;\r\n            }\r\n          } else {  // 除了最后的前面知识点\r\n            if ((String(item.mediumQuestion.isCorrect) === '0' && !item.easyQuestion)\r\n              ||\r\n              (String(item.mediumQuestion.isCorrect) === '2' && !item.difficultQuestion)) {\r\n              current += 1;\r\n            } else {\r\n              current += 2;\r\n            }\r\n            return true;\r\n          }\r\n        } else { // 一个知识点一道题\r\n          current += 1;\r\n          return true;\r\n        }\r\n      }\r\n    });\r\n    return current;\r\n  }\r\n\r\n// 获取所有题目数 todo:如果是有两道题的情况那么无法确定总共会做多少题目\r\n  getTotalQuestionNumber() {\r\n    let total = this.smartQuestion.length;\r\n    this.smartQuestion.forEach(question => {\r\n      if (Object.keys(question).length > 2) { // 如果一个知识点有多道题\r\n        // if (!((String(item.mediumQuestion.isCorrect) === '0' && !item.easyQuestion)\r\n        //    ||\r\n        //    (String(item.mediumQuestion.isCorrect) === '2' && !item.difficultQuestion))) {\r\n        total += 1;\r\n        // }\r\n      }\r\n    });\r\n    return total;\r\n  }\r\n\r\n\r\n  ifLastQuestion() {\r\n    const {currentIndex, smartQuestion, currenType} = this;\r\n    const flag = (currentIndex === (smartQuestion.length - 1)) &&\r\n      ((currenType !== 'mediumQuestion')\r\n        ||\r\n        (smartQuestion[currentIndex].mediumQuestion.isCorrect === '0' && !smartQuestion[currentIndex].easyQuestion)\r\n        ||\r\n        (smartQuestion[currentIndex].mediumQuestion.isCorrect === '2' && !smartQuestion[currentIndex].difficultQuestion)\r\n      );\r\n    return flag;\r\n  }\r\n\r\n  getLastStatus(fn) {\r\n    fn(this.ifLastQuestion());\r\n  }\r\n\r\n  private getLastId(recordIds: string[]) {\r\n    const arr = recordIds.map((recordId) => {\r\n      const obj: any = {};\r\n      this.smartQuestion.every((item, itemI) => {\r\n        return this.enumKey.every((inner, innerIndex) => {\r\n          if (item[inner]) {\r\n            if (item[inner].id === recordId) {\r\n              obj.currentIndex = itemI;\r\n              obj.currentType = inner;\r\n              obj.id = recordId;\r\n            } else {\r\n              return true;\r\n            }\r\n          } else {\r\n            return true;\r\n          }\r\n\r\n        });\r\n      });\r\n      return obj;\r\n    });\r\n    arr.sort((a, b) => {\r\n      if (a.currentIndex > b.currentIndex) {\r\n        return 1;\r\n      }\r\n      if (a.currentIndex < b.currentIndex) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n    // 找到当前currentIndex/currentType\r\n    const lastArr = arr.filter(e => e.currentIndex === arr[arr.length - 1].currentIndex);\r\n    if (lastArr.length > 1) {\r\n      return lastArr.filter(e => e.currentType !== 'mediumQuestion')[0].id;\r\n    } else {\r\n      return lastArr[0].id;\r\n    }\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\n\r\nimport {ExerciseBankComponent} from './exercise-bank.component';\r\nimport {ViewAnswerComponent} from './exercises-lib/view-answer/view-answer.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: ExerciseBankComponent, children: [],\r\n  },\r\n  {\r\n    path: 'view-answer', component: ViewAnswerComponent, children: [],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ExerciseBankRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {ExerciseBankComponent} from './exercise-bank.component';\r\nimport {ExerciseBankRoutingModule} from './exercise-bank-routing.module';\r\nimport {SmartQuestionComponent} from './exercises-lib/smart-question/smart-question.component';\r\nimport {ViewAnswerComponent} from './exercises-lib/view-answer/view-answer.component';\r\nimport {ExerciseseaderComponent} from './exercises-lib/exercises-header/exercises-header.component';\r\nimport {SharedModule} from '@app/shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ExerciseBankComponent,\r\n    SmartQuestionComponent,\r\n    ViewAnswerComponent,\r\n    ExerciseseaderComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ExerciseBankRoutingModule\r\n  ]\r\n})\r\n\r\nexport class ExerciseBankModule {\r\n}\r\n"]}